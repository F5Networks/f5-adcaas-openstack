language: python
sudo: required

services:
  - postgresql
  - docker

jobs:
  include:
    - stage: test-app-waf
      install:
        - npm --prefix app/waf install
      before_script:
        - export PG_HOST=localhost
      script:
        - npm --prefix app/waf test
        - npm --prefix app/waf run coverage
        - npm --prefix app/waf run coveralls
      deploy:
        provider: script
        on:
          branch: master
        skip_cleanup: true
        script:
          - scripts/publish_api_ref.sh

jobs:
  include:
    - stage: publish-docs
      before_install:
        - docker pull f5devcentral/containthedocs:latest
      install: 
         - pip install awscli --upgrade
      script:
         - ./scripts/docker-docs.sh ./scripts/test-docs.sh
      deploy:
      # DEPLOY TO STAGING
      - provider: s3
        skip_cleanup: true
        access_key_id: $AWS_ACCESS_KEY_ID
        secret_access_key: $AWS_SECRET_ACCESS_KEY
        bucket: $AWS_S3_STAGING
        local_dir: docs/_build/html
        upload_dir: $AWS_DIR
        on:
          branch: master
          repo: F5Networks/f5-adcaas-openstack
      # DEPLOY TO PRODUCTION
      - provider: s3
        skip_cleanup: true
        access_key_id: $AWS_ACCESS_KEY_ID
        secret_access_key: $AWS_SECRET_ACCESS_KEY
        bucket: $AWS_S3_BUCKET
        local_dir: docs/_build/html
        upload_dir: $AWS_DIR
        on:
          branch: v2
          repo: F5Networks/f5-adcaas-openstack

      after_deploy:
        - aws cloudfront create-invalidation --distribution-id $AWS_DIST_ID --paths $AWS_DIR 
