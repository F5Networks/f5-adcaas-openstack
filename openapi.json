{
  "openapi": "3.0.0",
  "info": {
    "title": "F5 ADCaaS for OpenStack",
    "version": "1.0.0"
  },
  "paths": {
    "/adcaas/v1/adcs/count": {
      "get": {
        "x-controller-name": "AdcController",
        "x-operation-name": "count",
        "tags": [
          "AdcController"
        ],
        "responses": {
          "200": {
            "description": "ADC resource count",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "number"
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "style": "deepObject",
            "explode": true,
            "schema": {
              "type": "object",
              "additionalProperties": true
            }
          }
        ],
        "operationId": "AdcController.count"
      }
    },
    "/adcaas/v1/adcs/{adcId}/tenants/{tenantId}": {
      "get": {
        "x-controller-name": "AdcController",
        "x-operation-name": "findTenant",
        "tags": [
          "AdcController"
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieve Tenant resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "tenant": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        }
                      },
                      "example": {
                        "id": "11111111-2222-3333-4444-555555555555"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "adcId",
            "description": "ADC resource ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": ""
            }
          },
          {
            "name": "tenantId",
            "description": "OpenStack project ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": ""
            }
          }
        ],
        "operationId": "AdcController.findTenant"
      }
    },
    "/adcaas/v1/adcs/{adcId}/tenants": {
      "get": {
        "x-controller-name": "AdcController",
        "x-operation-name": "findTenants",
        "tags": [
          "AdcController"
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieve Tenant resources",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "tenants": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          }
                        },
                        "example": {
                          "id": "11111111-2222-3333-4444-555555555555"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "adcId",
            "description": "ADC resource ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": ""
            }
          }
        ],
        "operationId": "AdcController.findTenants"
      }
    },
    "/adcaas/v1/adcs/{adcId}": {
      "patch": {
        "x-controller-name": "AdcController",
        "x-operation-name": "updateById",
        "tags": [
          "AdcController"
        ],
        "responses": {
          "204": {
            "description": "Successfully update ADC resource"
          },
          "404": {
            "description": "Can not find ADC resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array"
                    }
                  },
                  "example": {
                    "statusCode": 404,
                    "name": "Error",
                    "code": "ENTITY_NOT_FOUND"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "adcId",
            "description": "ADC resource ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": ""
            }
          }
        ],
        "requestBody": {
          "description": "ADC resource properties that need to be updated",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [],
                "properties": {
                  "id": false,
                  "name": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 50
                  },
                  "description": {
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 200
                  },
                  "tenantId": false,
                  "createdAt": false,
                  "updatedAt": false
                },
                "example": {
                  "name": "My name",
                  "description": "My description"
                }
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "AdcController.updateById"
      },
      "get": {
        "x-controller-name": "AdcController",
        "x-operation-name": "findById",
        "tags": [
          "AdcController"
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieve ADC resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "adc": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "tenantId": {
                          "type": "string"
                        },
                        "createdAt": {
                          "type": "date"
                        },
                        "updatedAt": {
                          "type": "date"
                        },
                        "type": {
                          "type": "string"
                        },
                        "networks": {
                          "type": "object"
                        },
                        "compute": {
                          "type": "object"
                        },
                        "management": {
                          "type": "object"
                        },
                        "license": {
                          "type": "string"
                        },
                        "status": {
                          "type": "string"
                        },
                        "lastErr": {
                          "type": "string"
                        }
                      },
                      "example": {
                        "id": "11111111-2222-3333-4444-555555555555",
                        "name": "My name",
                        "description": "My description",
                        "createdAt": "2019-03-05T08:40:25.000Z",
                        "updatedAt": "2019-03-05T08:40:25.100Z",
                        "type": "VE",
                        "networks": {
                          "mgmt1": {
                            "type": "mgmt",
                            "networkId": "80ccb4f0-5a9f-11e9-9721-3b33816a88bd",
                            "fixedIp": "172.16.11.100"
                          },
                          "failover1": {
                            "type": "ha",
                            "networkId": "b1d0a920-5aa0-11e9-9721-3b33816a88bd"
                          },
                          "internal1": {
                            "type": "int",
                            "networkId": "ba6e2a80-5aa0-11e9-9721-3b33816a88bd"
                          },
                          "external2": {
                            "type": "ext",
                            "networkId": "c25eca10-5aa0-11e9-9721-3b33816a88bd",
                            "floatingIp": "10.250.14.160"
                          }
                        },
                        "compute": {
                          "imageRef": "d4c52d70-5aa0-11e9-9721-3b33816a88bd",
                          "flavorRef": "ff29d6b0-5aa0-11e9-9721-3b33816a88bd",
                          "userData": "#!/bin/bash \necho userData is optional \n"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Can not find ADC resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array"
                    }
                  },
                  "example": {
                    "statusCode": 404,
                    "name": "Error",
                    "code": "ENTITY_NOT_FOUND"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "adcId",
            "description": "ADC resource ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": ""
            }
          }
        ],
        "operationId": "AdcController.findById"
      },
      "delete": {
        "x-controller-name": "AdcController",
        "x-operation-name": "deleteById",
        "tags": [
          "AdcController"
        ],
        "responses": {
          "204": {
            "description": "Successfully delete ADC resource"
          },
          "404": {
            "description": "Can not find ADC resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array"
                    }
                  },
                  "example": {
                    "statusCode": 404,
                    "name": "Error",
                    "code": "ENTITY_NOT_FOUND"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "adcId",
            "description": "ADC resource ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": ""
            }
          }
        ],
        "operationId": "AdcController.deleteById"
      }
    },
    "/adcaas/v1/adcs": {
      "post": {
        "x-controller-name": "AdcController",
        "x-operation-name": "create",
        "tags": [
          "AdcController"
        ],
        "responses": {
          "200": {
            "description": "Successfully create ADC resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "adc": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "tenantId": {
                          "type": "string"
                        },
                        "createdAt": {
                          "type": "date"
                        },
                        "updatedAt": {
                          "type": "date"
                        },
                        "type": {
                          "type": "string"
                        },
                        "networks": {
                          "type": "object"
                        },
                        "compute": {
                          "type": "object"
                        },
                        "management": {
                          "type": "object"
                        },
                        "license": {
                          "type": "string"
                        },
                        "status": {
                          "type": "string"
                        },
                        "lastErr": {
                          "type": "string"
                        }
                      },
                      "example": {
                        "id": "11111111-2222-3333-4444-555555555555",
                        "name": "My name",
                        "description": "My description",
                        "createdAt": "2019-03-05T08:40:25.000Z",
                        "updatedAt": "2019-03-05T08:40:25.100Z",
                        "type": "VE",
                        "networks": {
                          "mgmt1": {
                            "type": "mgmt",
                            "networkId": "80ccb4f0-5a9f-11e9-9721-3b33816a88bd",
                            "fixedIp": "172.16.11.100"
                          },
                          "failover1": {
                            "type": "ha",
                            "networkId": "b1d0a920-5aa0-11e9-9721-3b33816a88bd"
                          },
                          "internal1": {
                            "type": "int",
                            "networkId": "ba6e2a80-5aa0-11e9-9721-3b33816a88bd"
                          },
                          "external2": {
                            "type": "ext",
                            "networkId": "c25eca10-5aa0-11e9-9721-3b33816a88bd",
                            "floatingIp": "10.250.14.160"
                          }
                        },
                        "compute": {
                          "imageRef": "d4c52d70-5aa0-11e9-9721-3b33816a88bd",
                          "flavorRef": "ff29d6b0-5aa0-11e9-9721-3b33816a88bd",
                          "userData": "#!/bin/bash \necho userData is optional \n"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid ADC resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array"
                    }
                  },
                  "example": {
                    "statusCode": 400,
                    "name": "BadRequestError"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable ADC resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array"
                    }
                  },
                  "example": {
                    "statusCode": 422,
                    "name": "UnprocessableEntityError",
                    "message": "The request body is invalid. See error object `details` property for more info.",
                    "code": "VALIDATION_FAILED"
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "ADC resource that need to be created",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "type",
                  "compute"
                ],
                "properties": {
                  "id": false,
                  "name": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 50
                  },
                  "description": {
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 200
                  },
                  "tenantId": false,
                  "createdAt": false,
                  "updatedAt": false,
                  "type": {
                    "type": "string",
                    "enum": [
                      "VE",
                      "HW"
                    ]
                  },
                  "networks": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "mgmt",
                            "ha",
                            "int",
                            "ext"
                          ]
                        },
                        "networkId": {
                          "type": "string",
                          "format": "uuid"
                        },
                        "fixedIp": {
                          "type": "string",
                          "format": "ipv4"
                        },
                        "floatingIp": {
                          "type": "string",
                          "format": "ipv4"
                        }
                      },
                      "required": [
                        "type",
                        "networkId"
                      ],
                      "additionalProperties": false
                    },
                    "minProperties": 4,
                    "maxProperties": 100
                  },
                  "compute": {
                    "type": "object",
                    "properties": {
                      "imageRef": {
                        "type": "string",
                        "format": "uuid"
                      },
                      "flavorRef": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 100
                      },
                      "sshKey": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 10000
                      },
                      "userData": {
                        "type": "string",
                        "minLength": 1
                      }
                    },
                    "additionalProperties": false,
                    "required": [
                      "imageRef",
                      "flavorRef"
                    ]
                  }
                },
                "example": {
                  "name": "My name",
                  "description": "My description",
                  "type": "VE",
                  "networks": {
                    "mgmt1": {
                      "type": "mgmt",
                      "networkId": "80ccb4f0-5a9f-11e9-9721-3b33816a88bd",
                      "fixedIp": "172.16.11.100"
                    },
                    "failover1": {
                      "type": "ha",
                      "networkId": "b1d0a920-5aa0-11e9-9721-3b33816a88bd"
                    },
                    "internal1": {
                      "type": "int",
                      "networkId": "ba6e2a80-5aa0-11e9-9721-3b33816a88bd"
                    },
                    "external2": {
                      "type": "ext",
                      "networkId": "c25eca10-5aa0-11e9-9721-3b33816a88bd",
                      "floatingIp": "10.250.14.160"
                    }
                  },
                  "compute": {
                    "imageRef": "d4c52d70-5aa0-11e9-9721-3b33816a88bd",
                    "flavorRef": "ff29d6b0-5aa0-11e9-9721-3b33816a88bd",
                    "userData": "#!/bin/bash \necho userData is optional \n"
                  }
                }
              }
            }
          }
        },
        "operationId": "AdcController.create"
      },
      "get": {
        "x-controller-name": "AdcController",
        "x-operation-name": "find",
        "tags": [
          "AdcController"
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieve ADC resources",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "adcs": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "tenantId": {
                            "type": "string"
                          },
                          "createdAt": {
                            "type": "date"
                          },
                          "updatedAt": {
                            "type": "date"
                          },
                          "type": {
                            "type": "string"
                          },
                          "networks": {
                            "type": "object"
                          },
                          "compute": {
                            "type": "object"
                          },
                          "management": {
                            "type": "object"
                          },
                          "license": {
                            "type": "string"
                          },
                          "status": {
                            "type": "string"
                          },
                          "lastErr": {
                            "type": "string"
                          }
                        },
                        "example": {
                          "id": "11111111-2222-3333-4444-555555555555",
                          "name": "My name",
                          "description": "My description",
                          "createdAt": "2019-03-05T08:40:25.000Z",
                          "updatedAt": "2019-03-05T08:40:25.100Z",
                          "type": "VE",
                          "networks": {
                            "mgmt1": {
                              "type": "mgmt",
                              "networkId": "80ccb4f0-5a9f-11e9-9721-3b33816a88bd",
                              "fixedIp": "172.16.11.100"
                            },
                            "failover1": {
                              "type": "ha",
                              "networkId": "b1d0a920-5aa0-11e9-9721-3b33816a88bd"
                            },
                            "internal1": {
                              "type": "int",
                              "networkId": "ba6e2a80-5aa0-11e9-9721-3b33816a88bd"
                            },
                            "external2": {
                              "type": "ext",
                              "networkId": "c25eca10-5aa0-11e9-9721-3b33816a88bd",
                              "floatingIp": "10.250.14.160"
                            }
                          },
                          "compute": {
                            "imageRef": "d4c52d70-5aa0-11e9-9721-3b33816a88bd",
                            "flavorRef": "ff29d6b0-5aa0-11e9-9721-3b33816a88bd",
                            "userData": "#!/bin/bash \necho userData is optional \n"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "style": "deepObject",
            "explode": true,
            "schema": {
              "type": "object",
              "properties": {
                "where": {
                  "type": "object",
                  "additionalProperties": true
                },
                "fields": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "boolean"
                    },
                    "name": {
                      "type": "boolean"
                    },
                    "description": {
                      "type": "boolean"
                    },
                    "tenantId": {
                      "type": "boolean"
                    },
                    "createdAt": {
                      "type": "boolean"
                    },
                    "updatedAt": {
                      "type": "boolean"
                    },
                    "type": {
                      "type": "boolean"
                    },
                    "networks": {
                      "type": "boolean"
                    },
                    "compute": {
                      "type": "boolean"
                    },
                    "management": {
                      "type": "boolean"
                    },
                    "license": {
                      "type": "boolean"
                    },
                    "status": {
                      "type": "boolean"
                    },
                    "lastErr": {
                      "type": "boolean"
                    }
                  },
                  "additionalProperties": false
                },
                "offset": {
                  "type": "integer",
                  "minimum": 0
                },
                "limit": {
                  "type": "integer",
                  "minimum": 1,
                  "example": 100
                },
                "skip": {
                  "type": "integer",
                  "minimum": 0
                },
                "order": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "additionalProperties": false
            }
          }
        ],
        "operationId": "AdcController.find"
      }
    },
    "/adcaas/v1/applications/count": {
      "get": {
        "x-controller-name": "ApplicationController",
        "x-operation-name": "count",
        "tags": [
          "ApplicationController"
        ],
        "responses": {
          "200": {
            "description": "Application model count",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "number"
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "style": "deepObject",
            "explode": true,
            "schema": {
              "type": "object",
              "additionalProperties": true
            }
          }
        ],
        "operationId": "ApplicationController.count"
      }
    },
    "/adcaas/v1/applications/{applicationId}/cleanup": {
      "post": {
        "x-controller-name": "ApplicationController",
        "x-operation-name": "cleanupById",
        "tags": [
          "ApplicationController"
        ],
        "responses": {
          "204": {
            "description": "Successfully cleanup Application resource"
          },
          "404": {
            "description": "Can not find Application resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array"
                    }
                  },
                  "example": {
                    "statusCode": 404,
                    "name": "Error",
                    "code": "ENTITY_NOT_FOUND"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "applicationId",
            "description": "Application resource ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": ""
            }
          }
        ],
        "operationId": "ApplicationController.cleanupById"
      }
    },
    "/adcaas/v1/applications/{applicationId}/declarations/{declarationId}/deploy": {
      "post": {
        "x-controller-name": "DeclarationController",
        "x-operation-name": "proxyDeploy",
        "tags": [
          "DeclarationController"
        ],
        "responses": {
          "204": {
            "description": "Successfully deploy Declaration resource"
          },
          "404": {
            "description": "Can not find Declaration resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array"
                    }
                  },
                  "example": {
                    "statusCode": 404,
                    "name": "Error",
                    "code": "ENTITY_NOT_FOUND"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Fail to deploy Declaration resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array"
                    }
                  },
                  "example": {
                    "statusCode": 422,
                    "name": "UnprocessableEntityError",
                    "message": "The request body is invalid. See error object `details` property for more info.",
                    "code": "VALIDATION_FAILED"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "applicationId",
            "description": "Application resource ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": ""
            }
          },
          {
            "name": "declarationId",
            "description": "Declaration resource ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": ""
            }
          }
        ],
        "requestBody": {
          "description": "Deploy the declaration on an ADC.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [],
                "properties": {
                  "adcId": {
                    "type": "string"
                  }
                },
                "example": {
                  "adcId": "11111111-2222-3333-4444-555555555555"
                }
              }
            }
          },
          "x-parameter-index": 2
        },
        "operationId": "DeclarationController.proxyDeploy"
      }
    },
    "/adcaas/v1/applications/{applicationId}/declarations/{declarationId}": {
      "patch": {
        "x-controller-name": "DeclarationController",
        "x-operation-name": "updateByID",
        "tags": [
          "DeclarationController"
        ],
        "responses": {
          "204": {
            "description": "Successfully update Declaration resource"
          },
          "404": {
            "description": "Can not find Declaration resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array"
                    }
                  },
                  "example": {
                    "statusCode": 404,
                    "name": "Error",
                    "code": "ENTITY_NOT_FOUND"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "applicationId",
            "description": "Application resource ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": ""
            }
          },
          {
            "name": "declarationId",
            "description": "Declaration resource ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": ""
            }
          }
        ],
        "requestBody": {
          "description": "Declaration resource properties that need to be updated",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [],
                "properties": {
                  "id": false,
                  "name": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 50
                  },
                  "description": {
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 200
                  },
                  "tenantId": false,
                  "createdAt": false,
                  "updatedAt": false,
                  "adcId": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "defaultDeclarationId": {
                    "type": "string",
                    "format": "uuid"
                  }
                },
                "example": {
                  "name": "My name",
                  "description": "My description",
                  "adcId": "11111111-2222-3333-4444-555555555555",
                  "defaultDeclarationId": "11111111-2222-3333-4444-555555555555"
                }
              }
            }
          },
          "x-parameter-index": 2
        },
        "operationId": "DeclarationController.updateByID"
      },
      "get": {
        "x-controller-name": "DeclarationController",
        "x-operation-name": "findByID",
        "tags": [
          "DeclarationController"
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieve Declaration resources",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "declaration": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "tenantId": {
                          "type": "string"
                        },
                        "createdAt": {
                          "type": "date"
                        },
                        "updatedAt": {
                          "type": "date"
                        },
                        "applicationId": {
                          "type": "string"
                        },
                        "content": {
                          "type": "object"
                        }
                      },
                      "example": {
                        "id": "11111111-2222-3333-4444-555555555555",
                        "name": "My name",
                        "description": "My description",
                        "createdAt": "2019-03-05T08:40:25.000Z",
                        "updatedAt": "2019-03-05T08:40:25.100Z",
                        "applicationId": "11111111-2222-3333-4444-555555555555",
                        "content": {}
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Can not find Declaration resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array"
                    }
                  },
                  "example": {
                    "statusCode": 404,
                    "name": "Error",
                    "code": "ENTITY_NOT_FOUND"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "applicationId",
            "description": "Application resource ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": ""
            }
          },
          {
            "name": "declarationId",
            "description": "Declaration resource ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": ""
            }
          }
        ],
        "operationId": "DeclarationController.findByID"
      },
      "delete": {
        "x-controller-name": "DeclarationController",
        "x-operation-name": "deleteByID",
        "tags": [
          "DeclarationController"
        ],
        "responses": {
          "204": {
            "description": "Successfully delete Declaration resource"
          },
          "404": {
            "description": "Can not find Declaration resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array"
                    }
                  },
                  "example": {
                    "statusCode": 404,
                    "name": "Error",
                    "code": "ENTITY_NOT_FOUND"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "applicationId",
            "description": "Application resource ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": ""
            }
          },
          {
            "name": "declarationId",
            "description": "Declaration resource ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": ""
            }
          }
        ],
        "operationId": "DeclarationController.deleteByID"
      }
    },
    "/adcaas/v1/applications/{applicationId}/declarations": {
      "post": {
        "x-controller-name": "DeclarationController",
        "x-operation-name": "create",
        "tags": [
          "DeclarationController"
        ],
        "responses": {
          "200": {
            "description": "Successfully create Declaration resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "declaration": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "tenantId": {
                          "type": "string"
                        },
                        "createdAt": {
                          "type": "date"
                        },
                        "updatedAt": {
                          "type": "date"
                        },
                        "applicationId": {
                          "type": "string"
                        },
                        "content": {
                          "type": "object"
                        }
                      },
                      "example": {
                        "id": "11111111-2222-3333-4444-555555555555",
                        "name": "My name",
                        "description": "My description",
                        "createdAt": "2019-03-05T08:40:25.000Z",
                        "updatedAt": "2019-03-05T08:40:25.100Z",
                        "applicationId": "11111111-2222-3333-4444-555555555555",
                        "content": {}
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Fail to create Declaration resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array"
                    }
                  },
                  "example": {
                    "statusCode": 422,
                    "name": "UnprocessableEntityError",
                    "message": "The request body is invalid. See error object `details` property for more info.",
                    "code": "VALIDATION_FAILED"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "applicationId",
            "description": "Application resource ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": ""
            }
          }
        ],
        "requestBody": {
          "description": "Declaration resource that need to be created",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [],
                "properties": {
                  "id": false,
                  "name": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 50
                  },
                  "description": {
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 200
                  },
                  "tenantId": false,
                  "createdAt": false,
                  "updatedAt": false
                },
                "example": {
                  "name": "My name",
                  "description": "My description"
                }
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "DeclarationController.create"
      },
      "get": {
        "x-controller-name": "DeclarationController",
        "x-operation-name": "find",
        "tags": [
          "DeclarationController"
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieve Declaration resources",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "declarations": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "tenantId": {
                            "type": "string"
                          },
                          "createdAt": {
                            "type": "date"
                          },
                          "updatedAt": {
                            "type": "date"
                          },
                          "applicationId": {
                            "type": "string"
                          },
                          "content": {
                            "type": "object"
                          }
                        },
                        "example": {
                          "id": "11111111-2222-3333-4444-555555555555",
                          "name": "My name",
                          "description": "My description",
                          "createdAt": "2019-03-05T08:40:25.000Z",
                          "updatedAt": "2019-03-05T08:40:25.100Z",
                          "applicationId": "11111111-2222-3333-4444-555555555555",
                          "content": {}
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "applicationId",
            "description": "Application resource ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": ""
            }
          }
        ],
        "operationId": "DeclarationController.find"
      }
    },
    "/adcaas/v1/applications/{applicationId}/deploy": {
      "post": {
        "x-controller-name": "ApplicationController",
        "x-operation-name": "deployById",
        "tags": [
          "ApplicationController"
        ],
        "responses": {
          "204": {
            "description": "Successfully deploy Application resource"
          },
          "404": {
            "description": "Can not find Application resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array"
                    }
                  },
                  "example": {
                    "statusCode": 404,
                    "name": "Error",
                    "code": "ENTITY_NOT_FOUND"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Fail to deploy Application resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array"
                    }
                  },
                  "example": {
                    "statusCode": 422,
                    "name": "UnprocessableEntityError",
                    "message": "The request body is invalid. See error object `details` property for more info.",
                    "code": "VALIDATION_FAILED"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "applicationId",
            "description": "Application resource ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": ""
            }
          }
        ],
        "operationId": "ApplicationController.deployById"
      }
    },
    "/adcaas/v1/applications/{applicationId}": {
      "patch": {
        "x-controller-name": "ApplicationController",
        "x-operation-name": "updateById",
        "tags": [
          "ApplicationController"
        ],
        "responses": {
          "204": {
            "description": "Successfully update Application resource"
          },
          "404": {
            "description": "Can not find Application resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array"
                    }
                  },
                  "example": {
                    "statusCode": 404,
                    "name": "Error",
                    "code": "ENTITY_NOT_FOUND"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "applicationId",
            "description": "Application resource ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": ""
            }
          }
        ],
        "requestBody": {
          "description": "Application resource properties that need to be updated",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [],
                "properties": {
                  "id": false,
                  "name": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 50
                  },
                  "description": {
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 200
                  },
                  "tenantId": false,
                  "createdAt": false,
                  "updatedAt": false,
                  "adcId": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "defaultDeclarationId": {
                    "type": "string",
                    "format": "uuid"
                  }
                },
                "example": {
                  "name": "My name",
                  "description": "My description",
                  "adcId": "11111111-2222-3333-4444-555555555555",
                  "defaultDeclarationId": "11111111-2222-3333-4444-555555555555"
                }
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "ApplicationController.updateById"
      },
      "get": {
        "x-controller-name": "ApplicationController",
        "x-operation-name": "findById",
        "tags": [
          "ApplicationController"
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieve Application resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "application": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "tenantId": {
                          "type": "string"
                        },
                        "createdAt": {
                          "type": "date"
                        },
                        "updatedAt": {
                          "type": "date"
                        },
                        "status": {
                          "type": "string"
                        },
                        "adcId": {
                          "type": "string"
                        },
                        "defaultDeclarationId": {
                          "type": "string"
                        }
                      },
                      "example": {
                        "id": "11111111-2222-3333-4444-555555555555",
                        "name": "My name",
                        "description": "My description",
                        "createdAt": "2019-03-05T08:40:25.000Z",
                        "updatedAt": "2019-03-05T08:40:25.100Z",
                        "status": "TBD",
                        "adcId": "11111111-2222-3333-4444-555555555555",
                        "defaultDeclarationId": "11111111-2222-3333-4444-555555555555"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Can not find Application resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array"
                    }
                  },
                  "example": {
                    "statusCode": 404,
                    "name": "Error",
                    "code": "ENTITY_NOT_FOUND"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "applicationId",
            "description": "Application resource ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": ""
            }
          }
        ],
        "operationId": "ApplicationController.findById"
      },
      "delete": {
        "x-controller-name": "ApplicationController",
        "x-operation-name": "deleteById",
        "tags": [
          "ApplicationController"
        ],
        "responses": {
          "204": {
            "description": "Successfully delete Application resource"
          },
          "404": {
            "description": "Can not find Application resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array"
                    }
                  },
                  "example": {
                    "statusCode": 404,
                    "name": "Error",
                    "code": "ENTITY_NOT_FOUND"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "applicationId",
            "description": "Application resource ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": ""
            }
          }
        ],
        "operationId": "ApplicationController.deleteById"
      }
    },
    "/adcaas/v1/applications": {
      "post": {
        "x-controller-name": "ApplicationController",
        "x-operation-name": "create",
        "tags": [
          "ApplicationController"
        ],
        "responses": {
          "200": {
            "description": "Successfully create Application resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "application": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "tenantId": {
                          "type": "string"
                        },
                        "createdAt": {
                          "type": "date"
                        },
                        "updatedAt": {
                          "type": "date"
                        },
                        "status": {
                          "type": "string"
                        },
                        "adcId": {
                          "type": "string"
                        },
                        "defaultDeclarationId": {
                          "type": "string"
                        }
                      },
                      "example": {
                        "id": "11111111-2222-3333-4444-555555555555",
                        "name": "My name",
                        "description": "My description",
                        "createdAt": "2019-03-05T08:40:25.000Z",
                        "updatedAt": "2019-03-05T08:40:25.100Z",
                        "status": "TBD",
                        "adcId": "11111111-2222-3333-4444-555555555555",
                        "defaultDeclarationId": "11111111-2222-3333-4444-555555555555"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid Application resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array"
                    }
                  },
                  "example": {
                    "statusCode": 400,
                    "name": "BadRequestError"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Application resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array"
                    }
                  },
                  "example": {
                    "statusCode": 422,
                    "name": "UnprocessableEntityError",
                    "message": "The request body is invalid. See error object `details` property for more info.",
                    "code": "VALIDATION_FAILED"
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Application resource that need to be created",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [],
                "properties": {
                  "id": false,
                  "name": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 50
                  },
                  "description": {
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 200
                  },
                  "tenantId": false,
                  "createdAt": false,
                  "updatedAt": false,
                  "adcId": {
                    "type": "string",
                    "format": "uuid"
                  }
                },
                "example": {
                  "name": "My name",
                  "description": "My description",
                  "adcId": "11111111-2222-3333-4444-555555555555"
                }
              }
            }
          }
        },
        "operationId": "ApplicationController.create"
      },
      "get": {
        "x-controller-name": "ApplicationController",
        "x-operation-name": "find",
        "tags": [
          "ApplicationController"
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieve Application resources",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "applications": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "tenantId": {
                            "type": "string"
                          },
                          "createdAt": {
                            "type": "date"
                          },
                          "updatedAt": {
                            "type": "date"
                          },
                          "status": {
                            "type": "string"
                          },
                          "adcId": {
                            "type": "string"
                          },
                          "defaultDeclarationId": {
                            "type": "string"
                          }
                        },
                        "example": {
                          "id": "11111111-2222-3333-4444-555555555555",
                          "name": "My name",
                          "description": "My description",
                          "createdAt": "2019-03-05T08:40:25.000Z",
                          "updatedAt": "2019-03-05T08:40:25.100Z",
                          "status": "TBD",
                          "adcId": "11111111-2222-3333-4444-555555555555",
                          "defaultDeclarationId": "11111111-2222-3333-4444-555555555555"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "style": "deepObject",
            "explode": true,
            "schema": {
              "type": "object",
              "properties": {
                "where": {
                  "type": "object",
                  "additionalProperties": true
                },
                "fields": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "boolean"
                    },
                    "name": {
                      "type": "boolean"
                    },
                    "description": {
                      "type": "boolean"
                    },
                    "tenantId": {
                      "type": "boolean"
                    },
                    "createdAt": {
                      "type": "boolean"
                    },
                    "updatedAt": {
                      "type": "boolean"
                    },
                    "status": {
                      "type": "boolean"
                    },
                    "adcId": {
                      "type": "boolean"
                    },
                    "defaultDeclarationId": {
                      "type": "boolean"
                    }
                  },
                  "additionalProperties": false
                },
                "offset": {
                  "type": "integer",
                  "minimum": 0
                },
                "limit": {
                  "type": "integer",
                  "minimum": 1,
                  "example": 100
                },
                "skip": {
                  "type": "integer",
                  "minimum": 0
                },
                "order": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "include": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "relation": {
                        "type": "string"
                      },
                      "scope": {
                        "properties": {
                          "where": {
                            "type": "object",
                            "additionalProperties": true
                          },
                          "fields": {
                            "type": "object",
                            "properties": {},
                            "additionalProperties": true
                          },
                          "offset": {
                            "type": "integer",
                            "minimum": 0
                          },
                          "limit": {
                            "type": "integer",
                            "minimum": 1,
                            "example": 100
                          },
                          "skip": {
                            "type": "integer",
                            "minimum": 0
                          },
                          "order": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        },
                        "additionalProperties": false
                      }
                    }
                  }
                }
              },
              "additionalProperties": false
            }
          }
        ],
        "operationId": "ApplicationController.find"
      }
    },
    "/adcaas/v1/certificates/count": {
      "get": {
        "x-controller-name": "CertificateController",
        "x-operation-name": "count",
        "tags": [
          "CertificateController"
        ],
        "responses": {
          "200": {
            "description": "Certificate model count",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "number"
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "style": "deepObject",
            "explode": true,
            "schema": {
              "type": "object",
              "additionalProperties": true
            }
          }
        ],
        "operationId": "CertificateController.count"
      }
    },
    "/adcaas/v1/certificates/{certificateId}": {
      "patch": {
        "x-controller-name": "CertificateController",
        "x-operation-name": "updateById",
        "tags": [
          "CertificateController"
        ],
        "responses": {
          "204": {
            "description": "Successfully update Certificate resource"
          },
          "404": {
            "description": "Can not find Certificate resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array"
                    }
                  },
                  "example": {
                    "statusCode": 404,
                    "name": "Error",
                    "code": "ENTITY_NOT_FOUND"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "certificateId",
            "description": "Certificate resource ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": ""
            }
          }
        ],
        "requestBody": {
          "description": "Certificate resource properties that need to be updated",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [],
                "properties": {
                  "id": false,
                  "name": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 50
                  },
                  "description": {
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 200
                  },
                  "tenantId": false,
                  "createdAt": false,
                  "updatedAt": false,
                  "certificate": {
                    "type": "string"
                  },
                  "chainCA": {
                    "type": "string"
                  },
                  "issuerCertificate": {
                    "type": "object"
                  },
                  "passphrase": {
                    "type": "string"
                  },
                  "pkcs12": {
                    "type": "string"
                  },
                  "pkcs12Options": {
                    "type": "object"
                  },
                  "privateKey": {
                    "type": "string"
                  },
                  "staplerOCSP": {
                    "type": "object"
                  }
                },
                "example": {
                  "name": "My name",
                  "description": "My description",
                  "certificate": "d7f34226-69b8-4e25-ac51-ad4849653a8",
                  "chainCA": "d7f34226-69b8-4e25-ac53-ad4849653a9",
                  "pkcs12": "d7f34226-69b8-4e25-ac56-ad4849653a0",
                  "privateKey": "d7f34226-69b8-4xxx-ac56-ad484965aaa"
                }
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "CertificateController.updateById"
      },
      "get": {
        "x-controller-name": "CertificateController",
        "x-operation-name": "findById",
        "tags": [
          "CertificateController"
        ],
        "responses": {
          "responses": {
            "200": {
              "description": "Successfully retrieve Certificate resource",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "certificate": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "tenantId": {
                            "type": "string"
                          },
                          "createdAt": {
                            "type": "date"
                          },
                          "updatedAt": {
                            "type": "date"
                          },
                          "certificate": {
                            "type": "string"
                          },
                          "chainCA": {
                            "type": "string"
                          },
                          "issuerCertificate": {
                            "type": "object"
                          },
                          "passphrase": {
                            "type": "string"
                          },
                          "pkcs12": {
                            "type": "string"
                          },
                          "pkcs12Options": {
                            "type": "object"
                          },
                          "privateKey": {
                            "type": "string"
                          },
                          "staplerOCSP": {
                            "type": "object"
                          }
                        },
                        "example": {
                          "id": "11111111-2222-3333-4444-555555555555",
                          "name": "My name",
                          "description": "My description",
                          "createdAt": "2019-03-05T08:40:25.000Z",
                          "updatedAt": "2019-03-05T08:40:25.100Z",
                          "certificate": "d7f34226-69b8-4e25-ac51-ad4849653a8",
                          "chainCA": "d7f34226-69b8-4e25-ac53-ad4849653a9",
                          "pkcs12": "d7f34226-69b8-4e25-ac56-ad4849653a0",
                          "privateKey": "d7f34226-69b8-4xxx-ac56-ad484965aaa"
                        }
                      }
                    }
                  }
                }
              }
            },
            "404": {
              "description": "Can not find Certificate resource",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "statusCode": {
                        "type": "integer"
                      },
                      "name": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string"
                      },
                      "details": {
                        "type": "array"
                      }
                    },
                    "example": {
                      "statusCode": 404,
                      "name": "Error",
                      "code": "ENTITY_NOT_FOUND"
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "certificateId",
            "description": "Certificate resource ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": ""
            }
          }
        ],
        "operationId": "CertificateController.findById"
      },
      "delete": {
        "x-controller-name": "CertificateController",
        "x-operation-name": "deleteById",
        "tags": [
          "CertificateController"
        ],
        "responses": {
          "204": {
            "description": "Successfully delete Certificate resource"
          },
          "404": {
            "description": "Can not find Certificate resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array"
                    }
                  },
                  "example": {
                    "statusCode": 404,
                    "name": "Error",
                    "code": "ENTITY_NOT_FOUND"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "certificateId",
            "description": "Certificate resource ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": ""
            }
          }
        ],
        "operationId": "CertificateController.deleteById"
      }
    },
    "/adcaas/v1/certificates": {
      "post": {
        "x-controller-name": "CertificateController",
        "x-operation-name": "create",
        "tags": [
          "CertificateController"
        ],
        "responses": {
          "200": {
            "description": "Successfully create Certificate resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "certificate": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "tenantId": {
                          "type": "string"
                        },
                        "createdAt": {
                          "type": "date"
                        },
                        "updatedAt": {
                          "type": "date"
                        },
                        "certificate": {
                          "type": "string"
                        },
                        "chainCA": {
                          "type": "string"
                        },
                        "issuerCertificate": {
                          "type": "object"
                        },
                        "passphrase": {
                          "type": "string"
                        },
                        "pkcs12": {
                          "type": "string"
                        },
                        "pkcs12Options": {
                          "type": "object"
                        },
                        "privateKey": {
                          "type": "string"
                        },
                        "staplerOCSP": {
                          "type": "object"
                        }
                      },
                      "example": {
                        "id": "11111111-2222-3333-4444-555555555555",
                        "name": "My name",
                        "description": "My description",
                        "createdAt": "2019-03-05T08:40:25.000Z",
                        "updatedAt": "2019-03-05T08:40:25.100Z",
                        "certificate": "d7f34226-69b8-4e25-ac51-ad4849653a8",
                        "chainCA": "d7f34226-69b8-4e25-ac53-ad4849653a9",
                        "pkcs12": "d7f34226-69b8-4e25-ac56-ad4849653a0",
                        "privateKey": "d7f34226-69b8-4xxx-ac56-ad484965aaa"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid Certificate resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array"
                    }
                  },
                  "example": {
                    "statusCode": 400,
                    "name": "BadRequestError"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Certificate resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array"
                    }
                  },
                  "example": {
                    "statusCode": 422,
                    "name": "UnprocessableEntityError",
                    "message": "The request body is invalid. See error object `details` property for more info.",
                    "code": "VALIDATION_FAILED"
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Certificate resource that need to be created",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [],
                "properties": {
                  "id": false,
                  "name": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 50
                  },
                  "description": {
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 200
                  },
                  "tenantId": false,
                  "createdAt": false,
                  "updatedAt": false,
                  "certificate": {
                    "type": "string"
                  },
                  "chainCA": {
                    "type": "string"
                  },
                  "issuerCertificate": {
                    "type": "object"
                  },
                  "passphrase": {
                    "type": "string"
                  },
                  "pkcs12": {
                    "type": "string"
                  },
                  "pkcs12Options": {
                    "type": "object"
                  },
                  "privateKey": {
                    "type": "string"
                  },
                  "staplerOCSP": {
                    "type": "object"
                  }
                },
                "example": {
                  "name": "My name",
                  "description": "My description",
                  "certificate": "d7f34226-69b8-4e25-ac51-ad4849653a8",
                  "chainCA": "d7f34226-69b8-4e25-ac53-ad4849653a9",
                  "pkcs12": "d7f34226-69b8-4e25-ac56-ad4849653a0",
                  "privateKey": "d7f34226-69b8-4xxx-ac56-ad484965aaa"
                }
              }
            }
          }
        },
        "operationId": "CertificateController.create"
      },
      "get": {
        "x-controller-name": "CertificateController",
        "x-operation-name": "find",
        "tags": [
          "CertificateController"
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieve Certificate resources",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "certificates": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "tenantId": {
                            "type": "string"
                          },
                          "createdAt": {
                            "type": "date"
                          },
                          "updatedAt": {
                            "type": "date"
                          },
                          "certificate": {
                            "type": "string"
                          },
                          "chainCA": {
                            "type": "string"
                          },
                          "issuerCertificate": {
                            "type": "object"
                          },
                          "passphrase": {
                            "type": "string"
                          },
                          "pkcs12": {
                            "type": "string"
                          },
                          "pkcs12Options": {
                            "type": "object"
                          },
                          "privateKey": {
                            "type": "string"
                          },
                          "staplerOCSP": {
                            "type": "object"
                          }
                        },
                        "example": {
                          "id": "11111111-2222-3333-4444-555555555555",
                          "name": "My name",
                          "description": "My description",
                          "createdAt": "2019-03-05T08:40:25.000Z",
                          "updatedAt": "2019-03-05T08:40:25.100Z",
                          "certificate": "d7f34226-69b8-4e25-ac51-ad4849653a8",
                          "chainCA": "d7f34226-69b8-4e25-ac53-ad4849653a9",
                          "pkcs12": "d7f34226-69b8-4e25-ac56-ad4849653a0",
                          "privateKey": "d7f34226-69b8-4xxx-ac56-ad484965aaa"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "style": "deepObject",
            "explode": true,
            "schema": {
              "type": "object",
              "properties": {
                "where": {
                  "type": "object",
                  "additionalProperties": true
                },
                "fields": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "boolean"
                    },
                    "name": {
                      "type": "boolean"
                    },
                    "description": {
                      "type": "boolean"
                    },
                    "tenantId": {
                      "type": "boolean"
                    },
                    "createdAt": {
                      "type": "boolean"
                    },
                    "updatedAt": {
                      "type": "boolean"
                    },
                    "certificate": {
                      "type": "boolean"
                    },
                    "chainCA": {
                      "type": "boolean"
                    },
                    "issuerCertificate": {
                      "type": "boolean"
                    },
                    "passphrase": {
                      "type": "boolean"
                    },
                    "pkcs12": {
                      "type": "boolean"
                    },
                    "pkcs12Options": {
                      "type": "boolean"
                    },
                    "privateKey": {
                      "type": "boolean"
                    },
                    "staplerOCSP": {
                      "type": "boolean"
                    }
                  },
                  "additionalProperties": false
                },
                "offset": {
                  "type": "integer",
                  "minimum": 0
                },
                "limit": {
                  "type": "integer",
                  "minimum": 1,
                  "example": 100
                },
                "skip": {
                  "type": "integer",
                  "minimum": 0
                },
                "order": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "additionalProperties": false
            }
          }
        ],
        "operationId": "CertificateController.find"
      }
    },
    "/adcaas/v1/certs/count": {
      "get": {
        "x-controller-name": "CertController",
        "x-operation-name": "count",
        "tags": [
          "CertController"
        ],
        "responses": {
          "200": {
            "description": "Cert model count",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "number"
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "style": "deepObject",
            "explode": true,
            "schema": {
              "type": "object",
              "additionalProperties": true
            }
          }
        ],
        "operationId": "CertController.count"
      }
    },
    "/adcaas/v1/certs/{id}/adcs/{adcId}": {
      "post": {
        "x-controller-name": "CertController",
        "x-operation-name": "certUpload",
        "tags": [
          "CertController"
        ],
        "responses": {
          "204": {
            "description": "Uploading Cert resource"
          },
          "404": {
            "description": "Can not find trustedDeivceId",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array"
                    }
                  },
                  "example": {
                    "statusCode": 404,
                    "name": "Error",
                    "code": "ENTITY_NOT_FOUND"
                  }
                }
              }
            }
          },
          "422": {
            "description": " Adc is not trusted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array"
                    }
                  },
                  "example": {
                    "statusCode": 422,
                    "name": "UnprocessableEntityError",
                    "message": "The request body is invalid. See error object `details` property for more info.",
                    "code": "VALIDATION_FAILED"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "Cert resource ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": ""
            }
          },
          {
            "name": "adcId",
            "description": "ADC resource ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": ""
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContentBody"
              }
            }
          },
          "x-parameter-index": 2
        },
        "operationId": "CertController.certUpload"
      },
      "get": {
        "x-controller-name": "CertController",
        "x-operation-name": "certCheckStatus",
        "tags": [
          "CertController"
        ],
        "responses": {
          "200": "Status of cert",
          "404": {
            "description": "Can not find relative resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array"
                    }
                  },
                  "example": {
                    "statusCode": 404,
                    "name": "Error",
                    "code": "ENTITY_NOT_FOUND"
                  }
                }
              }
            }
          },
          "422": {
            "description": " Adc is not trusted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array"
                    }
                  },
                  "example": {
                    "statusCode": 422,
                    "name": "UnprocessableEntityError",
                    "message": "The request body is invalid. See error object `details` property for more info.",
                    "code": "VALIDATION_FAILED"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "Cert resource ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": ""
            }
          },
          {
            "name": "adcId",
            "description": "ADC resource ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": ""
            }
          }
        ],
        "operationId": "CertController.certCheckStatus"
      }
    },
    "/adcaas/v1/certs/{id}": {
      "patch": {
        "x-controller-name": "CertController",
        "x-operation-name": "updateById",
        "tags": [
          "CertController"
        ],
        "responses": {
          "204": {
            "description": "Successfully update cert resource"
          },
          "404": {
            "description": "Can not find ADC resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array"
                    }
                  },
                  "example": {
                    "statusCode": 404,
                    "name": "Error",
                    "code": "ENTITY_NOT_FOUND"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "Cert resource ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": ""
            }
          }
        ],
        "requestBody": {
          "description": "Cert resource properties that need to be updated",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [],
                "properties": {
                  "id": false,
                  "name": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 50
                  },
                  "description": {
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 200
                  },
                  "tenantId": false,
                  "createdAt": false,
                  "updatedAt": false,
                  "remotepath": false,
                  "installed": false
                },
                "example": {
                  "name": "My name",
                  "description": "My description"
                }
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "CertController.updateById"
      },
      "get": {
        "x-controller-name": "CertController",
        "x-operation-name": "findById",
        "tags": [
          "CertController"
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieve Cert resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "cert": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "tenantId": {
                          "type": "string"
                        },
                        "createdAt": {
                          "type": "date"
                        },
                        "updatedAt": {
                          "type": "date"
                        },
                        "remotepath": {
                          "type": "string"
                        },
                        "installed": {
                          "type": "boolean"
                        }
                      },
                      "example": {
                        "id": "11111111-2222-3333-4444-555555555555",
                        "name": "My name",
                        "description": "My description",
                        "createdAt": "2019-03-05T08:40:25.000Z",
                        "updatedAt": "2019-03-05T08:40:25.100Z",
                        "remotepath": "/Common/Cert",
                        "installed": true
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Can not find Cert resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array"
                    }
                  },
                  "example": {
                    "statusCode": 404,
                    "name": "Error",
                    "code": "ENTITY_NOT_FOUND"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "Cert resource ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": ""
            }
          }
        ],
        "operationId": "CertController.findById"
      },
      "delete": {
        "x-controller-name": "CertController",
        "x-operation-name": "deleteById",
        "tags": [
          "CertController"
        ],
        "responses": {
          "204": {
            "description": "Successfully delete Cert resource"
          },
          "404": {
            "description": "Can not find Cert resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array"
                    }
                  },
                  "example": {
                    "statusCode": 404,
                    "name": "Error",
                    "code": "ENTITY_NOT_FOUND"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "Cert resource ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": ""
            }
          }
        ],
        "operationId": "CertController.deleteById"
      }
    },
    "/adcaas/v1/certs": {
      "post": {
        "x-controller-name": "CertController",
        "x-operation-name": "create",
        "tags": [
          "CertController"
        ],
        "responses": {
          "200": {
            "description": "Successfully create Cert resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "cert": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "tenantId": {
                          "type": "string"
                        },
                        "createdAt": {
                          "type": "date"
                        },
                        "updatedAt": {
                          "type": "date"
                        },
                        "remotepath": {
                          "type": "string"
                        },
                        "installed": {
                          "type": "boolean"
                        }
                      },
                      "example": {
                        "id": "11111111-2222-3333-4444-555555555555",
                        "name": "My name",
                        "description": "My description",
                        "createdAt": "2019-03-05T08:40:25.000Z",
                        "updatedAt": "2019-03-05T08:40:25.100Z",
                        "remotepath": "/Common/Cert",
                        "installed": true
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid Cert resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array"
                    }
                  },
                  "example": {
                    "statusCode": 400,
                    "name": "BadRequestError"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Cert resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array"
                    }
                  },
                  "example": {
                    "statusCode": 422,
                    "name": "UnprocessableEntityError",
                    "message": "The request body is invalid. See error object `details` property for more info.",
                    "code": "VALIDATION_FAILED"
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Cert resource that need to be created",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [],
                "properties": {
                  "id": false,
                  "name": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 50
                  },
                  "description": {
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 200
                  },
                  "tenantId": false,
                  "createdAt": false,
                  "updatedAt": false,
                  "remotepath": {
                    "type": "string"
                  },
                  "installed": {
                    "type": "boolean"
                  }
                },
                "example": {
                  "name": "My name",
                  "description": "My description",
                  "remotepath": "/Common/Cert",
                  "installed": true
                }
              }
            }
          }
        },
        "operationId": "CertController.create"
      },
      "get": {
        "x-controller-name": "CertController",
        "x-operation-name": "find",
        "tags": [
          "CertController"
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieve Cert resources",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "certs": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "tenantId": {
                            "type": "string"
                          },
                          "createdAt": {
                            "type": "date"
                          },
                          "updatedAt": {
                            "type": "date"
                          },
                          "remotepath": {
                            "type": "string"
                          },
                          "installed": {
                            "type": "boolean"
                          }
                        },
                        "example": {
                          "id": "11111111-2222-3333-4444-555555555555",
                          "name": "My name",
                          "description": "My description",
                          "createdAt": "2019-03-05T08:40:25.000Z",
                          "updatedAt": "2019-03-05T08:40:25.100Z",
                          "remotepath": "/Common/Cert",
                          "installed": true
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "style": "deepObject",
            "explode": true,
            "schema": {
              "type": "object",
              "properties": {
                "where": {
                  "type": "object",
                  "additionalProperties": true
                },
                "fields": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "boolean"
                    },
                    "name": {
                      "type": "boolean"
                    },
                    "description": {
                      "type": "boolean"
                    },
                    "tenantId": {
                      "type": "boolean"
                    },
                    "createdAt": {
                      "type": "boolean"
                    },
                    "updatedAt": {
                      "type": "boolean"
                    },
                    "remotepath": {
                      "type": "boolean"
                    },
                    "installed": {
                      "type": "boolean"
                    }
                  },
                  "additionalProperties": false
                },
                "offset": {
                  "type": "integer",
                  "minimum": 0
                },
                "limit": {
                  "type": "integer",
                  "minimum": 1,
                  "example": 100
                },
                "skip": {
                  "type": "integer",
                  "minimum": 0
                },
                "order": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "additionalProperties": false
            }
          }
        ],
        "operationId": "CertController.find"
      }
    },
    "/adcaas/v1/endpointpolicies/count": {
      "get": {
        "x-controller-name": "EndpointpolicyController",
        "x-operation-name": "count",
        "tags": [
          "EndpointpolicyController"
        ],
        "responses": {
          "200": {
            "description": "Endpointpolicy model count",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "number"
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "style": "deepObject",
            "explode": true,
            "schema": {
              "type": "object",
              "additionalProperties": true
            }
          }
        ],
        "operationId": "EndpointpolicyController.count"
      }
    },
    "/adcaas/v1/endpointpolicies/{endpointpolicyId}/rules": {
      "get": {
        "x-controller-name": "EndpointpolicyController",
        "x-operation-name": "getRules",
        "tags": [
          "EndpointpolicyController"
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieve rule resources by endpointpolicy id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "rules": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "tenantId": {
                            "type": "string"
                          },
                          "createdAt": {
                            "type": "date"
                          },
                          "updatedAt": {
                            "type": "date"
                          },
                          "endpointpolicyId": {
                            "type": "string"
                          }
                        },
                        "example": {
                          "id": "11111111-2222-3333-4444-555555555555",
                          "name": "My name",
                          "description": "My description",
                          "createdAt": "2019-03-05T08:40:25.000Z",
                          "updatedAt": "2019-03-05T08:40:25.100Z",
                          "endpointpolicyId": "2d3h896a-4d82-40ee-8d08-55550db1234"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "endpointpolicyId",
            "description": "Endpointpolicy resource ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": ""
            }
          }
        ],
        "operationId": "EndpointpolicyController.getRules"
      }
    },
    "/adcaas/v1/endpointpolicies/{endpointpolicyId}/services/{serviceId}": {
      "get": {
        "x-controller-name": "EndpointpolicyController",
        "x-operation-name": "findService",
        "tags": [
          "EndpointpolicyController"
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieve Service resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "service": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "tenantId": {
                          "type": "string"
                        },
                        "createdAt": {
                          "type": "date"
                        },
                        "updatedAt": {
                          "type": "date"
                        },
                        "type": {
                          "type": "string"
                        },
                        "applicationId": {
                          "type": "string"
                        },
                        "clientTLS": {
                          "type": "string"
                        },
                        "iRules": {
                          "type": "array"
                        },
                        "nat64Enabled": {
                          "type": "boolean"
                        },
                        "defaultPoolId": {
                          "type": "string"
                        },
                        "profileHTTP": {
                          "type": "string"
                        },
                        "profileHTTP2": {
                          "type": "string"
                        },
                        "profileHTTPCompression": {
                          "type": "string"
                        },
                        "serverTLS": {
                          "type": "string"
                        },
                        "virtualAddresses": {
                          "type": "array"
                        },
                        "virtualPort": {
                          "type": "number"
                        }
                      },
                      "example": {
                        "id": "11111111-2222-3333-4444-555555555555",
                        "name": "My name",
                        "description": "My description",
                        "createdAt": "2019-03-05T08:40:25.000Z",
                        "updatedAt": "2019-03-05T08:40:25.100Z",
                        "type": "HTTP",
                        "applicationId": "11111111-2222-3333-4444-555555555555",
                        "iRules": [
                          "irule1",
                          "irule2"
                        ],
                        "defaultPoolId": "11111111-2222-3333-4444-555555555555",
                        "virtualAddresses": [
                          "10.100.0.1"
                        ],
                        "virtualPort": "80"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "endpointpolicyId",
            "description": "Endpoint Policy resource ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": ""
            }
          },
          {
            "name": "serviceId",
            "description": "Service resource ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": ""
            }
          }
        ],
        "operationId": "EndpointpolicyController.findService"
      }
    },
    "/adcaas/v1/endpointpolicies/{endpointpolicyId}/services": {
      "get": {
        "x-controller-name": "EndpointpolicyController",
        "x-operation-name": "findServices",
        "tags": [
          "EndpointpolicyController"
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieve Service resources",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "services": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "tenantId": {
                            "type": "string"
                          },
                          "createdAt": {
                            "type": "date"
                          },
                          "updatedAt": {
                            "type": "date"
                          },
                          "type": {
                            "type": "string"
                          },
                          "applicationId": {
                            "type": "string"
                          },
                          "clientTLS": {
                            "type": "string"
                          },
                          "iRules": {
                            "type": "array"
                          },
                          "nat64Enabled": {
                            "type": "boolean"
                          },
                          "defaultPoolId": {
                            "type": "string"
                          },
                          "profileHTTP": {
                            "type": "string"
                          },
                          "profileHTTP2": {
                            "type": "string"
                          },
                          "profileHTTPCompression": {
                            "type": "string"
                          },
                          "serverTLS": {
                            "type": "string"
                          },
                          "virtualAddresses": {
                            "type": "array"
                          },
                          "virtualPort": {
                            "type": "number"
                          }
                        },
                        "example": {
                          "id": "11111111-2222-3333-4444-555555555555",
                          "name": "My name",
                          "description": "My description",
                          "createdAt": "2019-03-05T08:40:25.000Z",
                          "updatedAt": "2019-03-05T08:40:25.100Z",
                          "type": "HTTP",
                          "applicationId": "11111111-2222-3333-4444-555555555555",
                          "iRules": [
                            "irule1",
                            "irule2"
                          ],
                          "defaultPoolId": "11111111-2222-3333-4444-555555555555",
                          "virtualAddresses": [
                            "10.100.0.1"
                          ],
                          "virtualPort": "80"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "endpointpolicyId",
            "description": "Endpoint Policy resource ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": ""
            }
          }
        ],
        "operationId": "EndpointpolicyController.findServices"
      }
    },
    "/adcaas/v1/endpointpolicies/{endpointpolicyId}": {
      "patch": {
        "x-controller-name": "EndpointpolicyController",
        "x-operation-name": "updateById",
        "tags": [
          "EndpointpolicyController"
        ],
        "responses": {
          "204": {
            "description": "Successfully update Endpointpolicy resource"
          },
          "404": {
            "description": "Can not find Endpointpolicy resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array"
                    }
                  },
                  "example": {
                    "statusCode": 404,
                    "name": "Error",
                    "code": "ENTITY_NOT_FOUND"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "endpointpolicyId",
            "description": "Endpointpolicy resource ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": ""
            }
          }
        ],
        "requestBody": {
          "description": "Endpointpolicy resource properties that need to be updated",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [],
                "properties": {
                  "id": false,
                  "name": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 50
                  },
                  "description": {
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 200
                  },
                  "tenantId": false,
                  "createdAt": false,
                  "updatedAt": false
                },
                "example": {
                  "name": "My name",
                  "description": "My description"
                }
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "EndpointpolicyController.updateById"
      },
      "get": {
        "x-controller-name": "EndpointpolicyController",
        "x-operation-name": "findById",
        "tags": [
          "EndpointpolicyController"
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieve Endpointpolicy resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "endpointpolicy": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "tenantId": {
                          "type": "string"
                        },
                        "createdAt": {
                          "type": "date"
                        },
                        "updatedAt": {
                          "type": "date"
                        }
                      },
                      "example": {
                        "id": "11111111-2222-3333-4444-555555555555",
                        "name": "My name",
                        "description": "My description",
                        "createdAt": "2019-03-05T08:40:25.000Z",
                        "updatedAt": "2019-03-05T08:40:25.100Z"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Can not find Endpointpolicy resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array"
                    }
                  },
                  "example": {
                    "statusCode": 404,
                    "name": "Error",
                    "code": "ENTITY_NOT_FOUND"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "endpointpolicyId",
            "description": "Endponitpolicy resource ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": ""
            }
          }
        ],
        "operationId": "EndpointpolicyController.findById"
      },
      "delete": {
        "x-controller-name": "EndpointpolicyController",
        "x-operation-name": "deleteById",
        "tags": [
          "EndpointpolicyController"
        ],
        "responses": {
          "204": {
            "description": "Successfully delete Endpointpolicy resource"
          },
          "404": {
            "description": "Can not find Endpointpolicy resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array"
                    }
                  },
                  "example": {
                    "statusCode": 404,
                    "name": "Error",
                    "code": "ENTITY_NOT_FOUND"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "endpointpolicyId",
            "description": "Endpointpolicy resource ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": ""
            }
          }
        ],
        "operationId": "EndpointpolicyController.deleteById"
      }
    },
    "/adcaas/v1/endpointpolicies": {
      "post": {
        "x-controller-name": "EndpointpolicyController",
        "x-operation-name": "create",
        "tags": [
          "EndpointpolicyController"
        ],
        "responses": {
          "200": {
            "description": "Successfully create Endpointpolicy resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "endpointpolicy": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "tenantId": {
                          "type": "string"
                        },
                        "createdAt": {
                          "type": "date"
                        },
                        "updatedAt": {
                          "type": "date"
                        }
                      },
                      "example": {
                        "id": "11111111-2222-3333-4444-555555555555",
                        "name": "My name",
                        "description": "My description",
                        "createdAt": "2019-03-05T08:40:25.000Z",
                        "updatedAt": "2019-03-05T08:40:25.100Z"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid Endpointpolicy resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array"
                    }
                  },
                  "example": {
                    "statusCode": 400,
                    "name": "BadRequestError"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Endpointpolicy resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array"
                    }
                  },
                  "example": {
                    "statusCode": 422,
                    "name": "UnprocessableEntityError",
                    "message": "The request body is invalid. See error object `details` property for more info.",
                    "code": "VALIDATION_FAILED"
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Endpointpolicy resource that need to be created",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [],
                "properties": {
                  "id": false,
                  "name": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 50
                  },
                  "description": {
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 200
                  },
                  "tenantId": false,
                  "createdAt": false,
                  "updatedAt": false
                },
                "example": {
                  "name": "My name",
                  "description": "My description"
                }
              }
            }
          }
        },
        "operationId": "EndpointpolicyController.create"
      },
      "get": {
        "x-controller-name": "EndpointpolicyController",
        "x-operation-name": "find",
        "tags": [
          "EndpointpolicyController"
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieve Endpointpolicy resources",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "endpointpolicies": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "tenantId": {
                            "type": "string"
                          },
                          "createdAt": {
                            "type": "date"
                          },
                          "updatedAt": {
                            "type": "date"
                          }
                        },
                        "example": {
                          "id": "11111111-2222-3333-4444-555555555555",
                          "name": "My name",
                          "description": "My description",
                          "createdAt": "2019-03-05T08:40:25.000Z",
                          "updatedAt": "2019-03-05T08:40:25.100Z"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "style": "deepObject",
            "explode": true,
            "schema": {
              "type": "object",
              "properties": {
                "where": {
                  "type": "object",
                  "additionalProperties": true
                },
                "fields": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "boolean"
                    },
                    "name": {
                      "type": "boolean"
                    },
                    "description": {
                      "type": "boolean"
                    },
                    "tenantId": {
                      "type": "boolean"
                    },
                    "createdAt": {
                      "type": "boolean"
                    },
                    "updatedAt": {
                      "type": "boolean"
                    }
                  },
                  "additionalProperties": false
                },
                "offset": {
                  "type": "integer",
                  "minimum": 0
                },
                "limit": {
                  "type": "integer",
                  "minimum": 1,
                  "example": 100
                },
                "skip": {
                  "type": "integer",
                  "minimum": 0
                },
                "order": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "include": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "relation": {
                        "type": "string"
                      },
                      "scope": {
                        "properties": {
                          "where": {
                            "type": "object",
                            "additionalProperties": true
                          },
                          "fields": {
                            "type": "object",
                            "properties": {},
                            "additionalProperties": true
                          },
                          "offset": {
                            "type": "integer",
                            "minimum": 0
                          },
                          "limit": {
                            "type": "integer",
                            "minimum": 1,
                            "example": 100
                          },
                          "skip": {
                            "type": "integer",
                            "minimum": 0
                          },
                          "order": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        },
                        "additionalProperties": false
                      }
                    }
                  }
                }
              },
              "additionalProperties": false
            }
          }
        ],
        "operationId": "EndpointpolicyController.find"
      }
    },
    "/adcaas/v1/irules/{iRuleId}": {
      "delete": {
        "x-controller-name": "IRuleController",
        "x-operation-name": "deleteById",
        "tags": [
          "IRuleController"
        ],
        "responses": {
          "204": {
            "description": "Successfully delete irule resource"
          },
          "404": {
            "description": "Can not find irule resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array"
                    }
                  },
                  "example": {
                    "statusCode": 404,
                    "name": "Error",
                    "code": "ENTITY_NOT_FOUND"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "iRuleId",
            "description": "irule resource ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": ""
            }
          }
        ],
        "operationId": "IRuleController.deleteById"
      }
    },
    "/adcaas/v1/irules": {
      "post": {
        "x-controller-name": "IRuleController",
        "x-operation-name": "create",
        "tags": [
          "IRuleController"
        ],
        "responses": {
          "200": {
            "description": "Successfully create irule resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "irule": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "tenantId": {
                          "type": "string"
                        },
                        "createdAt": {
                          "type": "date"
                        },
                        "updatedAt": {
                          "type": "date"
                        },
                        "expand": {
                          "type": "boolean"
                        },
                        "iRule": {
                          "type": "string"
                        },
                        "label": {
                          "type": "string"
                        },
                        "remark": {
                          "type": "string"
                        }
                      },
                      "example": {
                        "id": "11111111-2222-3333-4444-555555555555",
                        "name": "My name",
                        "description": "My description",
                        "createdAt": "2019-03-05T08:40:25.000Z",
                        "updatedAt": "2019-03-05T08:40:25.100Z",
                        "expand": true,
                        "iRule": "when CLIENT_ACCEPTED {\n}\n",
                        "label": "iRule_name",
                        "remark": "any string"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid irule resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array"
                    }
                  },
                  "example": {
                    "statusCode": 400,
                    "name": "BadRequestError"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable irule resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array"
                    }
                  },
                  "example": {
                    "statusCode": 422,
                    "name": "UnprocessableEntityError",
                    "message": "The request body is invalid. See error object `details` property for more info.",
                    "code": "VALIDATION_FAILED"
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "ProfileHTTPCompress resource that need to be created",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [],
                "properties": {
                  "id": false,
                  "name": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 50
                  },
                  "description": {
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 200
                  },
                  "tenantId": false,
                  "createdAt": false,
                  "updatedAt": false,
                  "expand": {
                    "type": "boolean"
                  },
                  "iRule": {
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 65536
                  },
                  "label": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 100
                  },
                  "remark": {
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 4096
                  }
                },
                "example": {
                  "name": "My name",
                  "description": "My description",
                  "expand": true,
                  "iRule": "when CLIENT_ACCEPTED {\n}\n",
                  "label": "iRule_name",
                  "remark": "any string"
                }
              }
            }
          }
        },
        "operationId": "IRuleController.create"
      },
      "get": {
        "x-controller-name": "IRuleController",
        "x-operation-name": "find",
        "tags": [
          "IRuleController"
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieve ProfileHTTPCompress resources",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "irules": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "tenantId": {
                            "type": "string"
                          },
                          "createdAt": {
                            "type": "date"
                          },
                          "updatedAt": {
                            "type": "date"
                          },
                          "expand": {
                            "type": "boolean"
                          },
                          "iRule": {
                            "type": "string"
                          },
                          "label": {
                            "type": "string"
                          },
                          "remark": {
                            "type": "string"
                          }
                        },
                        "example": {
                          "id": "11111111-2222-3333-4444-555555555555",
                          "name": "My name",
                          "description": "My description",
                          "createdAt": "2019-03-05T08:40:25.000Z",
                          "updatedAt": "2019-03-05T08:40:25.100Z",
                          "expand": true,
                          "iRule": "when CLIENT_ACCEPTED {\n}\n",
                          "label": "iRule_name",
                          "remark": "any string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "style": "deepObject",
            "explode": true,
            "schema": {
              "type": "object",
              "properties": {
                "where": {
                  "type": "object",
                  "additionalProperties": true
                },
                "fields": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "boolean"
                    },
                    "name": {
                      "type": "boolean"
                    },
                    "description": {
                      "type": "boolean"
                    },
                    "tenantId": {
                      "type": "boolean"
                    },
                    "createdAt": {
                      "type": "boolean"
                    },
                    "updatedAt": {
                      "type": "boolean"
                    },
                    "expand": {
                      "type": "boolean"
                    },
                    "iRule": {
                      "type": "boolean"
                    },
                    "label": {
                      "type": "boolean"
                    },
                    "remark": {
                      "type": "boolean"
                    }
                  },
                  "additionalProperties": false
                },
                "offset": {
                  "type": "integer",
                  "minimum": 0
                },
                "limit": {
                  "type": "integer",
                  "minimum": 1,
                  "example": 100
                },
                "skip": {
                  "type": "integer",
                  "minimum": 0
                },
                "order": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "additionalProperties": false
            }
          }
        ],
        "operationId": "IRuleController.find"
      }
    },
    "/adcaas/v1/keys/count": {
      "get": {
        "x-controller-name": "KeyController",
        "x-operation-name": "count",
        "tags": [
          "KeyController"
        ],
        "responses": {
          "200": {
            "description": "Key model count",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "number"
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "style": "deepObject",
            "explode": true,
            "schema": {
              "type": "object",
              "additionalProperties": true
            }
          }
        ],
        "operationId": "KeyController.count"
      }
    },
    "/adcaas/v1/keys/{id}/adcs/{adcId}": {
      "post": {
        "x-controller-name": "KeyController",
        "x-operation-name": "keyUpload",
        "tags": [
          "KeyController"
        ],
        "responses": {
          "204": {
            "description": "Uploading Key resource"
          },
          "404": {
            "description": "Can not find trustedDeivceId",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array"
                    }
                  },
                  "example": {
                    "statusCode": 404,
                    "name": "Error",
                    "code": "ENTITY_NOT_FOUND"
                  }
                }
              }
            }
          },
          "422": {
            "description": " Adc is not trusted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array"
                    }
                  },
                  "example": {
                    "statusCode": 422,
                    "name": "UnprocessableEntityError",
                    "message": "The request body is invalid. See error object `details` property for more info.",
                    "code": "VALIDATION_FAILED"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "Key resource ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": ""
            }
          },
          {
            "name": "adcId",
            "description": "ADC resource ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": ""
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContentBody"
              }
            }
          },
          "x-parameter-index": 2
        },
        "operationId": "KeyController.keyUpload"
      },
      "get": {
        "x-controller-name": "KeyController",
        "x-operation-name": "keyCheckStatus",
        "tags": [
          "KeyController"
        ],
        "responses": {
          "200": "Status of key",
          "404": {
            "description": "Can not find relative resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array"
                    }
                  },
                  "example": {
                    "statusCode": 404,
                    "name": "Error",
                    "code": "ENTITY_NOT_FOUND"
                  }
                }
              }
            }
          },
          "422": {
            "description": " Adc is not trusted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array"
                    }
                  },
                  "example": {
                    "statusCode": 422,
                    "name": "UnprocessableEntityError",
                    "message": "The request body is invalid. See error object `details` property for more info.",
                    "code": "VALIDATION_FAILED"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "Key resource ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": ""
            }
          },
          {
            "name": "adcId",
            "description": "ADC resource ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": ""
            }
          }
        ],
        "operationId": "KeyController.keyCheckStatus"
      }
    },
    "/adcaas/v1/keys/{id}": {
      "patch": {
        "x-controller-name": "KeyController",
        "x-operation-name": "updateById",
        "tags": [
          "KeyController"
        ],
        "responses": {
          "204": {
            "description": "Successfully update Key resource"
          },
          "404": {
            "description": "Can not find ADC resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array"
                    }
                  },
                  "example": {
                    "statusCode": 404,
                    "name": "Error",
                    "code": "ENTITY_NOT_FOUND"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "Key resource ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": ""
            }
          }
        ],
        "requestBody": {
          "description": "Key resource properties that need to be updated",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [],
                "properties": {
                  "id": false,
                  "name": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 50
                  },
                  "description": {
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 200
                  },
                  "tenantId": false,
                  "createdAt": false,
                  "updatedAt": false,
                  "remotepath": false,
                  "installed": false
                },
                "example": {
                  "name": "My name",
                  "description": "My description"
                }
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "KeyController.updateById"
      },
      "get": {
        "x-controller-name": "KeyController",
        "x-operation-name": "findById",
        "tags": [
          "KeyController"
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieve Key resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "key": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "tenantId": {
                          "type": "string"
                        },
                        "createdAt": {
                          "type": "date"
                        },
                        "updatedAt": {
                          "type": "date"
                        },
                        "remotepath": {
                          "type": "string"
                        },
                        "installed": {
                          "type": "boolean"
                        }
                      },
                      "example": {
                        "id": "11111111-2222-3333-4444-555555555555",
                        "name": "My name",
                        "description": "My description",
                        "createdAt": "2019-03-05T08:40:25.000Z",
                        "updatedAt": "2019-03-05T08:40:25.100Z",
                        "remotepath": "/Common/Key",
                        "installed": true
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Can not find Key resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array"
                    }
                  },
                  "example": {
                    "statusCode": 404,
                    "name": "Error",
                    "code": "ENTITY_NOT_FOUND"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "Key resource ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": ""
            }
          }
        ],
        "operationId": "KeyController.findById"
      },
      "delete": {
        "x-controller-name": "KeyController",
        "x-operation-name": "deleteById",
        "tags": [
          "KeyController"
        ],
        "responses": {
          "204": {
            "description": "Successfully delete Key resource"
          },
          "404": {
            "description": "Can not find Key resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array"
                    }
                  },
                  "example": {
                    "statusCode": 404,
                    "name": "Error",
                    "code": "ENTITY_NOT_FOUND"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "Key resource ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": ""
            }
          }
        ],
        "operationId": "KeyController.deleteById"
      }
    },
    "/adcaas/v1/keys": {
      "post": {
        "x-controller-name": "KeyController",
        "x-operation-name": "create",
        "tags": [
          "KeyController"
        ],
        "responses": {
          "200": {
            "description": "Successfully create Key resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "key": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "tenantId": {
                          "type": "string"
                        },
                        "createdAt": {
                          "type": "date"
                        },
                        "updatedAt": {
                          "type": "date"
                        },
                        "remotepath": {
                          "type": "string"
                        },
                        "installed": {
                          "type": "boolean"
                        }
                      },
                      "example": {
                        "id": "11111111-2222-3333-4444-555555555555",
                        "name": "My name",
                        "description": "My description",
                        "createdAt": "2019-03-05T08:40:25.000Z",
                        "updatedAt": "2019-03-05T08:40:25.100Z",
                        "remotepath": "/Common/Key",
                        "installed": true
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid Key resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array"
                    }
                  },
                  "example": {
                    "statusCode": 400,
                    "name": "BadRequestError"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Key resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array"
                    }
                  },
                  "example": {
                    "statusCode": 422,
                    "name": "UnprocessableEntityError",
                    "message": "The request body is invalid. See error object `details` property for more info.",
                    "code": "VALIDATION_FAILED"
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Key resource that need to be created",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [],
                "properties": {
                  "id": false,
                  "name": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 50
                  },
                  "description": {
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 200
                  },
                  "tenantId": false,
                  "createdAt": false,
                  "updatedAt": false,
                  "remotepath": {
                    "type": "string"
                  },
                  "installed": {
                    "type": "boolean"
                  }
                },
                "example": {
                  "name": "My name",
                  "description": "My description",
                  "remotepath": "/Common/Key",
                  "installed": true
                }
              }
            }
          }
        },
        "operationId": "KeyController.create"
      },
      "get": {
        "x-controller-name": "KeyController",
        "x-operation-name": "find",
        "tags": [
          "KeyController"
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieve Key resources",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "keys": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "tenantId": {
                            "type": "string"
                          },
                          "createdAt": {
                            "type": "date"
                          },
                          "updatedAt": {
                            "type": "date"
                          },
                          "remotepath": {
                            "type": "string"
                          },
                          "installed": {
                            "type": "boolean"
                          }
                        },
                        "example": {
                          "id": "11111111-2222-3333-4444-555555555555",
                          "name": "My name",
                          "description": "My description",
                          "createdAt": "2019-03-05T08:40:25.000Z",
                          "updatedAt": "2019-03-05T08:40:25.100Z",
                          "remotepath": "/Common/Key",
                          "installed": true
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "style": "deepObject",
            "explode": true,
            "schema": {
              "type": "object",
              "properties": {
                "where": {
                  "type": "object",
                  "additionalProperties": true
                },
                "fields": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "boolean"
                    },
                    "name": {
                      "type": "boolean"
                    },
                    "description": {
                      "type": "boolean"
                    },
                    "tenantId": {
                      "type": "boolean"
                    },
                    "createdAt": {
                      "type": "boolean"
                    },
                    "updatedAt": {
                      "type": "boolean"
                    },
                    "remotepath": {
                      "type": "boolean"
                    },
                    "installed": {
                      "type": "boolean"
                    }
                  },
                  "additionalProperties": false
                },
                "offset": {
                  "type": "integer",
                  "minimum": 0
                },
                "limit": {
                  "type": "integer",
                  "minimum": 1,
                  "example": 100
                },
                "skip": {
                  "type": "integer",
                  "minimum": 0
                },
                "order": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "additionalProperties": false
            }
          }
        ],
        "operationId": "KeyController.find"
      }
    },
    "/adcaas/v1/monitors/{monitorId}/members/{memberId}": {
      "post": {
        "x-controller-name": "MonitorController",
        "x-operation-name": "associateMemberMonitor",
        "tags": [
          "MonitorController"
        ],
        "responses": {
          "204": {
            "description": "Successfully associate Member and Monitor"
          },
          "404": {
            "description": "Cannot find Member or Monitor resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array"
                    }
                  },
                  "example": {
                    "statusCode": 404,
                    "name": "Error",
                    "code": "ENTITY_NOT_FOUND"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "monitorId",
            "description": "Monitor resource ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": ""
            }
          },
          {
            "name": "memberId",
            "description": "Member resource ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": ""
            }
          }
        ],
        "operationId": "MonitorController.associateMemberMonitor"
      },
      "get": {
        "x-controller-name": "MonitorController",
        "x-operation-name": "findMember",
        "tags": [
          "MonitorController"
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieve  Member resources",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "monitor": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "tenantId": {
                          "type": "string"
                        },
                        "createdAt": {
                          "type": "date"
                        },
                        "updatedAt": {
                          "type": "date"
                        },
                        "interval": {
                          "type": "number"
                        },
                        "timeout": {
                          "type": "number"
                        },
                        "targetAddress": {
                          "type": "string"
                        },
                        "targetPort": {
                          "type": "number"
                        },
                        "monitorType": {
                          "type": "string"
                        },
                        "protocol": {
                          "type": "string"
                        }
                      },
                      "example": {
                        "id": "11111111-2222-3333-4444-555555555555",
                        "name": "My name",
                        "description": "My description",
                        "createdAt": "2019-03-05T08:40:25.000Z",
                        "updatedAt": "2019-03-05T08:40:25.100Z",
                        "interval": 5,
                        "timeout": 16,
                        "targetAddress": "192.168.10.123",
                        "targetPort": 8080,
                        "monitorType": "tcp",
                        "protocol": "udp"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Cannot find assoociation or Member resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array"
                    }
                  },
                  "example": {
                    "statusCode": 404,
                    "name": "Error",
                    "code": "ENTITY_NOT_FOUND"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "memberId",
            "description": "Member resource ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": ""
            }
          },
          {
            "name": "monitorId",
            "description": "Monitor resource ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": ""
            }
          }
        ],
        "operationId": "MonitorController.findMember"
      },
      "delete": {
        "x-controller-name": "MonitorController",
        "x-operation-name": "deassociateMemberMonitor",
        "tags": [
          "MonitorController"
        ],
        "responses": {
          "204": {
            "description": "Successfully deassociate Member and Monitor"
          }
        },
        "parameters": [
          {
            "name": "monitorId",
            "description": "Monitor resource ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": ""
            }
          },
          {
            "name": "memberId",
            "description": "Member resource ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": ""
            }
          }
        ],
        "operationId": "MonitorController.deassociateMemberMonitor"
      }
    },
    "/adcaas/v1/monitors/{monitorId}/members": {
      "get": {
        "x-controller-name": "MonitorController",
        "x-operation-name": "findMembers",
        "tags": [
          "MonitorController"
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieve Member resources",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "members": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "tenantId": {
                            "type": "string"
                          },
                          "createdAt": {
                            "type": "date"
                          },
                          "updatedAt": {
                            "type": "date"
                          },
                          "address": {
                            "type": "string"
                          },
                          "port": {
                            "type": "number"
                          },
                          "poolId": {
                            "type": "string"
                          }
                        },
                        "example": {
                          "id": "11111111-2222-3333-4444-555555555555",
                          "name": "My name",
                          "description": "My description",
                          "createdAt": "2019-03-05T08:40:25.000Z",
                          "updatedAt": "2019-03-05T08:40:25.100Z",
                          "address": "192.168.1.12",
                          "port": 80,
                          "poolId": "2d3h896a-4d82-40ee-8d08-55550dbc191"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "monitorId",
            "description": "Monitor resource ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": ""
            }
          }
        ],
        "operationId": "MonitorController.findMembers"
      }
    },
    "/adcaas/v1/monitors/{monitorId}/pools/{poolId}": {
      "post": {
        "x-controller-name": "MonitorController",
        "x-operation-name": "associatePoolMonitor",
        "tags": [
          "MonitorController"
        ],
        "responses": {
          "204": {
            "description": "Successfully associate Pool and Monitor"
          },
          "404": {
            "description": "Cannot find Pool resource or Monitor resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array"
                    }
                  },
                  "example": {
                    "statusCode": 404,
                    "name": "Error",
                    "code": "ENTITY_NOT_FOUND"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "monitorId",
            "description": "Pool resource ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": ""
            }
          },
          {
            "name": "poolId",
            "description": "Pool resource ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": ""
            }
          }
        ],
        "operationId": "MonitorController.associatePoolMonitor"
      },
      "get": {
        "x-controller-name": "MonitorController",
        "x-operation-name": "findPool",
        "tags": [
          "MonitorController"
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieve Pool resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "pool": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "tenantId": {
                          "type": "string"
                        },
                        "createdAt": {
                          "type": "date"
                        },
                        "updatedAt": {
                          "type": "date"
                        },
                        "loadBalancingMode": {
                          "type": "string"
                        },
                        "minimumMembersActive": {
                          "type": "number"
                        },
                        "minimumMonitors": {
                          "type": "number"
                        },
                        "reselectTries": {
                          "type": "number"
                        },
                        "serviceDownAction": {
                          "type": "string"
                        },
                        "slowRampTime": {
                          "type": "number"
                        }
                      },
                      "example": {
                        "id": "11111111-2222-3333-4444-555555555555",
                        "name": "My name",
                        "description": "My description",
                        "createdAt": "2019-03-05T08:40:25.000Z",
                        "updatedAt": "2019-03-05T08:40:25.100Z",
                        "loadBalancingMode": "round-robin",
                        "minimumMembersActive": 1,
                        "minimumMonitors": 1,
                        "reselectTries": 0,
                        "serviceDownAction": "drop",
                        "slowRampTime": 10
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "poolId",
            "description": "Pool resource ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": ""
            }
          },
          {
            "name": "monitorId",
            "description": "Pool resource ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": ""
            }
          }
        ],
        "operationId": "MonitorController.findPool"
      },
      "delete": {
        "x-controller-name": "MonitorController",
        "x-operation-name": "deassociatePoolMonitor",
        "tags": [
          "MonitorController"
        ],
        "responses": {
          "204": {
            "description": "Successfully deassociate Pool and Monitor "
          }
        },
        "parameters": [
          {
            "name": "monitorId",
            "description": "Pool resource ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": ""
            }
          },
          {
            "name": "poolId",
            "description": "Pool resource ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": ""
            }
          }
        ],
        "operationId": "MonitorController.deassociatePoolMonitor"
      }
    },
    "/adcaas/v1/monitors/{monitorId}/pools": {
      "get": {
        "x-controller-name": "MonitorController",
        "x-operation-name": "findPools",
        "tags": [
          "MonitorController"
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieve Pool resources",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "pools": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "tenantId": {
                            "type": "string"
                          },
                          "createdAt": {
                            "type": "date"
                          },
                          "updatedAt": {
                            "type": "date"
                          },
                          "loadBalancingMode": {
                            "type": "string"
                          },
                          "minimumMembersActive": {
                            "type": "number"
                          },
                          "minimumMonitors": {
                            "type": "number"
                          },
                          "reselectTries": {
                            "type": "number"
                          },
                          "serviceDownAction": {
                            "type": "string"
                          },
                          "slowRampTime": {
                            "type": "number"
                          }
                        },
                        "example": {
                          "id": "11111111-2222-3333-4444-555555555555",
                          "name": "My name",
                          "description": "My description",
                          "createdAt": "2019-03-05T08:40:25.000Z",
                          "updatedAt": "2019-03-05T08:40:25.100Z",
                          "loadBalancingMode": "round-robin",
                          "minimumMembersActive": 1,
                          "minimumMonitors": 1,
                          "reselectTries": 0,
                          "serviceDownAction": "drop",
                          "slowRampTime": 10
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "monitorId",
            "description": "Monitor resource ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": ""
            }
          }
        ],
        "operationId": "MonitorController.findPools"
      }
    },
    "/adcaas/v1/monitors/{monitorId}": {
      "patch": {
        "x-controller-name": "MonitorController",
        "x-operation-name": "updateById",
        "tags": [
          "MonitorController"
        ],
        "responses": {
          "204": {
            "description": "Successfully update Monitor resource"
          },
          "404": {
            "description": "Can not find Monitor resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array"
                    }
                  },
                  "example": {
                    "statusCode": 404,
                    "name": "Error",
                    "code": "ENTITY_NOT_FOUND"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "monitorId",
            "description": "Monitor resource ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": ""
            }
          }
        ],
        "requestBody": {
          "description": "Monitor resource properties that need to be updated",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [],
                "properties": {
                  "id": false,
                  "name": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 50
                  },
                  "description": {
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 200
                  },
                  "tenantId": false,
                  "createdAt": false,
                  "updatedAt": false,
                  "interval": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 3600
                  },
                  "timeout": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 900
                  },
                  "targetAddress": {
                    "type": "string",
                    "format": "ipv4"
                  },
                  "targetPort": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 65535
                  },
                  "monitorType": {
                    "type": "string",
                    "enum": [
                      "dns",
                      "external",
                      "ftp",
                      "http",
                      "https",
                      "icmp",
                      "ldap",
                      "radius",
                      "sip",
                      "smtp",
                      "tcp",
                      "tcp-half-open",
                      "udp"
                    ]
                  },
                  "acceptRCODE": {
                    "type": "string",
                    "enum": [
                      "anything",
                      "no-error"
                    ]
                  },
                  "adaptiveDivergenceMilliseconds": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 10000
                  },
                  "adaptiveDivergencePercentage": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 500
                  },
                  "adaptiveDivergenceType": {
                    "type": "string",
                    "enum": [
                      "absolute",
                      "relative"
                    ]
                  },
                  "adaptiveLimitMilliseconds": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 10000
                  },
                  "adaptiveWindow": {
                    "type": "integer",
                    "minimum": 60,
                    "maximum": 1800
                  },
                  "answerContains": {
                    "type": "string",
                    "enum": [
                      "any-type",
                      "anything",
                      "query-type"
                    ]
                  },
                  "arguments": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 100
                  },
                  "base": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 100
                  },
                  "ciphers": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 100
                  },
                  "clientCertificate": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 100
                  },
                  "codesDown": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "minimum": 0
                    }
                  },
                  "codesUp": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "minimum": 0
                    }
                  },
                  "domain": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 100
                  },
                  "dscp": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 63
                  },
                  "filter": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 100
                  },
                  "headers": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 100
                  },
                  "label": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 100
                  },
                  "nasIpAddress": {
                    "type": "string",
                    "format": "ipv4"
                  },
                  "pathname": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 100
                  },
                  "protocol": {
                    "type": "string",
                    "enum": [
                      "sips",
                      "tcp",
                      "tls",
                      "udp"
                    ]
                  },
                  "queryName": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 100
                  },
                  "queryType": {
                    "type": "string",
                    "enum": [
                      "a",
                      "aaaa"
                    ]
                  },
                  "receive": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 100
                  },
                  "receiveDown": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 100
                  },
                  "remark": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 100
                  },
                  "request": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 100
                  },
                  "security": {
                    "type": "string",
                    "enum": [
                      "none",
                      "ssl",
                      "tls"
                    ]
                  },
                  "send": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 100
                  },
                  "timeUntilUp": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 1800
                  },
                  "upInterval": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 3600
                  },
                  "username": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 100
                  }
                },
                "example": {
                  "name": "My name",
                  "description": "My description",
                  "interval": 5,
                  "timeout": 16,
                  "targetAddress": "192.168.10.123",
                  "targetPort": 8080,
                  "monitorType": "tcp",
                  "acceptRCODE": "no-error",
                  "adaptiveDivergenceMilliseconds": 500,
                  "answerContains": "query-type",
                  "arguments": "",
                  "dscp": 0,
                  "headers": "",
                  "protocol": "udp",
                  "queryType": "a",
                  "receiveDown": "",
                  "request": "",
                  "security": "none"
                }
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "MonitorController.updateById"
      },
      "get": {
        "x-controller-name": "MonitorController",
        "x-operation-name": "findById",
        "tags": [
          "MonitorController"
        ],
        "responses": {
          "responses": {
            "200": {
              "description": "Successfully retrieve Pool resource",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "monitor": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "tenantId": {
                            "type": "string"
                          },
                          "createdAt": {
                            "type": "date"
                          },
                          "updatedAt": {
                            "type": "date"
                          },
                          "interval": {
                            "type": "number"
                          },
                          "timeout": {
                            "type": "number"
                          },
                          "targetAddress": {
                            "type": "string"
                          },
                          "targetPort": {
                            "type": "number"
                          },
                          "monitorType": {
                            "type": "string"
                          },
                          "protocol": {
                            "type": "string"
                          }
                        },
                        "example": {
                          "id": "11111111-2222-3333-4444-555555555555",
                          "name": "My name",
                          "description": "My description",
                          "createdAt": "2019-03-05T08:40:25.000Z",
                          "updatedAt": "2019-03-05T08:40:25.100Z",
                          "interval": 5,
                          "timeout": 16,
                          "targetAddress": "192.168.10.123",
                          "targetPort": 8080,
                          "monitorType": "tcp",
                          "protocol": "udp"
                        }
                      }
                    }
                  }
                }
              }
            },
            "404": {
              "description": "Can not find Pool resource",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "statusCode": {
                        "type": "integer"
                      },
                      "name": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string"
                      },
                      "details": {
                        "type": "array"
                      }
                    },
                    "example": {
                      "statusCode": 404,
                      "name": "Error",
                      "code": "ENTITY_NOT_FOUND"
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "monitorId",
            "description": "Monitor resource ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": ""
            }
          }
        ],
        "operationId": "MonitorController.findById"
      },
      "delete": {
        "x-controller-name": "MonitorController",
        "x-operation-name": "deleteById",
        "tags": [
          "MonitorController"
        ],
        "responses": {
          "204": {
            "description": "Successfully delete Monitor resource"
          },
          "404": {
            "description": "Can not find Monitor resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array"
                    }
                  },
                  "example": {
                    "statusCode": 404,
                    "name": "Error",
                    "code": "ENTITY_NOT_FOUND"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "monitorId",
            "description": "Monitor resource ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": ""
            }
          }
        ],
        "operationId": "MonitorController.deleteById"
      }
    },
    "/adcaas/v1/monitors": {
      "post": {
        "x-controller-name": "MonitorController",
        "x-operation-name": "create",
        "tags": [
          "MonitorController"
        ],
        "responses": {
          "200": {
            "description": "Successfully create Monitor resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "monitor": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "tenantId": {
                          "type": "string"
                        },
                        "createdAt": {
                          "type": "date"
                        },
                        "updatedAt": {
                          "type": "date"
                        },
                        "interval": {
                          "type": "number"
                        },
                        "timeout": {
                          "type": "number"
                        },
                        "targetAddress": {
                          "type": "string"
                        },
                        "targetPort": {
                          "type": "number"
                        },
                        "monitorType": {
                          "type": "string"
                        },
                        "protocol": {
                          "type": "string"
                        }
                      },
                      "example": {
                        "id": "11111111-2222-3333-4444-555555555555",
                        "name": "My name",
                        "description": "My description",
                        "createdAt": "2019-03-05T08:40:25.000Z",
                        "updatedAt": "2019-03-05T08:40:25.100Z",
                        "interval": 5,
                        "timeout": 16,
                        "targetAddress": "192.168.10.123",
                        "targetPort": 8080,
                        "monitorType": "tcp",
                        "protocol": "udp"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid Monitor resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array"
                    }
                  },
                  "example": {
                    "statusCode": 400,
                    "name": "BadRequestError"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Monitor resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array"
                    }
                  },
                  "example": {
                    "statusCode": 422,
                    "name": "UnprocessableEntityError",
                    "message": "The request body is invalid. See error object `details` property for more info.",
                    "code": "VALIDATION_FAILED"
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Monitor resource that need to be created",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [],
                "properties": {
                  "id": false,
                  "name": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 50
                  },
                  "description": {
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 200
                  },
                  "tenantId": false,
                  "createdAt": false,
                  "updatedAt": false,
                  "interval": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 3600
                  },
                  "timeout": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 900
                  },
                  "targetAddress": {
                    "type": "string",
                    "format": "ipv4"
                  },
                  "targetPort": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 65535
                  },
                  "monitorType": {
                    "type": "string",
                    "enum": [
                      "dns",
                      "external",
                      "ftp",
                      "http",
                      "https",
                      "icmp",
                      "ldap",
                      "radius",
                      "sip",
                      "smtp",
                      "tcp",
                      "tcp-half-open",
                      "udp"
                    ]
                  },
                  "acceptRCODE": {
                    "type": "string",
                    "enum": [
                      "anything",
                      "no-error"
                    ]
                  },
                  "adaptiveDivergenceMilliseconds": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 10000
                  },
                  "adaptiveDivergencePercentage": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 500
                  },
                  "adaptiveDivergenceType": {
                    "type": "string",
                    "enum": [
                      "absolute",
                      "relative"
                    ]
                  },
                  "adaptiveLimitMilliseconds": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 10000
                  },
                  "adaptiveWindow": {
                    "type": "integer",
                    "minimum": 60,
                    "maximum": 1800
                  },
                  "answerContains": {
                    "type": "string",
                    "enum": [
                      "any-type",
                      "anything",
                      "query-type"
                    ]
                  },
                  "arguments": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 100
                  },
                  "base": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 100
                  },
                  "ciphers": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 100
                  },
                  "clientCertificate": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 100
                  },
                  "codesDown": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "minimum": 0
                    }
                  },
                  "codesUp": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "minimum": 0
                    }
                  },
                  "domain": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 100
                  },
                  "dscp": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 63
                  },
                  "filter": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 100
                  },
                  "headers": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 100
                  },
                  "label": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 100
                  },
                  "nasIpAddress": {
                    "type": "string",
                    "format": "ipv4"
                  },
                  "pathname": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 100
                  },
                  "protocol": {
                    "type": "string",
                    "enum": [
                      "sips",
                      "tcp",
                      "tls",
                      "udp"
                    ]
                  },
                  "queryName": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 100
                  },
                  "queryType": {
                    "type": "string",
                    "enum": [
                      "a",
                      "aaaa"
                    ]
                  },
                  "receive": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 100
                  },
                  "receiveDown": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 100
                  },
                  "remark": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 100
                  },
                  "request": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 100
                  },
                  "security": {
                    "type": "string",
                    "enum": [
                      "none",
                      "ssl",
                      "tls"
                    ]
                  },
                  "send": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 100
                  },
                  "timeUntilUp": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 1800
                  },
                  "upInterval": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 3600
                  },
                  "username": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 100
                  }
                },
                "example": {
                  "name": "My name",
                  "description": "My description",
                  "interval": 5,
                  "timeout": 16,
                  "targetAddress": "192.168.10.123",
                  "targetPort": 8080,
                  "monitorType": "tcp",
                  "acceptRCODE": "no-error",
                  "adaptiveDivergenceMilliseconds": 500,
                  "answerContains": "query-type",
                  "arguments": "",
                  "dscp": 0,
                  "headers": "",
                  "protocol": "udp",
                  "queryType": "a",
                  "receiveDown": "",
                  "request": "",
                  "security": "none"
                }
              }
            }
          }
        },
        "operationId": "MonitorController.create"
      },
      "get": {
        "x-controller-name": "MonitorController",
        "x-operation-name": "find",
        "tags": [
          "MonitorController"
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieve Monitor resources",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "monitors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "tenantId": {
                            "type": "string"
                          },
                          "createdAt": {
                            "type": "date"
                          },
                          "updatedAt": {
                            "type": "date"
                          },
                          "interval": {
                            "type": "number"
                          },
                          "timeout": {
                            "type": "number"
                          },
                          "targetAddress": {
                            "type": "string"
                          },
                          "targetPort": {
                            "type": "number"
                          },
                          "monitorType": {
                            "type": "string"
                          },
                          "protocol": {
                            "type": "string"
                          }
                        },
                        "example": {
                          "id": "11111111-2222-3333-4444-555555555555",
                          "name": "My name",
                          "description": "My description",
                          "createdAt": "2019-03-05T08:40:25.000Z",
                          "updatedAt": "2019-03-05T08:40:25.100Z",
                          "interval": 5,
                          "timeout": 16,
                          "targetAddress": "192.168.10.123",
                          "targetPort": 8080,
                          "monitorType": "tcp",
                          "protocol": "udp"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "style": "deepObject",
            "explode": true,
            "schema": {
              "type": "object",
              "properties": {
                "where": {
                  "type": "object",
                  "additionalProperties": true
                },
                "fields": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "boolean"
                    },
                    "name": {
                      "type": "boolean"
                    },
                    "description": {
                      "type": "boolean"
                    },
                    "tenantId": {
                      "type": "boolean"
                    },
                    "createdAt": {
                      "type": "boolean"
                    },
                    "updatedAt": {
                      "type": "boolean"
                    },
                    "interval": {
                      "type": "boolean"
                    },
                    "timeout": {
                      "type": "boolean"
                    },
                    "targetAddress": {
                      "type": "boolean"
                    },
                    "targetPort": {
                      "type": "boolean"
                    },
                    "monitorType": {
                      "type": "boolean"
                    },
                    "acceptRCODE": {
                      "type": "boolean"
                    },
                    "adaptive": {
                      "type": "boolean"
                    },
                    "adaptiveDivergenceMilliseconds": {
                      "type": "boolean"
                    },
                    "adaptiveDivergencePercentage": {
                      "type": "boolean"
                    },
                    "adaptiveDivergenceType": {
                      "type": "boolean"
                    },
                    "adaptiveLimitMilliseconds": {
                      "type": "boolean"
                    },
                    "adaptiveWindow": {
                      "type": "boolean"
                    },
                    "answerContains": {
                      "type": "boolean"
                    },
                    "arguments": {
                      "type": "boolean"
                    },
                    "base": {
                      "type": "boolean"
                    },
                    "chaseReferrals": {
                      "type": "boolean"
                    },
                    "ciphers": {
                      "type": "boolean"
                    },
                    "clientCertificate": {
                      "type": "boolean"
                    },
                    "codesDown": {
                      "type": "boolean"
                    },
                    "codesUp": {
                      "type": "boolean"
                    },
                    "domain": {
                      "type": "boolean"
                    },
                    "dscp": {
                      "type": "boolean"
                    },
                    "expand": {
                      "type": "boolean"
                    },
                    "filter": {
                      "type": "boolean"
                    },
                    "headers": {
                      "type": "boolean"
                    },
                    "label": {
                      "type": "boolean"
                    },
                    "mandatoryAttributes": {
                      "type": "boolean"
                    },
                    "nasIpAddress": {
                      "type": "boolean"
                    },
                    "passphrase": {
                      "type": "boolean"
                    },
                    "pathname": {
                      "type": "boolean"
                    },
                    "protocol": {
                      "type": "boolean"
                    },
                    "queryName": {
                      "type": "boolean"
                    },
                    "queryType": {
                      "type": "boolean"
                    },
                    "receive": {
                      "type": "boolean"
                    },
                    "receiveDown": {
                      "type": "boolean"
                    },
                    "remark": {
                      "type": "boolean"
                    },
                    "request": {
                      "type": "boolean"
                    },
                    "reverse": {
                      "type": "boolean"
                    },
                    "script": {
                      "type": "boolean"
                    },
                    "secret": {
                      "type": "boolean"
                    },
                    "security": {
                      "type": "boolean"
                    },
                    "send": {
                      "type": "boolean"
                    },
                    "timeUntilUp": {
                      "type": "boolean"
                    },
                    "transparent": {
                      "type": "boolean"
                    },
                    "upInterval": {
                      "type": "boolean"
                    },
                    "username": {
                      "type": "boolean"
                    }
                  },
                  "additionalProperties": false
                },
                "offset": {
                  "type": "integer",
                  "minimum": 0
                },
                "limit": {
                  "type": "integer",
                  "minimum": 1,
                  "example": 100
                },
                "skip": {
                  "type": "integer",
                  "minimum": 0
                },
                "order": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "additionalProperties": false
            }
          }
        ],
        "operationId": "MonitorController.find"
      }
    },
    "/adcaas/v1/pools/{poolId}/members/{memberId}/monitors/{monitorId}": {
      "get": {
        "x-controller-name": "PoolController",
        "x-operation-name": "findMonitorOfMember",
        "tags": [
          "PoolController"
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieve  Monitor resources",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "monitor": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "tenantId": {
                          "type": "string"
                        },
                        "createdAt": {
                          "type": "date"
                        },
                        "updatedAt": {
                          "type": "date"
                        },
                        "interval": {
                          "type": "number"
                        },
                        "timeout": {
                          "type": "number"
                        },
                        "targetAddress": {
                          "type": "string"
                        },
                        "targetPort": {
                          "type": "number"
                        },
                        "monitorType": {
                          "type": "string"
                        },
                        "protocol": {
                          "type": "string"
                        }
                      },
                      "example": {
                        "id": "11111111-2222-3333-4444-555555555555",
                        "name": "My name",
                        "description": "My description",
                        "createdAt": "2019-03-05T08:40:25.000Z",
                        "updatedAt": "2019-03-05T08:40:25.100Z",
                        "interval": 5,
                        "timeout": 16,
                        "targetAddress": "192.168.10.123",
                        "targetPort": 8080,
                        "monitorType": "tcp",
                        "protocol": "udp"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Cannot find assoociation or Monitor resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array"
                    }
                  },
                  "example": {
                    "statusCode": 404,
                    "name": "Error",
                    "code": "ENTITY_NOT_FOUND"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "poolId",
            "description": "Pool resource ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": ""
            }
          },
          {
            "name": "memberId",
            "description": "Member resource ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": ""
            }
          },
          {
            "name": "monitorId",
            "description": "Monitor resource ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": ""
            }
          }
        ],
        "operationId": "PoolController.findMonitorOfMember"
      }
    },
    "/adcaas/v1/pools/{poolId}/members/{memberId}/monitors": {
      "get": {
        "x-controller-name": "PoolController",
        "x-operation-name": "findMonitorsOfMember",
        "tags": [
          "PoolController"
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieve Monitor resources",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "monitors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "tenantId": {
                            "type": "string"
                          },
                          "createdAt": {
                            "type": "date"
                          },
                          "updatedAt": {
                            "type": "date"
                          },
                          "interval": {
                            "type": "number"
                          },
                          "timeout": {
                            "type": "number"
                          },
                          "targetAddress": {
                            "type": "string"
                          },
                          "targetPort": {
                            "type": "number"
                          },
                          "monitorType": {
                            "type": "string"
                          },
                          "protocol": {
                            "type": "string"
                          }
                        },
                        "example": {
                          "id": "11111111-2222-3333-4444-555555555555",
                          "name": "My name",
                          "description": "My description",
                          "createdAt": "2019-03-05T08:40:25.000Z",
                          "updatedAt": "2019-03-05T08:40:25.100Z",
                          "interval": 5,
                          "timeout": 16,
                          "targetAddress": "192.168.10.123",
                          "targetPort": 8080,
                          "monitorType": "tcp",
                          "protocol": "udp"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "poolId",
            "description": "Pool resource ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": ""
            }
          },
          {
            "name": "memberId",
            "description": "Member resource ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": ""
            }
          }
        ],
        "operationId": "PoolController.findMonitorsOfMember"
      }
    },
    "/adcaas/v1/pools/{poolId}/members/{memberId}": {
      "patch": {
        "x-controller-name": "PoolController",
        "x-operation-name": "updateMemberByID",
        "tags": [
          "PoolController"
        ],
        "responses": {
          "200": {
            "description": "Member model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Member"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "poolId",
            "description": "Pool resource ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": ""
            }
          },
          {
            "name": "memberId",
            "description": "Member resource ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": ""
            }
          }
        ],
        "requestBody": {
          "description": "Member resource properties that need to be updated",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [],
                "properties": {
                  "id": false,
                  "name": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 50
                  },
                  "description": {
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 200
                  },
                  "tenantId": false,
                  "createdAt": false,
                  "updatedAt": false,
                  "address": {
                    "type": "string",
                    "format": "ipv4"
                  },
                  "port": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 65535
                  },
                  "poolId": {
                    "type": "string",
                    "format": "uuid"
                  }
                },
                "example": {
                  "name": "My name",
                  "description": "My description",
                  "address": "192.168.1.12",
                  "port": 80,
                  "poolId": "2d3h896a-4d82-40ee-8d08-55550dbc191"
                }
              }
            }
          },
          "x-parameter-index": 2
        },
        "operationId": "PoolController.updateMemberByID"
      },
      "get": {
        "x-controller-name": "PoolController",
        "x-operation-name": "getMemberByID",
        "tags": [
          "PoolController"
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieve member resources",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "members": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "tenantId": {
                            "type": "string"
                          },
                          "createdAt": {
                            "type": "date"
                          },
                          "updatedAt": {
                            "type": "date"
                          },
                          "address": {
                            "type": "string"
                          },
                          "port": {
                            "type": "number"
                          },
                          "poolId": {
                            "type": "string"
                          }
                        },
                        "example": {
                          "id": "11111111-2222-3333-4444-555555555555",
                          "name": "My name",
                          "description": "My description",
                          "createdAt": "2019-03-05T08:40:25.000Z",
                          "updatedAt": "2019-03-05T08:40:25.100Z",
                          "address": "192.168.1.12",
                          "port": 80,
                          "poolId": "2d3h896a-4d82-40ee-8d08-55550dbc191"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "poolId",
            "description": "Pool resource ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": ""
            }
          },
          {
            "name": "memberId",
            "description": "Member resource ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": ""
            }
          }
        ],
        "operationId": "PoolController.getMemberByID"
      },
      "delete": {
        "x-controller-name": "PoolController",
        "x-operation-name": "deleteMemberByID",
        "tags": [
          "PoolController"
        ],
        "responses": {
          "204": {
            "description": "Member DELETE success"
          }
        },
        "parameters": [
          {
            "name": "poolId",
            "description": "Pool resource ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": ""
            }
          },
          {
            "name": "memberId",
            "description": "Member resource ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": ""
            }
          }
        ],
        "operationId": "PoolController.deleteMemberByID"
      }
    },
    "/adcaas/v1/pools/{poolId}/members": {
      "post": {
        "x-controller-name": "PoolController",
        "x-operation-name": "createPoolMember",
        "tags": [
          "PoolController"
        ],
        "responses": {
          "200": {
            "description": "Successfully create Member resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "member": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "tenantId": {
                          "type": "string"
                        },
                        "createdAt": {
                          "type": "date"
                        },
                        "updatedAt": {
                          "type": "date"
                        },
                        "address": {
                          "type": "string"
                        },
                        "port": {
                          "type": "number"
                        },
                        "poolId": {
                          "type": "string"
                        }
                      },
                      "example": {
                        "id": "11111111-2222-3333-4444-555555555555",
                        "name": "My name",
                        "description": "My description",
                        "createdAt": "2019-03-05T08:40:25.000Z",
                        "updatedAt": "2019-03-05T08:40:25.100Z",
                        "address": "192.168.1.12",
                        "port": 80,
                        "poolId": "2d3h896a-4d82-40ee-8d08-55550dbc191"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid Member resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array"
                    }
                  },
                  "example": {
                    "statusCode": 400,
                    "name": "BadRequestError"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Member resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array"
                    }
                  },
                  "example": {
                    "statusCode": 422,
                    "name": "UnprocessableEntityError",
                    "message": "The request body is invalid. See error object `details` property for more info.",
                    "code": "VALIDATION_FAILED"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "poolId",
            "description": "Pool resource ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": ""
            }
          }
        ],
        "requestBody": {
          "description": "Member resource that need to be created",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [],
                "properties": {
                  "id": false,
                  "name": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 50
                  },
                  "description": {
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 200
                  },
                  "tenantId": false,
                  "createdAt": false,
                  "updatedAt": false,
                  "address": {
                    "type": "string",
                    "format": "ipv4"
                  },
                  "port": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 65535
                  },
                  "poolId": {
                    "type": "string",
                    "format": "uuid"
                  }
                },
                "example": {
                  "name": "My name",
                  "description": "My description",
                  "address": "192.168.1.12",
                  "port": 80,
                  "poolId": "2d3h896a-4d82-40ee-8d08-55550dbc191"
                }
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "PoolController.createPoolMember"
      },
      "get": {
        "x-controller-name": "PoolController",
        "x-operation-name": "getMembers",
        "tags": [
          "PoolController"
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieve member resources by pool id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "members": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "tenantId": {
                            "type": "string"
                          },
                          "createdAt": {
                            "type": "date"
                          },
                          "updatedAt": {
                            "type": "date"
                          },
                          "address": {
                            "type": "string"
                          },
                          "port": {
                            "type": "number"
                          },
                          "poolId": {
                            "type": "string"
                          }
                        },
                        "example": {
                          "id": "11111111-2222-3333-4444-555555555555",
                          "name": "My name",
                          "description": "My description",
                          "createdAt": "2019-03-05T08:40:25.000Z",
                          "updatedAt": "2019-03-05T08:40:25.100Z",
                          "address": "192.168.1.12",
                          "port": 80,
                          "poolId": "2d3h896a-4d82-40ee-8d08-55550dbc191"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "poolId",
            "description": "Pool resource ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": ""
            }
          }
        ],
        "operationId": "PoolController.getMembers"
      }
    },
    "/adcaas/v1/pools/{poolId}/monitors/{monitorId}": {
      "get": {
        "x-controller-name": "PoolController",
        "x-operation-name": "findMointorOfPool",
        "tags": [
          "PoolController"
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieve Monitor resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "monitor": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "tenantId": {
                          "type": "string"
                        },
                        "createdAt": {
                          "type": "date"
                        },
                        "updatedAt": {
                          "type": "date"
                        },
                        "interval": {
                          "type": "number"
                        },
                        "timeout": {
                          "type": "number"
                        },
                        "targetAddress": {
                          "type": "string"
                        },
                        "targetPort": {
                          "type": "number"
                        },
                        "monitorType": {
                          "type": "string"
                        },
                        "protocol": {
                          "type": "string"
                        }
                      },
                      "example": {
                        "id": "11111111-2222-3333-4444-555555555555",
                        "name": "My name",
                        "description": "My description",
                        "createdAt": "2019-03-05T08:40:25.000Z",
                        "updatedAt": "2019-03-05T08:40:25.100Z",
                        "interval": 5,
                        "timeout": 16,
                        "targetAddress": "192.168.10.123",
                        "targetPort": 8080,
                        "monitorType": "tcp",
                        "protocol": "udp"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "poolId",
            "description": "Pool resource ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": ""
            }
          },
          {
            "name": "monitorId",
            "description": "Pool resource ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": ""
            }
          }
        ],
        "operationId": "PoolController.findMointorOfPool"
      }
    },
    "/adcaas/v1/pools/{poolId}/monitors": {
      "get": {
        "x-controller-name": "PoolController",
        "x-operation-name": "findMonitorsOfPool",
        "tags": [
          "PoolController"
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieve Monitor resources",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "monitors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "tenantId": {
                            "type": "string"
                          },
                          "createdAt": {
                            "type": "date"
                          },
                          "updatedAt": {
                            "type": "date"
                          },
                          "interval": {
                            "type": "number"
                          },
                          "timeout": {
                            "type": "number"
                          },
                          "targetAddress": {
                            "type": "string"
                          },
                          "targetPort": {
                            "type": "number"
                          },
                          "monitorType": {
                            "type": "string"
                          },
                          "protocol": {
                            "type": "string"
                          }
                        },
                        "example": {
                          "id": "11111111-2222-3333-4444-555555555555",
                          "name": "My name",
                          "description": "My description",
                          "createdAt": "2019-03-05T08:40:25.000Z",
                          "updatedAt": "2019-03-05T08:40:25.100Z",
                          "interval": 5,
                          "timeout": 16,
                          "targetAddress": "192.168.10.123",
                          "targetPort": 8080,
                          "monitorType": "tcp",
                          "protocol": "udp"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "poolId",
            "description": "Pool resource ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": ""
            }
          }
        ],
        "operationId": "PoolController.findMonitorsOfPool"
      }
    },
    "/adcaas/v1/pools/{poolId}": {
      "patch": {
        "x-controller-name": "PoolController",
        "x-operation-name": "updateById",
        "tags": [
          "PoolController"
        ],
        "responses": {
          "204": {
            "description": "Successfully update Pool resource"
          },
          "404": {
            "description": "Can not find Pool resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array"
                    }
                  },
                  "example": {
                    "statusCode": 404,
                    "name": "Error",
                    "code": "ENTITY_NOT_FOUND"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "poolId",
            "description": "Pool resource ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": ""
            }
          }
        ],
        "requestBody": {
          "description": "Pool resource properties that need to be updated",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [],
                "properties": {
                  "id": false,
                  "name": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 50
                  },
                  "description": {
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 200
                  },
                  "tenantId": false,
                  "createdAt": false,
                  "updatedAt": false,
                  "loadBalancingMode": {
                    "type": "string",
                    "enum": [
                      "dynamic-ratio-member",
                      "dynamic-ratio-node",
                      "fastest-app-response",
                      "fastest-node",
                      "least-connections-member",
                      "least-connections-node",
                      "least-sessions",
                      "observed-member",
                      "observed-node",
                      "predictive-member",
                      "predictive-node",
                      "ratio-least-connections-member",
                      "ratio-least-connections-node",
                      "ratio-member",
                      "ratio-node",
                      "ratio-session",
                      "round-robin",
                      "weighted-least-connections-member",
                      "weighted-least-connections-node"
                    ]
                  },
                  "minimumMembersActive": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 65535
                  },
                  "minimumMonitors": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 63
                  },
                  "reselectTries": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 65535
                  },
                  "serviceDownAction": {
                    "type": "string",
                    "enum": [
                      "none",
                      "drop",
                      "reselect",
                      "reset"
                    ]
                  },
                  "slowRampTime": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 900
                  }
                },
                "example": {
                  "name": "My name",
                  "description": "My description",
                  "loadBalancingMode": "round-robin",
                  "minimumMembersActive": 1,
                  "minimumMonitors": 1,
                  "reselectTries": 0,
                  "serviceDownAction": "drop",
                  "slowRampTime": 10
                }
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "PoolController.updateById"
      },
      "get": {
        "x-controller-name": "PoolController",
        "x-operation-name": "findById",
        "tags": [
          "PoolController"
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieve Pool resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "pool": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "tenantId": {
                          "type": "string"
                        },
                        "createdAt": {
                          "type": "date"
                        },
                        "updatedAt": {
                          "type": "date"
                        },
                        "loadBalancingMode": {
                          "type": "string"
                        },
                        "minimumMembersActive": {
                          "type": "number"
                        },
                        "minimumMonitors": {
                          "type": "number"
                        },
                        "reselectTries": {
                          "type": "number"
                        },
                        "serviceDownAction": {
                          "type": "string"
                        },
                        "slowRampTime": {
                          "type": "number"
                        }
                      },
                      "example": {
                        "id": "11111111-2222-3333-4444-555555555555",
                        "name": "My name",
                        "description": "My description",
                        "createdAt": "2019-03-05T08:40:25.000Z",
                        "updatedAt": "2019-03-05T08:40:25.100Z",
                        "loadBalancingMode": "round-robin",
                        "minimumMembersActive": 1,
                        "minimumMonitors": 1,
                        "reselectTries": 0,
                        "serviceDownAction": "drop",
                        "slowRampTime": 10
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Can not find Pool resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array"
                    }
                  },
                  "example": {
                    "statusCode": 404,
                    "name": "Error",
                    "code": "ENTITY_NOT_FOUND"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "poolId",
            "description": "Pool resource ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": ""
            }
          }
        ],
        "operationId": "PoolController.findById"
      },
      "delete": {
        "x-controller-name": "PoolController",
        "x-operation-name": "deleteById",
        "tags": [
          "PoolController"
        ],
        "responses": {
          "204": {
            "description": "Successfully delete Pool resource"
          },
          "404": {
            "description": "Can not find Pool resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array"
                    }
                  },
                  "example": {
                    "statusCode": 404,
                    "name": "Error",
                    "code": "ENTITY_NOT_FOUND"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "poolId",
            "description": "Pool resource ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": ""
            }
          }
        ],
        "operationId": "PoolController.deleteById"
      }
    },
    "/adcaas/v1/pools": {
      "post": {
        "x-controller-name": "PoolController",
        "x-operation-name": "create",
        "tags": [
          "PoolController"
        ],
        "responses": {
          "200": {
            "description": "Successfully create Pool resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "pool": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "tenantId": {
                          "type": "string"
                        },
                        "createdAt": {
                          "type": "date"
                        },
                        "updatedAt": {
                          "type": "date"
                        },
                        "loadBalancingMode": {
                          "type": "string"
                        },
                        "minimumMembersActive": {
                          "type": "number"
                        },
                        "minimumMonitors": {
                          "type": "number"
                        },
                        "reselectTries": {
                          "type": "number"
                        },
                        "serviceDownAction": {
                          "type": "string"
                        },
                        "slowRampTime": {
                          "type": "number"
                        }
                      },
                      "example": {
                        "id": "11111111-2222-3333-4444-555555555555",
                        "name": "My name",
                        "description": "My description",
                        "createdAt": "2019-03-05T08:40:25.000Z",
                        "updatedAt": "2019-03-05T08:40:25.100Z",
                        "loadBalancingMode": "round-robin",
                        "minimumMembersActive": 1,
                        "minimumMonitors": 1,
                        "reselectTries": 0,
                        "serviceDownAction": "drop",
                        "slowRampTime": 10
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid Pool resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array"
                    }
                  },
                  "example": {
                    "statusCode": 400,
                    "name": "BadRequestError"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Pool resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array"
                    }
                  },
                  "example": {
                    "statusCode": 422,
                    "name": "UnprocessableEntityError",
                    "message": "The request body is invalid. See error object `details` property for more info.",
                    "code": "VALIDATION_FAILED"
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Pool resource that need to be created",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [],
                "properties": {
                  "id": false,
                  "name": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 50
                  },
                  "description": {
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 200
                  },
                  "tenantId": false,
                  "createdAt": false,
                  "updatedAt": false,
                  "loadBalancingMode": {
                    "type": "string",
                    "enum": [
                      "dynamic-ratio-member",
                      "dynamic-ratio-node",
                      "fastest-app-response",
                      "fastest-node",
                      "least-connections-member",
                      "least-connections-node",
                      "least-sessions",
                      "observed-member",
                      "observed-node",
                      "predictive-member",
                      "predictive-node",
                      "ratio-least-connections-member",
                      "ratio-least-connections-node",
                      "ratio-member",
                      "ratio-node",
                      "ratio-session",
                      "round-robin",
                      "weighted-least-connections-member",
                      "weighted-least-connections-node"
                    ]
                  },
                  "minimumMembersActive": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 65535
                  },
                  "minimumMonitors": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 63
                  },
                  "reselectTries": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 65535
                  },
                  "serviceDownAction": {
                    "type": "string",
                    "enum": [
                      "none",
                      "drop",
                      "reselect",
                      "reset"
                    ]
                  },
                  "slowRampTime": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 900
                  }
                },
                "example": {
                  "name": "My name",
                  "description": "My description",
                  "loadBalancingMode": "round-robin",
                  "minimumMembersActive": 1,
                  "minimumMonitors": 1,
                  "reselectTries": 0,
                  "serviceDownAction": "drop",
                  "slowRampTime": 10
                }
              }
            }
          }
        },
        "operationId": "PoolController.create"
      },
      "get": {
        "x-controller-name": "PoolController",
        "x-operation-name": "find",
        "tags": [
          "PoolController"
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieve Pool resources",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "pools": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "tenantId": {
                            "type": "string"
                          },
                          "createdAt": {
                            "type": "date"
                          },
                          "updatedAt": {
                            "type": "date"
                          },
                          "loadBalancingMode": {
                            "type": "string"
                          },
                          "minimumMembersActive": {
                            "type": "number"
                          },
                          "minimumMonitors": {
                            "type": "number"
                          },
                          "reselectTries": {
                            "type": "number"
                          },
                          "serviceDownAction": {
                            "type": "string"
                          },
                          "slowRampTime": {
                            "type": "number"
                          }
                        },
                        "example": {
                          "id": "11111111-2222-3333-4444-555555555555",
                          "name": "My name",
                          "description": "My description",
                          "createdAt": "2019-03-05T08:40:25.000Z",
                          "updatedAt": "2019-03-05T08:40:25.100Z",
                          "loadBalancingMode": "round-robin",
                          "minimumMembersActive": 1,
                          "minimumMonitors": 1,
                          "reselectTries": 0,
                          "serviceDownAction": "drop",
                          "slowRampTime": 10
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "style": "deepObject",
            "explode": true,
            "schema": {
              "type": "object",
              "properties": {
                "where": {
                  "type": "object",
                  "additionalProperties": true
                },
                "fields": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "boolean"
                    },
                    "name": {
                      "type": "boolean"
                    },
                    "description": {
                      "type": "boolean"
                    },
                    "tenantId": {
                      "type": "boolean"
                    },
                    "createdAt": {
                      "type": "boolean"
                    },
                    "updatedAt": {
                      "type": "boolean"
                    },
                    "loadBalancingMode": {
                      "type": "boolean"
                    },
                    "minimumMembersActive": {
                      "type": "boolean"
                    },
                    "minimumMonitors": {
                      "type": "boolean"
                    },
                    "reselectTries": {
                      "type": "boolean"
                    },
                    "serviceDownAction": {
                      "type": "boolean"
                    },
                    "slowRampTime": {
                      "type": "boolean"
                    }
                  },
                  "additionalProperties": false
                },
                "offset": {
                  "type": "integer",
                  "minimum": 0
                },
                "limit": {
                  "type": "integer",
                  "minimum": 1,
                  "example": 100
                },
                "skip": {
                  "type": "integer",
                  "minimum": 0
                },
                "order": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "include": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "relation": {
                        "type": "string"
                      },
                      "scope": {
                        "properties": {
                          "where": {
                            "type": "object",
                            "additionalProperties": true
                          },
                          "fields": {
                            "type": "object",
                            "properties": {},
                            "additionalProperties": true
                          },
                          "offset": {
                            "type": "integer",
                            "minimum": 0
                          },
                          "limit": {
                            "type": "integer",
                            "minimum": 1,
                            "example": 100
                          },
                          "skip": {
                            "type": "integer",
                            "minimum": 0
                          },
                          "order": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        },
                        "additionalProperties": false
                      }
                    }
                  }
                }
              },
              "additionalProperties": false
            }
          }
        ],
        "operationId": "PoolController.find"
      }
    },
    "/adcaas/v1/profiles/http2_profiles/{profileId}": {
      "delete": {
        "x-controller-name": "ProfileHTTP2ProfileController",
        "x-operation-name": "deleteById",
        "tags": [
          "ProfileHTTP2ProfileController"
        ],
        "responses": {
          "204": {
            "description": "Successfully delete ProfileHTTP2Profile resource"
          },
          "404": {
            "description": "Can not find ProfileHTTP2Profile resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array"
                    }
                  },
                  "example": {
                    "statusCode": 404,
                    "name": "Error",
                    "code": "ENTITY_NOT_FOUND"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "profileId",
            "description": "ProfileHTTP2Profile resource ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": ""
            }
          }
        ],
        "operationId": "ProfileHTTP2ProfileController.deleteById"
      }
    },
    "/adcaas/v1/profiles/http2_profiles": {
      "post": {
        "x-controller-name": "ProfileHTTP2ProfileController",
        "x-operation-name": "create",
        "tags": [
          "ProfileHTTP2ProfileController"
        ],
        "responses": {
          "200": {
            "description": "Successfully create HTTP2_Profile profile resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "profilehttp2profile": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "tenantId": {
                          "type": "string"
                        },
                        "createdAt": {
                          "type": "date"
                        },
                        "updatedAt": {
                          "type": "date"
                        },
                        "activationMode": {
                          "type": "string"
                        },
                        "concurrentStreamsPerConnection": {
                          "type": "number"
                        },
                        "connectionIdleTimeout": {
                          "type": "number"
                        },
                        "enforceTlsRequirements": {
                          "type": "boolean"
                        },
                        "frameSize": {
                          "type": "number"
                        },
                        "headerTableSize": {
                          "type": "number"
                        },
                        "includeContentLength": {
                          "type": "boolean"
                        },
                        "insertHeader": {
                          "type": "boolean"
                        },
                        "insertHeaderName": {
                          "type": "string"
                        },
                        "receiveWindow": {
                          "type": "number"
                        },
                        "remark": {
                          "type": "string"
                        },
                        "writeSize": {
                          "type": "number"
                        }
                      },
                      "example": {
                        "id": "11111111-2222-3333-4444-555555555555",
                        "name": "My name",
                        "description": "My description",
                        "createdAt": "2019-03-05T08:40:25.000Z",
                        "updatedAt": "2019-03-05T08:40:25.100Z",
                        "activationMode": "always",
                        "concurrentStreamsPerConnection": 10,
                        "connectionIdleTimeout": 300,
                        "enforceTlsRequirements": true,
                        "frameSize": 300,
                        "headerTableSize": 300,
                        "includeContentLength": true,
                        "insertHeader": true,
                        "insertHeaderName": "",
                        "receiveWindow": 32,
                        "remark": "",
                        "writeSize": 16384
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid profile resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array"
                    }
                  },
                  "example": {
                    "statusCode": 400,
                    "name": "BadRequestError"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable profile resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array"
                    }
                  },
                  "example": {
                    "statusCode": 422,
                    "name": "UnprocessableEntityError",
                    "message": "The request body is invalid. See error object `details` property for more info.",
                    "code": "VALIDATION_FAILED"
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "ProfileHTTP2Profile resource that need to be created",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [],
                "properties": {
                  "id": false,
                  "name": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 50
                  },
                  "description": {
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 200
                  },
                  "tenantId": false,
                  "createdAt": false,
                  "updatedAt": false,
                  "activationMode": {
                    "type": "string",
                    "enum": [
                      "always",
                      "alpn"
                    ]
                  },
                  "concurrentStreamsPerConnection": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 256
                  },
                  "connectionIdleTimeout": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 4294967295
                  },
                  "enforceTlsRequirements": {
                    "type": "boolean"
                  },
                  "frameSize": {
                    "type": "integer",
                    "minimum": 1024,
                    "maximum": 16384
                  },
                  "headerTableSize": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 65535
                  },
                  "includeContentLength": {
                    "type": "boolean"
                  },
                  "insertHeader": {
                    "type": "boolean"
                  },
                  "insertHeaderName": {
                    "type": "string"
                  },
                  "receiveWindow": {
                    "type": "integer",
                    "minimum": 16,
                    "maximum": 128
                  },
                  "remark": {
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 4096
                  },
                  "writeSize": {
                    "type": "integer",
                    "minimum": 2048,
                    "maximum": 32768
                  }
                },
                "example": {
                  "name": "My name",
                  "description": "My description",
                  "activationMode": "always",
                  "concurrentStreamsPerConnection": 10,
                  "connectionIdleTimeout": 300,
                  "enforceTlsRequirements": true,
                  "frameSize": 300,
                  "headerTableSize": 300,
                  "includeContentLength": true,
                  "insertHeader": true,
                  "insertHeaderName": "",
                  "receiveWindow": 32,
                  "remark": "",
                  "writeSize": 16384
                }
              }
            }
          }
        },
        "operationId": "ProfileHTTP2ProfileController.create"
      },
      "get": {
        "x-controller-name": "ProfileHTTP2ProfileController",
        "x-operation-name": "find",
        "tags": [
          "ProfileHTTP2ProfileController"
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieve ProfileHTTP2Profile resources",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "profilehttp2profiles": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "tenantId": {
                            "type": "string"
                          },
                          "createdAt": {
                            "type": "date"
                          },
                          "updatedAt": {
                            "type": "date"
                          },
                          "activationMode": {
                            "type": "string"
                          },
                          "concurrentStreamsPerConnection": {
                            "type": "number"
                          },
                          "connectionIdleTimeout": {
                            "type": "number"
                          },
                          "enforceTlsRequirements": {
                            "type": "boolean"
                          },
                          "frameSize": {
                            "type": "number"
                          },
                          "headerTableSize": {
                            "type": "number"
                          },
                          "includeContentLength": {
                            "type": "boolean"
                          },
                          "insertHeader": {
                            "type": "boolean"
                          },
                          "insertHeaderName": {
                            "type": "string"
                          },
                          "receiveWindow": {
                            "type": "number"
                          },
                          "remark": {
                            "type": "string"
                          },
                          "writeSize": {
                            "type": "number"
                          }
                        },
                        "example": {
                          "id": "11111111-2222-3333-4444-555555555555",
                          "name": "My name",
                          "description": "My description",
                          "createdAt": "2019-03-05T08:40:25.000Z",
                          "updatedAt": "2019-03-05T08:40:25.100Z",
                          "activationMode": "always",
                          "concurrentStreamsPerConnection": 10,
                          "connectionIdleTimeout": 300,
                          "enforceTlsRequirements": true,
                          "frameSize": 300,
                          "headerTableSize": 300,
                          "includeContentLength": true,
                          "insertHeader": true,
                          "insertHeaderName": "",
                          "receiveWindow": 32,
                          "remark": "",
                          "writeSize": 16384
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "style": "deepObject",
            "explode": true,
            "schema": {
              "type": "object",
              "properties": {
                "where": {
                  "type": "object",
                  "additionalProperties": true
                },
                "fields": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "boolean"
                    },
                    "name": {
                      "type": "boolean"
                    },
                    "description": {
                      "type": "boolean"
                    },
                    "tenantId": {
                      "type": "boolean"
                    },
                    "createdAt": {
                      "type": "boolean"
                    },
                    "updatedAt": {
                      "type": "boolean"
                    },
                    "activationMode": {
                      "type": "boolean"
                    },
                    "concurrentStreamsPerConnection": {
                      "type": "boolean"
                    },
                    "connectionIdleTimeout": {
                      "type": "boolean"
                    },
                    "enforceTlsRequirements": {
                      "type": "boolean"
                    },
                    "frameSize": {
                      "type": "boolean"
                    },
                    "headerTableSize": {
                      "type": "boolean"
                    },
                    "includeContentLength": {
                      "type": "boolean"
                    },
                    "insertHeader": {
                      "type": "boolean"
                    },
                    "insertHeaderName": {
                      "type": "boolean"
                    },
                    "receiveWindow": {
                      "type": "boolean"
                    },
                    "remark": {
                      "type": "boolean"
                    },
                    "writeSize": {
                      "type": "boolean"
                    }
                  },
                  "additionalProperties": false
                },
                "offset": {
                  "type": "integer",
                  "minimum": 0
                },
                "limit": {
                  "type": "integer",
                  "minimum": 1,
                  "example": 100
                },
                "skip": {
                  "type": "integer",
                  "minimum": 0
                },
                "order": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "additionalProperties": false
            }
          }
        ],
        "operationId": "ProfileHTTP2ProfileController.find"
      }
    },
    "/adcaas/v1/profiles/http_compress_profiles/{profileId}": {
      "delete": {
        "x-controller-name": "ProfileHTTPCompressionController",
        "x-operation-name": "deleteById",
        "tags": [
          "ProfileHTTPCompressionController"
        ],
        "responses": {
          "204": {
            "description": "Successfully delete ProfileHTTPCompress resource"
          },
          "404": {
            "description": "Can not find ProfileHTTPCompress resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array"
                    }
                  },
                  "example": {
                    "statusCode": 404,
                    "name": "Error",
                    "code": "ENTITY_NOT_FOUND"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "profileId",
            "description": "ProfileHTTPCompress resource ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": ""
            }
          }
        ],
        "operationId": "ProfileHTTPCompressionController.deleteById"
      }
    },
    "/adcaas/v1/profiles/http_compress_profiles": {
      "post": {
        "x-controller-name": "ProfileHTTPCompressionController",
        "x-operation-name": "create",
        "tags": [
          "ProfileHTTPCompressionController"
        ],
        "responses": {
          "200": {
            "description": "Successfully create HTTP_Compress profile resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "profilehttpcompression": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "tenantId": {
                          "type": "string"
                        },
                        "createdAt": {
                          "type": "date"
                        },
                        "updatedAt": {
                          "type": "date"
                        },
                        "allowHTTP10": {
                          "type": "boolean"
                        },
                        "bufferSize": {
                          "type": "number"
                        },
                        "contentTypeExcludes": {
                          "type": "array"
                        },
                        "contentTypeIncludes": {
                          "type": "array"
                        },
                        "cpuSaver": {
                          "type": "boolean"
                        },
                        "cpuSaverHigh": {
                          "type": "number"
                        },
                        "cpuSaverLow": {
                          "type": "number"
                        },
                        "gzipLevel": {
                          "type": "number"
                        },
                        "gzipMemory": {
                          "type": "number"
                        },
                        "gzipWindowSize": {
                          "type": "number"
                        },
                        "keepAcceptEncoding": {
                          "type": "boolean"
                        },
                        "label": {
                          "type": "string"
                        },
                        "minimumSize": {
                          "type": "number"
                        },
                        "preferMethod": {
                          "type": "string"
                        },
                        "remark": {
                          "type": "string"
                        },
                        "selective": {
                          "type": "boolean"
                        },
                        "uriExcludes": {
                          "type": "array"
                        },
                        "uriIncludes": {
                          "type": "array"
                        },
                        "varyHeader": {
                          "type": "boolean"
                        }
                      },
                      "example": {
                        "id": "11111111-2222-3333-4444-555555555555",
                        "name": "My name",
                        "description": "My description",
                        "createdAt": "2019-03-05T08:40:25.000Z",
                        "updatedAt": "2019-03-05T08:40:25.100Z",
                        "allowHTTP10": true,
                        "bufferSize": 4096,
                        "contentTypeExcludes": [
                          "application/json",
                          "text/xml"
                        ],
                        "contentTypeIncludes": [
                          "application/json",
                          "text/xml"
                        ],
                        "cpuSaver": true,
                        "cpuSaverHigh": 90,
                        "cpuSaverLow": 75,
                        "gzipLevel": 1,
                        "gzipMemory": 8,
                        "gzipWindowSize": 16,
                        "keepAcceptEncoding": true,
                        "minimumSize": 1024,
                        "preferMethod": "gzip",
                        "remark": "any string",
                        "selective": true,
                        "uriExcludes": [
                          "http://example.org"
                        ],
                        "uriIncludes": [
                          "http://example.org"
                        ],
                        "varyHeader": true
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid profile resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array"
                    }
                  },
                  "example": {
                    "statusCode": 400,
                    "name": "BadRequestError"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable profile resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array"
                    }
                  },
                  "example": {
                    "statusCode": 422,
                    "name": "UnprocessableEntityError",
                    "message": "The request body is invalid. See error object `details` property for more info.",
                    "code": "VALIDATION_FAILED"
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "ProfileHTTPCompress resource that need to be created",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [],
                "properties": {
                  "id": false,
                  "name": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 50
                  },
                  "description": {
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 200
                  },
                  "tenantId": false,
                  "createdAt": false,
                  "updatedAt": false,
                  "allowHTTP10": {
                    "type": "boolean"
                  },
                  "bufferSize": {
                    "type": "integer",
                    "minimum": 256,
                    "maximum": 32768
                  },
                  "contentTypeExcludes": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "maxLength": 64
                    }
                  },
                  "contentTypeIncludes": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "maxLength": 64
                    }
                  },
                  "cpuSaver": {
                    "type": "boolean"
                  },
                  "cpuSaverHigh": {
                    "type": "integer",
                    "minimum": 15,
                    "maximum": 99
                  },
                  "cpuSaverLow": {
                    "type": "integer",
                    "minimum": 10,
                    "maximum": 95
                  },
                  "gzipLevel": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 9
                  },
                  "gzipMemory": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 256
                  },
                  "gzipWindowSize": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 128
                  },
                  "keepAcceptEncoding": {
                    "type": "boolean"
                  },
                  "label": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 100
                  },
                  "minimumSize": {
                    "type": "integer",
                    "minimum": 128,
                    "maximum": 131072
                  },
                  "preferMethod": {
                    "type": "string",
                    "enum": [
                      "gzip",
                      "deflate"
                    ]
                  },
                  "remark": {
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 4096
                  },
                  "selective": {
                    "type": "boolean"
                  },
                  "uriExcludes": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "uri",
                      "maxLength": 1024
                    }
                  },
                  "uriIncludes": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "uri",
                      "maxLength": 1024
                    }
                  },
                  "varyHeader": {
                    "type": "boolean"
                  }
                },
                "example": {
                  "name": "My name",
                  "description": "My description",
                  "allowHTTP10": true,
                  "bufferSize": 4096,
                  "contentTypeExcludes": [
                    "application/json",
                    "text/xml"
                  ],
                  "contentTypeIncludes": [
                    "application/json",
                    "text/xml"
                  ],
                  "cpuSaver": true,
                  "cpuSaverHigh": 90,
                  "cpuSaverLow": 75,
                  "gzipLevel": 1,
                  "gzipMemory": 8,
                  "gzipWindowSize": 16,
                  "keepAcceptEncoding": true,
                  "minimumSize": 1024,
                  "preferMethod": "gzip",
                  "remark": "any string",
                  "selective": true,
                  "uriExcludes": [
                    "http://example.org"
                  ],
                  "uriIncludes": [
                    "http://example.org"
                  ],
                  "varyHeader": true
                }
              }
            }
          }
        },
        "operationId": "ProfileHTTPCompressionController.create"
      },
      "get": {
        "x-controller-name": "ProfileHTTPCompressionController",
        "x-operation-name": "find",
        "tags": [
          "ProfileHTTPCompressionController"
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieve ProfileHTTPCompress resources",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "profilehttpcompressions": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "tenantId": {
                            "type": "string"
                          },
                          "createdAt": {
                            "type": "date"
                          },
                          "updatedAt": {
                            "type": "date"
                          },
                          "allowHTTP10": {
                            "type": "boolean"
                          },
                          "bufferSize": {
                            "type": "number"
                          },
                          "contentTypeExcludes": {
                            "type": "array"
                          },
                          "contentTypeIncludes": {
                            "type": "array"
                          },
                          "cpuSaver": {
                            "type": "boolean"
                          },
                          "cpuSaverHigh": {
                            "type": "number"
                          },
                          "cpuSaverLow": {
                            "type": "number"
                          },
                          "gzipLevel": {
                            "type": "number"
                          },
                          "gzipMemory": {
                            "type": "number"
                          },
                          "gzipWindowSize": {
                            "type": "number"
                          },
                          "keepAcceptEncoding": {
                            "type": "boolean"
                          },
                          "label": {
                            "type": "string"
                          },
                          "minimumSize": {
                            "type": "number"
                          },
                          "preferMethod": {
                            "type": "string"
                          },
                          "remark": {
                            "type": "string"
                          },
                          "selective": {
                            "type": "boolean"
                          },
                          "uriExcludes": {
                            "type": "array"
                          },
                          "uriIncludes": {
                            "type": "array"
                          },
                          "varyHeader": {
                            "type": "boolean"
                          }
                        },
                        "example": {
                          "id": "11111111-2222-3333-4444-555555555555",
                          "name": "My name",
                          "description": "My description",
                          "createdAt": "2019-03-05T08:40:25.000Z",
                          "updatedAt": "2019-03-05T08:40:25.100Z",
                          "allowHTTP10": true,
                          "bufferSize": 4096,
                          "contentTypeExcludes": [
                            "application/json",
                            "text/xml"
                          ],
                          "contentTypeIncludes": [
                            "application/json",
                            "text/xml"
                          ],
                          "cpuSaver": true,
                          "cpuSaverHigh": 90,
                          "cpuSaverLow": 75,
                          "gzipLevel": 1,
                          "gzipMemory": 8,
                          "gzipWindowSize": 16,
                          "keepAcceptEncoding": true,
                          "minimumSize": 1024,
                          "preferMethod": "gzip",
                          "remark": "any string",
                          "selective": true,
                          "uriExcludes": [
                            "http://example.org"
                          ],
                          "uriIncludes": [
                            "http://example.org"
                          ],
                          "varyHeader": true
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "style": "deepObject",
            "explode": true,
            "schema": {
              "type": "object",
              "properties": {
                "where": {
                  "type": "object",
                  "additionalProperties": true
                },
                "fields": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "boolean"
                    },
                    "name": {
                      "type": "boolean"
                    },
                    "description": {
                      "type": "boolean"
                    },
                    "tenantId": {
                      "type": "boolean"
                    },
                    "createdAt": {
                      "type": "boolean"
                    },
                    "updatedAt": {
                      "type": "boolean"
                    },
                    "allowHTTP10": {
                      "type": "boolean"
                    },
                    "bufferSize": {
                      "type": "boolean"
                    },
                    "contentTypeExcludes": {
                      "type": "boolean"
                    },
                    "contentTypeIncludes": {
                      "type": "boolean"
                    },
                    "cpuSaver": {
                      "type": "boolean"
                    },
                    "cpuSaverHigh": {
                      "type": "boolean"
                    },
                    "cpuSaverLow": {
                      "type": "boolean"
                    },
                    "gzipLevel": {
                      "type": "boolean"
                    },
                    "gzipMemory": {
                      "type": "boolean"
                    },
                    "gzipWindowSize": {
                      "type": "boolean"
                    },
                    "keepAcceptEncoding": {
                      "type": "boolean"
                    },
                    "label": {
                      "type": "boolean"
                    },
                    "minimumSize": {
                      "type": "boolean"
                    },
                    "preferMethod": {
                      "type": "boolean"
                    },
                    "remark": {
                      "type": "boolean"
                    },
                    "selective": {
                      "type": "boolean"
                    },
                    "uriExcludes": {
                      "type": "boolean"
                    },
                    "uriIncludes": {
                      "type": "boolean"
                    },
                    "varyHeader": {
                      "type": "boolean"
                    }
                  },
                  "additionalProperties": false
                },
                "offset": {
                  "type": "integer",
                  "minimum": 0
                },
                "limit": {
                  "type": "integer",
                  "minimum": 1,
                  "example": 100
                },
                "skip": {
                  "type": "integer",
                  "minimum": 0
                },
                "order": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "additionalProperties": false
            }
          }
        ],
        "operationId": "ProfileHTTPCompressionController.find"
      }
    },
    "/adcaas/v1/profiles/http_profiles/{profileId}": {
      "delete": {
        "x-controller-name": "ProfileHttpProfileController",
        "x-operation-name": "deleteById",
        "tags": [
          "ProfileHttpProfileController"
        ],
        "responses": {
          "204": {
            "description": "Successfully delete ProfileHTTPProfile resource"
          },
          "404": {
            "description": "Can not find ProfileHTTPProfile resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array"
                    }
                  },
                  "example": {
                    "statusCode": 404,
                    "name": "Error",
                    "code": "ENTITY_NOT_FOUND"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "profileId",
            "description": "ProfileHTTPProfile resource ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": ""
            }
          }
        ],
        "operationId": "ProfileHttpProfileController.deleteById"
      }
    },
    "/adcaas/v1/profiles/http_profiles": {
      "post": {
        "x-controller-name": "ProfileHttpProfileController",
        "x-operation-name": "create",
        "tags": [
          "ProfileHttpProfileController"
        ],
        "responses": {
          "200": {
            "description": "Successfully create HTTP_Profile profile resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "profilehttpprofile": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "tenantId": {
                          "type": "string"
                        },
                        "createdAt": {
                          "type": "date"
                        },
                        "updatedAt": {
                          "type": "date"
                        },
                        "allowedResponseHeaders": {
                          "type": "array"
                        },
                        "badRequestMessage": {
                          "type": "string"
                        },
                        "badResponseMessage": {
                          "type": "string"
                        },
                        "connectErrorMessage": {
                          "type": "string"
                        },
                        "defaultConnectAction": {
                          "type": "string"
                        },
                        "dnsErrorMessage": {
                          "type": "string"
                        },
                        "doNotProxyHosts": {
                          "type": "array"
                        },
                        "encryptCookies": {
                          "type": "array"
                        },
                        "fallbackRedirect": {
                          "type": "string"
                        },
                        "fallbackStatusCodes": {
                          "type": "array"
                        },
                        "hstsIncludeSubdomains": {
                          "type": "boolean"
                        },
                        "hstsInsert": {
                          "type": "boolean"
                        },
                        "hstsPeriod": {
                          "type": "number"
                        },
                        "hstsPreload": {
                          "type": "boolean"
                        },
                        "ipv6": {
                          "type": "boolean"
                        },
                        "knownMethods": {
                          "type": "array"
                        },
                        "maxHeaderCount": {
                          "type": "number"
                        },
                        "maxHeaderSize": {
                          "type": "number"
                        },
                        "maxRequests": {
                          "type": "number"
                        },
                        "multiplexTransformations": {
                          "type": "boolean"
                        },
                        "otherXFF": {
                          "type": "array"
                        },
                        "pipelineAction": {
                          "type": "string"
                        },
                        "proxyType": {
                          "type": "string"
                        },
                        "remark": {
                          "type": "string"
                        },
                        "requestChunking": {
                          "type": "string"
                        },
                        "responseChunking": {
                          "type": "string"
                        },
                        "rewriteRedirects": {
                          "type": "string"
                        },
                        "routeDomain": {
                          "type": "number"
                        },
                        "serverHeaderValue": {
                          "type": "string"
                        },
                        "truncatedRedirects": {
                          "type": "boolean"
                        },
                        "trustXFF": {
                          "type": "boolean"
                        },
                        "tunnelName": {
                          "type": "string"
                        },
                        "unknownMethodAction": {
                          "type": "string"
                        },
                        "viaHost": {
                          "type": "string"
                        },
                        "viaRequest": {
                          "type": "string"
                        },
                        "viaResponse": {
                          "type": "string"
                        },
                        "webSocketMasking": {
                          "type": "string"
                        },
                        "webSocketsEnabled": {
                          "type": "boolean"
                        },
                        "whiteOutHeader": {
                          "type": "string"
                        },
                        "xForwardedFor": {
                          "type": "boolean"
                        }
                      },
                      "example": {
                        "id": "11111111-2222-3333-4444-555555555555",
                        "name": "My name",
                        "description": "My description",
                        "createdAt": "2019-03-05T08:40:25.000Z",
                        "updatedAt": "2019-03-05T08:40:25.100Z",
                        "allowedResponseHeaders": [
                          "content-type",
                          "cookie"
                        ],
                        "badRequestMessage": "<html><head><title>Bad Request</title></head><body><h2>Invalid proxy request</h2></body></html>",
                        "badResponseMessage": "<html><head><title>Bad Response</title></head><body><h2>Proxy request provoked invalid response</h2></body></html>",
                        "connectErrorMessage": "<html><head><title>Connection Error</title></head><body><h2>Unable to connect to host in proxy request</h2></body></html>",
                        "defaultConnectAction": "allow",
                        "dnsErrorMessage": "<html><head><title>DNS Resolution Error</title></head><body><h2>Cannot resolve hostname in proxy request</h2></body></html>",
                        "doNotProxyHosts": [
                          "hosta",
                          "hostb"
                        ],
                        "encryptCookies": [
                          "content-type",
                          "cookie"
                        ],
                        "fallbackRedirect": "http://example.com",
                        "fallbackStatusCodes": [
                          400,
                          401
                        ],
                        "hstsIncludeSubdomains": true,
                        "hstsInsert": true,
                        "hstsPeriod": 7862400,
                        "hstsPreload": true,
                        "ipv6": true,
                        "knownMethods": [],
                        "maxHeaderCount": 64,
                        "maxHeaderSize": 32768,
                        "maxRequests": 0,
                        "multiplexTransformations": true,
                        "otherXFF": [],
                        "pipelineAction": "allow",
                        "proxyType": "reverse",
                        "remark": "",
                        "requestChunking": "preserve",
                        "responseChunking": "selective",
                        "rewriteRedirects": "none",
                        "routeDomain": 0,
                        "serverHeaderValue": "BigIP",
                        "truncatedRedirects": true,
                        "trustXFF": true,
                        "tunnelName": "http-tunnel",
                        "unknownMethodAction": "allow",
                        "viaHost": "",
                        "viaRequest": "remove",
                        "viaResponse": "remove",
                        "webSocketMasking": "unmask",
                        "webSocketsEnabled": true,
                        "whiteOutHeader": "",
                        "xForwardedFor": true
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid profile resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array"
                    }
                  },
                  "example": {
                    "statusCode": 400,
                    "name": "BadRequestError"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable profile resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array"
                    }
                  },
                  "example": {
                    "statusCode": 422,
                    "name": "UnprocessableEntityError",
                    "message": "The request body is invalid. See error object `details` property for more info.",
                    "code": "VALIDATION_FAILED"
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "ProfileHTTPProfile resource that need to be created",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [],
                "properties": {
                  "id": false,
                  "name": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 50
                  },
                  "description": {
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 200
                  },
                  "tenantId": false,
                  "createdAt": false,
                  "updatedAt": false,
                  "allowedResponseHeaders": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "maxLength": 64
                    }
                  },
                  "badRequestMessage": {
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 4096
                  },
                  "badResponseMessage": {
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 4096
                  },
                  "connectErrorMessage": {
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 4096
                  },
                  "defaultConnectAction": {
                    "type": "string",
                    "enum": [
                      "deny",
                      "allow"
                    ]
                  },
                  "dnsErrorMessage": {
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 4096
                  },
                  "doNotProxyHosts": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "maxLength": 256
                    }
                  },
                  "encryptCookies": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "maxLength": 4096
                    }
                  },
                  "fallbackRedirect": {
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 4096
                  },
                  "fallbackStatusCodes": {
                    "type": "array",
                    "items": {
                      "type": "number",
                      "minimum": 100,
                      "maximum": 999
                    }
                  },
                  "hstsIncludeSubdomains": {
                    "type": "boolean"
                  },
                  "hstsInsert": {
                    "type": "boolean"
                  },
                  "hstsPeriod": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 31557600
                  },
                  "hstsPreload": {
                    "type": "boolean"
                  },
                  "ipv6": {
                    "type": "boolean"
                  },
                  "knownMethods": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "maxLength": 32
                    }
                  },
                  "maxHeaderCount": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 1024
                  },
                  "maxHeaderSize": {
                    "type": "integer",
                    "minimum": 9,
                    "maximum": 262144
                  },
                  "maxRequests": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 2147483647
                  },
                  "multiplexTransformations": {
                    "type": "boolean"
                  },
                  "otherXFF": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "pipelineAction": {
                    "type": "string",
                    "enum": [
                      "allow",
                      "pass-through",
                      "reject"
                    ]
                  },
                  "proxyType": {
                    "type": "string",
                    "enum": [
                      "reverse",
                      "transparent",
                      "explicit"
                    ]
                  },
                  "remark": {
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 4096
                  },
                  "requestChunking": {
                    "type": "string",
                    "enum": [
                      "preserve",
                      "selective",
                      "rechunk"
                    ]
                  },
                  "responseChunking": {
                    "type": "string",
                    "enum": [
                      "selective",
                      "preserve",
                      "unchunk",
                      "rechunk"
                    ]
                  },
                  "rewriteRedirects": {
                    "type": "string",
                    "enum": [
                      "none",
                      "all",
                      "matching",
                      "addresses"
                    ]
                  },
                  "routeDomain": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 65535
                  },
                  "serverHeaderValue": {
                    "type": "string",
                    "enum": [
                      "BigIP"
                    ]
                  },
                  "truncatedRedirects": {
                    "type": "boolean"
                  },
                  "trustXFF": {
                    "type": "boolean"
                  },
                  "tunnelName": {
                    "type": "string",
                    "enum": [
                      "http-tunnel"
                    ]
                  },
                  "unknownMethodAction": {
                    "type": "string",
                    "enum": [
                      "allow",
                      "pass-through",
                      "reject"
                    ]
                  },
                  "viaHost": {
                    "type": "string"
                  },
                  "viaRequest": {
                    "type": "string",
                    "enum": [
                      "remove",
                      "append",
                      "preserve"
                    ]
                  },
                  "viaResponse": {
                    "type": "string",
                    "enum": [
                      "remove",
                      "append",
                      "preserve"
                    ]
                  },
                  "webSocketMasking": {
                    "type": "string",
                    "enum": [
                      "unmask",
                      "preserve",
                      "remask",
                      "selective"
                    ]
                  },
                  "webSocketsEnabled": {
                    "type": "boolean"
                  },
                  "whiteOutHeader": {
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 4096
                  },
                  "xForwardedFor": {
                    "type": "boolean"
                  }
                },
                "example": {
                  "name": "My name",
                  "description": "My description",
                  "allowedResponseHeaders": [
                    "content-type",
                    "cookie"
                  ],
                  "badRequestMessage": "<html><head><title>Bad Request</title></head><body><h2>Invalid proxy request</h2></body></html>",
                  "badResponseMessage": "<html><head><title>Bad Response</title></head><body><h2>Proxy request provoked invalid response</h2></body></html>",
                  "connectErrorMessage": "<html><head><title>Connection Error</title></head><body><h2>Unable to connect to host in proxy request</h2></body></html>",
                  "defaultConnectAction": "allow",
                  "dnsErrorMessage": "<html><head><title>DNS Resolution Error</title></head><body><h2>Cannot resolve hostname in proxy request</h2></body></html>",
                  "doNotProxyHosts": [
                    "hosta",
                    "hostb"
                  ],
                  "encryptCookies": [
                    "content-type",
                    "cookie"
                  ],
                  "fallbackRedirect": "http://example.com",
                  "fallbackStatusCodes": [
                    400,
                    401
                  ],
                  "hstsIncludeSubdomains": true,
                  "hstsInsert": true,
                  "hstsPeriod": 7862400,
                  "hstsPreload": true,
                  "ipv6": true,
                  "knownMethods": [],
                  "maxHeaderCount": 64,
                  "maxHeaderSize": 32768,
                  "maxRequests": 0,
                  "multiplexTransformations": true,
                  "otherXFF": [],
                  "pipelineAction": "allow",
                  "proxyType": "reverse",
                  "remark": "",
                  "requestChunking": "preserve",
                  "responseChunking": "selective",
                  "rewriteRedirects": "none",
                  "routeDomain": 0,
                  "serverHeaderValue": "BigIP",
                  "truncatedRedirects": true,
                  "trustXFF": true,
                  "tunnelName": "http-tunnel",
                  "unknownMethodAction": "allow",
                  "viaHost": "",
                  "viaRequest": "remove",
                  "viaResponse": "remove",
                  "webSocketMasking": "unmask",
                  "webSocketsEnabled": true,
                  "whiteOutHeader": "",
                  "xForwardedFor": true
                }
              }
            }
          }
        },
        "operationId": "ProfileHttpProfileController.create"
      },
      "get": {
        "x-controller-name": "ProfileHttpProfileController",
        "x-operation-name": "find",
        "tags": [
          "ProfileHttpProfileController"
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieve ProfileHTTPProfile resources",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "profilehttpprofiles": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "tenantId": {
                            "type": "string"
                          },
                          "createdAt": {
                            "type": "date"
                          },
                          "updatedAt": {
                            "type": "date"
                          },
                          "allowedResponseHeaders": {
                            "type": "array"
                          },
                          "badRequestMessage": {
                            "type": "string"
                          },
                          "badResponseMessage": {
                            "type": "string"
                          },
                          "connectErrorMessage": {
                            "type": "string"
                          },
                          "defaultConnectAction": {
                            "type": "string"
                          },
                          "dnsErrorMessage": {
                            "type": "string"
                          },
                          "doNotProxyHosts": {
                            "type": "array"
                          },
                          "encryptCookies": {
                            "type": "array"
                          },
                          "fallbackRedirect": {
                            "type": "string"
                          },
                          "fallbackStatusCodes": {
                            "type": "array"
                          },
                          "hstsIncludeSubdomains": {
                            "type": "boolean"
                          },
                          "hstsInsert": {
                            "type": "boolean"
                          },
                          "hstsPeriod": {
                            "type": "number"
                          },
                          "hstsPreload": {
                            "type": "boolean"
                          },
                          "ipv6": {
                            "type": "boolean"
                          },
                          "knownMethods": {
                            "type": "array"
                          },
                          "maxHeaderCount": {
                            "type": "number"
                          },
                          "maxHeaderSize": {
                            "type": "number"
                          },
                          "maxRequests": {
                            "type": "number"
                          },
                          "multiplexTransformations": {
                            "type": "boolean"
                          },
                          "otherXFF": {
                            "type": "array"
                          },
                          "pipelineAction": {
                            "type": "string"
                          },
                          "proxyType": {
                            "type": "string"
                          },
                          "remark": {
                            "type": "string"
                          },
                          "requestChunking": {
                            "type": "string"
                          },
                          "responseChunking": {
                            "type": "string"
                          },
                          "rewriteRedirects": {
                            "type": "string"
                          },
                          "routeDomain": {
                            "type": "number"
                          },
                          "serverHeaderValue": {
                            "type": "string"
                          },
                          "truncatedRedirects": {
                            "type": "boolean"
                          },
                          "trustXFF": {
                            "type": "boolean"
                          },
                          "tunnelName": {
                            "type": "string"
                          },
                          "unknownMethodAction": {
                            "type": "string"
                          },
                          "viaHost": {
                            "type": "string"
                          },
                          "viaRequest": {
                            "type": "string"
                          },
                          "viaResponse": {
                            "type": "string"
                          },
                          "webSocketMasking": {
                            "type": "string"
                          },
                          "webSocketsEnabled": {
                            "type": "boolean"
                          },
                          "whiteOutHeader": {
                            "type": "string"
                          },
                          "xForwardedFor": {
                            "type": "boolean"
                          }
                        },
                        "example": {
                          "id": "11111111-2222-3333-4444-555555555555",
                          "name": "My name",
                          "description": "My description",
                          "createdAt": "2019-03-05T08:40:25.000Z",
                          "updatedAt": "2019-03-05T08:40:25.100Z",
                          "allowedResponseHeaders": [
                            "content-type",
                            "cookie"
                          ],
                          "badRequestMessage": "<html><head><title>Bad Request</title></head><body><h2>Invalid proxy request</h2></body></html>",
                          "badResponseMessage": "<html><head><title>Bad Response</title></head><body><h2>Proxy request provoked invalid response</h2></body></html>",
                          "connectErrorMessage": "<html><head><title>Connection Error</title></head><body><h2>Unable to connect to host in proxy request</h2></body></html>",
                          "defaultConnectAction": "allow",
                          "dnsErrorMessage": "<html><head><title>DNS Resolution Error</title></head><body><h2>Cannot resolve hostname in proxy request</h2></body></html>",
                          "doNotProxyHosts": [
                            "hosta",
                            "hostb"
                          ],
                          "encryptCookies": [
                            "content-type",
                            "cookie"
                          ],
                          "fallbackRedirect": "http://example.com",
                          "fallbackStatusCodes": [
                            400,
                            401
                          ],
                          "hstsIncludeSubdomains": true,
                          "hstsInsert": true,
                          "hstsPeriod": 7862400,
                          "hstsPreload": true,
                          "ipv6": true,
                          "knownMethods": [],
                          "maxHeaderCount": 64,
                          "maxHeaderSize": 32768,
                          "maxRequests": 0,
                          "multiplexTransformations": true,
                          "otherXFF": [],
                          "pipelineAction": "allow",
                          "proxyType": "reverse",
                          "remark": "",
                          "requestChunking": "preserve",
                          "responseChunking": "selective",
                          "rewriteRedirects": "none",
                          "routeDomain": 0,
                          "serverHeaderValue": "BigIP",
                          "truncatedRedirects": true,
                          "trustXFF": true,
                          "tunnelName": "http-tunnel",
                          "unknownMethodAction": "allow",
                          "viaHost": "",
                          "viaRequest": "remove",
                          "viaResponse": "remove",
                          "webSocketMasking": "unmask",
                          "webSocketsEnabled": true,
                          "whiteOutHeader": "",
                          "xForwardedFor": true
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "style": "deepObject",
            "explode": true,
            "schema": {
              "type": "object",
              "properties": {
                "where": {
                  "type": "object",
                  "additionalProperties": true
                },
                "fields": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "boolean"
                    },
                    "name": {
                      "type": "boolean"
                    },
                    "description": {
                      "type": "boolean"
                    },
                    "tenantId": {
                      "type": "boolean"
                    },
                    "createdAt": {
                      "type": "boolean"
                    },
                    "updatedAt": {
                      "type": "boolean"
                    },
                    "allowedResponseHeaders": {
                      "type": "boolean"
                    },
                    "badRequestMessage": {
                      "type": "boolean"
                    },
                    "badResponseMessage": {
                      "type": "boolean"
                    },
                    "connectErrorMessage": {
                      "type": "boolean"
                    },
                    "defaultConnectAction": {
                      "type": "boolean"
                    },
                    "dnsErrorMessage": {
                      "type": "boolean"
                    },
                    "doNotProxyHosts": {
                      "type": "boolean"
                    },
                    "encryptCookies": {
                      "type": "boolean"
                    },
                    "fallbackRedirect": {
                      "type": "boolean"
                    },
                    "fallbackStatusCodes": {
                      "type": "boolean"
                    },
                    "hstsIncludeSubdomains": {
                      "type": "boolean"
                    },
                    "hstsInsert": {
                      "type": "boolean"
                    },
                    "hstsPeriod": {
                      "type": "boolean"
                    },
                    "hstsPreload": {
                      "type": "boolean"
                    },
                    "ipv6": {
                      "type": "boolean"
                    },
                    "knownMethods": {
                      "type": "boolean"
                    },
                    "maxHeaderCount": {
                      "type": "boolean"
                    },
                    "maxHeaderSize": {
                      "type": "boolean"
                    },
                    "maxRequests": {
                      "type": "boolean"
                    },
                    "multiplexTransformations": {
                      "type": "boolean"
                    },
                    "otherXFF": {
                      "type": "boolean"
                    },
                    "pipelineAction": {
                      "type": "boolean"
                    },
                    "proxyType": {
                      "type": "boolean"
                    },
                    "remark": {
                      "type": "boolean"
                    },
                    "requestChunking": {
                      "type": "boolean"
                    },
                    "responseChunking": {
                      "type": "boolean"
                    },
                    "rewriteRedirects": {
                      "type": "boolean"
                    },
                    "routeDomain": {
                      "type": "boolean"
                    },
                    "serverHeaderValue": {
                      "type": "boolean"
                    },
                    "truncatedRedirects": {
                      "type": "boolean"
                    },
                    "trustXFF": {
                      "type": "boolean"
                    },
                    "tunnelName": {
                      "type": "boolean"
                    },
                    "unknownMethodAction": {
                      "type": "boolean"
                    },
                    "viaHost": {
                      "type": "boolean"
                    },
                    "viaRequest": {
                      "type": "boolean"
                    },
                    "viaResponse": {
                      "type": "boolean"
                    },
                    "webSocketMasking": {
                      "type": "boolean"
                    },
                    "webSocketsEnabled": {
                      "type": "boolean"
                    },
                    "whiteOutHeader": {
                      "type": "boolean"
                    },
                    "xForwardedFor": {
                      "type": "boolean"
                    }
                  },
                  "additionalProperties": false
                },
                "offset": {
                  "type": "integer",
                  "minimum": 0
                },
                "limit": {
                  "type": "integer",
                  "minimum": 1,
                  "example": 100
                },
                "skip": {
                  "type": "integer",
                  "minimum": 0
                },
                "order": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "additionalProperties": false
            }
          }
        ],
        "operationId": "ProfileHttpProfileController.find"
      }
    },
    "/adcaas/v1/rules/count": {
      "get": {
        "x-controller-name": "RuleController",
        "x-operation-name": "count",
        "tags": [
          "RuleController"
        ],
        "responses": {
          "200": {
            "description": "Rule model count",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "number"
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "style": "deepObject",
            "explode": true,
            "schema": {
              "type": "object",
              "additionalProperties": true
            }
          }
        ],
        "operationId": "RuleController.count"
      }
    },
    "/adcaas/v1/rules/{ruleId}/actions/{actionId}": {
      "patch": {
        "x-controller-name": "RuleController",
        "x-operation-name": "updateActionByID",
        "tags": [
          "RuleController"
        ],
        "responses": {
          "200": {
            "description": "Action model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Action"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "ruleId",
            "description": "Rule resource ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": ""
            }
          },
          {
            "name": "actionId",
            "description": "Action resource ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": ""
            }
          }
        ],
        "requestBody": {
          "description": "Action resource properties that need to be updated",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [],
                "properties": {
                  "id": false,
                  "name": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 50
                  },
                  "description": {
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 200
                  },
                  "tenantId": false,
                  "createdAt": false,
                  "updatedAt": false,
                  "event": {
                    "type": "string",
                    "enum": [
                      "client-accepted",
                      "proxy-request",
                      "request",
                      "response",
                      "server-connected"
                    ]
                  },
                  "insert": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "name": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 100
                      },
                      "value": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 100
                      }
                    }
                  },
                  "location": {
                    "type": "string"
                  },
                  "policy": {
                    "type": "string"
                  },
                  "remove": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "name": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 100
                      }
                    }
                  },
                  "replace": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "name": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 100
                      },
                      "value": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 100
                      }
                    }
                  },
                  "select": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "pool": {
                        "type": "string",
                        "format": "uuid"
                      },
                      "service": {
                        "type": "string",
                        "format": "uuid"
                      }
                    }
                  }
                },
                "example": {
                  "name": "My name",
                  "description": "My description",
                  "event": "request",
                  "insert": {
                    "name": "abc",
                    "value": "xyz"
                  },
                  "location": "http://1.2.3.4/index.html",
                  "policy": "2d3h896a-2312-40ee-8d08-55550dbc191",
                  "remove": {
                    "name": "abc"
                  },
                  "replace": {
                    "name": "abc",
                    "value": "xyz"
                  },
                  "select": {
                    "pool": "2d3h896a-2312-40ee-8d08-55550dbc191"
                  }
                }
              }
            }
          },
          "x-parameter-index": 2
        },
        "operationId": "RuleController.updateActionByID"
      },
      "get": {
        "x-controller-name": "RuleController",
        "x-operation-name": "getActionByID",
        "tags": [
          "RuleController"
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieve action resources",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "actions": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "tenantId": {
                            "type": "string"
                          },
                          "createdAt": {
                            "type": "date"
                          },
                          "updatedAt": {
                            "type": "date"
                          },
                          "event": {
                            "type": "string"
                          },
                          "insert": {
                            "type": "object"
                          },
                          "location": {
                            "type": "string"
                          },
                          "policy": {
                            "type": "string"
                          },
                          "remove": {
                            "type": "object"
                          },
                          "replace": {
                            "type": "object"
                          },
                          "select": {
                            "type": "object"
                          },
                          "type": {
                            "type": "string"
                          },
                          "ruleId": {
                            "type": "string"
                          }
                        },
                        "example": {
                          "id": "11111111-2222-3333-4444-555555555555",
                          "name": "My name",
                          "description": "My description",
                          "createdAt": "2019-03-05T08:40:25.000Z",
                          "updatedAt": "2019-03-05T08:40:25.100Z",
                          "event": "request",
                          "insert": {
                            "name": "abc",
                            "value": "xyz"
                          },
                          "location": "http://1.2.3.4/index.html",
                          "policy": "2d3h896a-2312-40ee-8d08-55550dbc191",
                          "remove": {
                            "name": "abc"
                          },
                          "replace": {
                            "name": "abc",
                            "value": "xyz"
                          },
                          "select": {
                            "pool": "2d3h896a-2312-40ee-8d08-55550dbc191"
                          },
                          "type": "httpUri",
                          "ruleId": "2d3h896a-2312-40ee-8d08-55550dbc191"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "ruleId",
            "description": "Rule resource ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": ""
            }
          },
          {
            "name": "actionId",
            "description": "Action resource ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": ""
            }
          }
        ],
        "operationId": "RuleController.getActionByID"
      },
      "delete": {
        "x-controller-name": "RuleController",
        "x-operation-name": "deleteActionByID",
        "tags": [
          "RuleController"
        ],
        "responses": {
          "204": {
            "description": "Action DELETE success"
          }
        },
        "parameters": [
          {
            "name": "ruleId",
            "description": "Rule resource ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": ""
            }
          },
          {
            "name": "actionId",
            "description": "Action resource ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": ""
            }
          }
        ],
        "operationId": "RuleController.deleteActionByID"
      }
    },
    "/adcaas/v1/rules/{ruleId}/actions": {
      "post": {
        "x-controller-name": "RuleController",
        "x-operation-name": "createRuleAction",
        "tags": [
          "RuleController"
        ],
        "responses": {
          "200": {
            "description": "Successfully create Action resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "action": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "tenantId": {
                          "type": "string"
                        },
                        "createdAt": {
                          "type": "date"
                        },
                        "updatedAt": {
                          "type": "date"
                        },
                        "event": {
                          "type": "string"
                        },
                        "insert": {
                          "type": "object"
                        },
                        "location": {
                          "type": "string"
                        },
                        "policy": {
                          "type": "string"
                        },
                        "remove": {
                          "type": "object"
                        },
                        "replace": {
                          "type": "object"
                        },
                        "select": {
                          "type": "object"
                        },
                        "type": {
                          "type": "string"
                        },
                        "ruleId": {
                          "type": "string"
                        }
                      },
                      "example": {
                        "id": "11111111-2222-3333-4444-555555555555",
                        "name": "My name",
                        "description": "My description",
                        "createdAt": "2019-03-05T08:40:25.000Z",
                        "updatedAt": "2019-03-05T08:40:25.100Z",
                        "event": "request",
                        "insert": {
                          "name": "abc",
                          "value": "xyz"
                        },
                        "location": "http://1.2.3.4/index.html",
                        "policy": "2d3h896a-2312-40ee-8d08-55550dbc191",
                        "remove": {
                          "name": "abc"
                        },
                        "replace": {
                          "name": "abc",
                          "value": "xyz"
                        },
                        "select": {
                          "pool": "2d3h896a-2312-40ee-8d08-55550dbc191"
                        },
                        "type": "httpUri",
                        "ruleId": "2d3h896a-2312-40ee-8d08-55550dbc191"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid Action resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array"
                    }
                  },
                  "example": {
                    "statusCode": 400,
                    "name": "BadRequestError"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Action resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array"
                    }
                  },
                  "example": {
                    "statusCode": 422,
                    "name": "UnprocessableEntityError",
                    "message": "The request body is invalid. See error object `details` property for more info.",
                    "code": "VALIDATION_FAILED"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "ruleId",
            "description": "Rule resource ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": ""
            }
          }
        ],
        "requestBody": {
          "description": "Action resource that need to be created",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "type"
                ],
                "properties": {
                  "id": false,
                  "name": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 50
                  },
                  "description": {
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 200
                  },
                  "tenantId": false,
                  "createdAt": false,
                  "updatedAt": false,
                  "event": {
                    "type": "string",
                    "enum": [
                      "client-accepted",
                      "proxy-request",
                      "request",
                      "response",
                      "server-connected"
                    ]
                  },
                  "insert": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "name": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 100
                      },
                      "value": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 100
                      }
                    }
                  },
                  "location": {
                    "type": "string"
                  },
                  "policy": {
                    "type": "string"
                  },
                  "remove": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "name": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 100
                      }
                    }
                  },
                  "replace": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "name": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 100
                      },
                      "value": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 100
                      }
                    }
                  },
                  "select": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "pool": {
                        "type": "string",
                        "format": "uuid"
                      },
                      "service": {
                        "type": "string",
                        "format": "uuid"
                      }
                    }
                  },
                  "type": {
                    "type": "string"
                  }
                },
                "example": {
                  "name": "My name",
                  "description": "My description",
                  "event": "request",
                  "insert": {
                    "name": "abc",
                    "value": "xyz"
                  },
                  "location": "http://1.2.3.4/index.html",
                  "policy": "2d3h896a-2312-40ee-8d08-55550dbc191",
                  "remove": {
                    "name": "abc"
                  },
                  "replace": {
                    "name": "abc",
                    "value": "xyz"
                  },
                  "select": {
                    "pool": "2d3h896a-2312-40ee-8d08-55550dbc191"
                  },
                  "type": "httpUri"
                }
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "RuleController.createRuleAction"
      },
      "get": {
        "x-controller-name": "RuleController",
        "x-operation-name": "getActions",
        "tags": [
          "RuleController"
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieve action resources by pool id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "actions": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "tenantId": {
                            "type": "string"
                          },
                          "createdAt": {
                            "type": "date"
                          },
                          "updatedAt": {
                            "type": "date"
                          },
                          "event": {
                            "type": "string"
                          },
                          "insert": {
                            "type": "object"
                          },
                          "location": {
                            "type": "string"
                          },
                          "policy": {
                            "type": "string"
                          },
                          "remove": {
                            "type": "object"
                          },
                          "replace": {
                            "type": "object"
                          },
                          "select": {
                            "type": "object"
                          },
                          "type": {
                            "type": "string"
                          },
                          "ruleId": {
                            "type": "string"
                          }
                        },
                        "example": {
                          "id": "11111111-2222-3333-4444-555555555555",
                          "name": "My name",
                          "description": "My description",
                          "createdAt": "2019-03-05T08:40:25.000Z",
                          "updatedAt": "2019-03-05T08:40:25.100Z",
                          "event": "request",
                          "insert": {
                            "name": "abc",
                            "value": "xyz"
                          },
                          "location": "http://1.2.3.4/index.html",
                          "policy": "2d3h896a-2312-40ee-8d08-55550dbc191",
                          "remove": {
                            "name": "abc"
                          },
                          "replace": {
                            "name": "abc",
                            "value": "xyz"
                          },
                          "select": {
                            "pool": "2d3h896a-2312-40ee-8d08-55550dbc191"
                          },
                          "type": "httpUri",
                          "ruleId": "2d3h896a-2312-40ee-8d08-55550dbc191"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "ruleId",
            "description": "Rule resource ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": ""
            }
          }
        ],
        "operationId": "RuleController.getActions"
      }
    },
    "/adcaas/v1/rules/{ruleId}/conditions/{conditionId}": {
      "patch": {
        "x-controller-name": "RuleController",
        "x-operation-name": "updateConditionByID",
        "tags": [
          "RuleController"
        ],
        "responses": {
          "200": {
            "description": "Condition model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Condition"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "ruleId",
            "description": "Rule resource ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": ""
            }
          },
          {
            "name": "conditionId",
            "description": "Condition resource ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": ""
            }
          }
        ],
        "requestBody": {
          "description": "Condition resource properties that need to be updated",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [],
                "properties": {
                  "id": false,
                  "name": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 50
                  },
                  "description": {
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 200
                  },
                  "tenantId": false,
                  "createdAt": false,
                  "updatedAt": false,
                  "all": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "caseSensitive": {
                        "type": "boolean"
                      },
                      "operand": {
                        "enum": [
                          "equals",
                          "starts-with",
                          "ends-with",
                          "contains"
                        ]
                      },
                      "values": {
                        "type": "array",
                        "minItems": 1,
                        "maxItems": 100,
                        "items": {
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 200
                        }
                      }
                    }
                  },
                  "alpn": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "caseSensitive": {
                        "type": "boolean"
                      },
                      "operand": {
                        "enum": [
                          "equals",
                          "starts-with",
                          "ends-with",
                          "contains"
                        ]
                      },
                      "values": {
                        "type": "array",
                        "minItems": 1,
                        "maxItems": 100,
                        "items": {
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 200
                        }
                      }
                    }
                  },
                  "event": {
                    "type": "string",
                    "enum": [
                      "request"
                    ]
                  },
                  "extension": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "caseSensitive": {
                        "type": "boolean"
                      },
                      "operand": {
                        "enum": [
                          "equals",
                          "starts-with",
                          "ends-with",
                          "contains"
                        ]
                      },
                      "values": {
                        "type": "array",
                        "minItems": 1,
                        "maxItems": 100,
                        "items": {
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 200
                        }
                      }
                    }
                  },
                  "host": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "caseSensitive": {
                        "type": "boolean"
                      },
                      "operand": {
                        "enum": [
                          "equals",
                          "starts-with",
                          "ends-with",
                          "contains"
                        ]
                      },
                      "values": {
                        "type": "array",
                        "minItems": 1,
                        "maxItems": 100,
                        "items": {
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 200
                        }
                      }
                    }
                  },
                  "index": {
                    "type": "integer",
                    "minimum": 1
                  },
                  "normalized": {
                    "type": "boolean"
                  },
                  "npn": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "caseSensitive": {
                        "type": "boolean"
                      },
                      "operand": {
                        "enum": [
                          "equals",
                          "starts-with",
                          "ends-with",
                          "contains"
                        ]
                      },
                      "values": {
                        "type": "array",
                        "minItems": 1,
                        "maxItems": 100,
                        "items": {
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 200
                        }
                      }
                    }
                  },
                  "path": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "caseSensitive": {
                        "type": "boolean"
                      },
                      "operand": {
                        "enum": [
                          "equals",
                          "starts-with",
                          "ends-with",
                          "contains"
                        ]
                      },
                      "values": {
                        "type": "array",
                        "minItems": 1,
                        "maxItems": 100,
                        "items": {
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 200
                        }
                      }
                    }
                  },
                  "pathSegment": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "caseSensitive": {
                        "type": "boolean"
                      },
                      "operand": {
                        "enum": [
                          "equals",
                          "starts-with",
                          "ends-with",
                          "contains"
                        ]
                      },
                      "values": {
                        "type": "array",
                        "minItems": 1,
                        "maxItems": 100,
                        "items": {
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 200
                        }
                      }
                    }
                  },
                  "port": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "operand": {
                        "enum": [
                          "equals",
                          "less",
                          "greater",
                          "less-or-equal",
                          "greater-or-equal"
                        ]
                      },
                      "values": {
                        "type": "array",
                        "minItems": 1,
                        "maxItems": 100,
                        "items": {
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "queryParameter": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "caseSensitive": {
                        "type": "boolean"
                      },
                      "operand": {
                        "enum": [
                          "equals",
                          "starts-with",
                          "ends-with",
                          "contains"
                        ]
                      },
                      "values": {
                        "type": "array",
                        "minItems": 1,
                        "maxItems": 100,
                        "items": {
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 200
                        }
                      }
                    }
                  },
                  "queryString": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "caseSensitive": {
                        "type": "boolean"
                      },
                      "operand": {
                        "enum": [
                          "equals",
                          "starts-with",
                          "ends-with",
                          "contains"
                        ]
                      },
                      "values": {
                        "type": "array",
                        "minItems": 1,
                        "maxItems": 100,
                        "items": {
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 200
                        }
                      }
                    }
                  },
                  "scheme": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "caseSensitive": {
                        "type": "boolean"
                      },
                      "operand": {
                        "enum": [
                          "equals",
                          "starts-with",
                          "ends-with",
                          "contains"
                        ]
                      },
                      "values": {
                        "type": "array",
                        "minItems": 1,
                        "maxItems": 100,
                        "items": {
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 200
                        }
                      }
                    }
                  },
                  "serverName": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "caseSensitive": {
                        "type": "boolean"
                      },
                      "operand": {
                        "enum": [
                          "equals",
                          "starts-with",
                          "ends-with",
                          "contains"
                        ]
                      },
                      "values": {
                        "type": "array",
                        "minItems": 1,
                        "maxItems": 100,
                        "items": {
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 200
                        }
                      }
                    }
                  },
                  "unnamedQueryParameter": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "caseSensitive": {
                        "type": "boolean"
                      },
                      "operand": {
                        "enum": [
                          "equals",
                          "starts-with",
                          "ends-with",
                          "contains"
                        ]
                      },
                      "values": {
                        "type": "array",
                        "minItems": 1,
                        "maxItems": 100,
                        "items": {
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 200
                        }
                      }
                    }
                  }
                },
                "example": {
                  "name": "My name",
                  "description": "My description",
                  "all": {},
                  "alpn": {},
                  "event": "request",
                  "extension": {},
                  "host": {},
                  "index": 1,
                  "normalized": false,
                  "npn": {},
                  "path": {},
                  "pathSegment": {},
                  "port": {},
                  "queryParameter": {},
                  "queryString": {},
                  "scheme": {},
                  "serverName": {},
                  "unnamedQueryParameter": {}
                }
              }
            }
          },
          "x-parameter-index": 2
        },
        "operationId": "RuleController.updateConditionByID"
      },
      "get": {
        "x-controller-name": "RuleController",
        "x-operation-name": "getConditionByID",
        "tags": [
          "RuleController"
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieve condition resources",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "conditions": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "tenantId": {
                            "type": "string"
                          },
                          "createdAt": {
                            "type": "date"
                          },
                          "updatedAt": {
                            "type": "date"
                          },
                          "all": {
                            "type": "object"
                          },
                          "alpn": {
                            "type": "object"
                          },
                          "event": {
                            "type": "string"
                          },
                          "extension": {
                            "type": "object"
                          },
                          "host": {
                            "type": "object"
                          },
                          "index": {
                            "type": "number"
                          },
                          "normalized": {
                            "type": "boolean"
                          },
                          "npn": {
                            "type": "object"
                          },
                          "path": {
                            "type": "object"
                          },
                          "pathSegment": {
                            "type": "object"
                          },
                          "port": {
                            "type": "object"
                          },
                          "queryParameter": {
                            "type": "object"
                          },
                          "queryString": {
                            "type": "object"
                          },
                          "scheme": {
                            "type": "object"
                          },
                          "serverName": {
                            "type": "object"
                          },
                          "type": {
                            "type": "string"
                          },
                          "unnamedQueryParameter": {
                            "type": "object"
                          },
                          "ruleId": {
                            "type": "string"
                          }
                        },
                        "example": {
                          "id": "11111111-2222-3333-4444-555555555555",
                          "name": "My name",
                          "description": "My description",
                          "createdAt": "2019-03-05T08:40:25.000Z",
                          "updatedAt": "2019-03-05T08:40:25.100Z",
                          "all": {},
                          "alpn": {},
                          "event": "request",
                          "extension": {},
                          "host": {},
                          "index": 1,
                          "normalized": false,
                          "npn": {},
                          "path": {},
                          "pathSegment": {},
                          "port": {},
                          "queryParameter": {},
                          "queryString": {},
                          "scheme": {},
                          "serverName": {},
                          "type": "httpUri",
                          "unnamedQueryParameter": {},
                          "ruleId": "2d3h896a-4d82-4234-8d08-55550dbc191"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "ruleId",
            "description": "Rule resource ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": ""
            }
          },
          {
            "name": "conditionId",
            "description": "Condition resource ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": ""
            }
          }
        ],
        "operationId": "RuleController.getConditionByID"
      },
      "delete": {
        "x-controller-name": "RuleController",
        "x-operation-name": "deleteConditionByID",
        "tags": [
          "RuleController"
        ],
        "responses": {
          "204": {
            "description": "condition DELETE success"
          }
        },
        "parameters": [
          {
            "name": "ruleId",
            "description": "Rule resource ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": ""
            }
          },
          {
            "name": "conditionId",
            "description": "Condition resource ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": ""
            }
          }
        ],
        "operationId": "RuleController.deleteConditionByID"
      }
    },
    "/adcaas/v1/rules/{ruleId}/conditions": {
      "post": {
        "x-controller-name": "RuleController",
        "x-operation-name": "createRuleCondition",
        "tags": [
          "RuleController"
        ],
        "responses": {
          "200": {
            "description": "Successfully create Condition resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "condition": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "tenantId": {
                          "type": "string"
                        },
                        "createdAt": {
                          "type": "date"
                        },
                        "updatedAt": {
                          "type": "date"
                        },
                        "all": {
                          "type": "object"
                        },
                        "alpn": {
                          "type": "object"
                        },
                        "event": {
                          "type": "string"
                        },
                        "extension": {
                          "type": "object"
                        },
                        "host": {
                          "type": "object"
                        },
                        "index": {
                          "type": "number"
                        },
                        "normalized": {
                          "type": "boolean"
                        },
                        "npn": {
                          "type": "object"
                        },
                        "path": {
                          "type": "object"
                        },
                        "pathSegment": {
                          "type": "object"
                        },
                        "port": {
                          "type": "object"
                        },
                        "queryParameter": {
                          "type": "object"
                        },
                        "queryString": {
                          "type": "object"
                        },
                        "scheme": {
                          "type": "object"
                        },
                        "serverName": {
                          "type": "object"
                        },
                        "type": {
                          "type": "string"
                        },
                        "unnamedQueryParameter": {
                          "type": "object"
                        },
                        "ruleId": {
                          "type": "string"
                        }
                      },
                      "example": {
                        "id": "11111111-2222-3333-4444-555555555555",
                        "name": "My name",
                        "description": "My description",
                        "createdAt": "2019-03-05T08:40:25.000Z",
                        "updatedAt": "2019-03-05T08:40:25.100Z",
                        "all": {},
                        "alpn": {},
                        "event": "request",
                        "extension": {},
                        "host": {},
                        "index": 1,
                        "normalized": false,
                        "npn": {},
                        "path": {},
                        "pathSegment": {},
                        "port": {},
                        "queryParameter": {},
                        "queryString": {},
                        "scheme": {},
                        "serverName": {},
                        "type": "httpUri",
                        "unnamedQueryParameter": {},
                        "ruleId": "2d3h896a-4d82-4234-8d08-55550dbc191"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid Condition resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array"
                    }
                  },
                  "example": {
                    "statusCode": 400,
                    "name": "BadRequestError"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Condition resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array"
                    }
                  },
                  "example": {
                    "statusCode": 422,
                    "name": "UnprocessableEntityError",
                    "message": "The request body is invalid. See error object `details` property for more info.",
                    "code": "VALIDATION_FAILED"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "ruleId",
            "description": "Rule resource ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": ""
            }
          }
        ],
        "requestBody": {
          "description": "Condition resource that need to be created",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [],
                "properties": {
                  "id": false,
                  "name": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 50
                  },
                  "description": {
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 200
                  },
                  "tenantId": false,
                  "createdAt": false,
                  "updatedAt": false,
                  "all": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "caseSensitive": {
                        "type": "boolean"
                      },
                      "operand": {
                        "enum": [
                          "equals",
                          "starts-with",
                          "ends-with",
                          "contains"
                        ]
                      },
                      "values": {
                        "type": "array",
                        "minItems": 1,
                        "maxItems": 100,
                        "items": {
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 200
                        }
                      }
                    }
                  },
                  "alpn": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "caseSensitive": {
                        "type": "boolean"
                      },
                      "operand": {
                        "enum": [
                          "equals",
                          "starts-with",
                          "ends-with",
                          "contains"
                        ]
                      },
                      "values": {
                        "type": "array",
                        "minItems": 1,
                        "maxItems": 100,
                        "items": {
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 200
                        }
                      }
                    }
                  },
                  "event": {
                    "type": "string",
                    "enum": [
                      "request"
                    ]
                  },
                  "extension": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "caseSensitive": {
                        "type": "boolean"
                      },
                      "operand": {
                        "enum": [
                          "equals",
                          "starts-with",
                          "ends-with",
                          "contains"
                        ]
                      },
                      "values": {
                        "type": "array",
                        "minItems": 1,
                        "maxItems": 100,
                        "items": {
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 200
                        }
                      }
                    }
                  },
                  "host": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "caseSensitive": {
                        "type": "boolean"
                      },
                      "operand": {
                        "enum": [
                          "equals",
                          "starts-with",
                          "ends-with",
                          "contains"
                        ]
                      },
                      "values": {
                        "type": "array",
                        "minItems": 1,
                        "maxItems": 100,
                        "items": {
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 200
                        }
                      }
                    }
                  },
                  "index": {
                    "type": "integer",
                    "minimum": 1
                  },
                  "normalized": {
                    "type": "boolean"
                  },
                  "npn": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "caseSensitive": {
                        "type": "boolean"
                      },
                      "operand": {
                        "enum": [
                          "equals",
                          "starts-with",
                          "ends-with",
                          "contains"
                        ]
                      },
                      "values": {
                        "type": "array",
                        "minItems": 1,
                        "maxItems": 100,
                        "items": {
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 200
                        }
                      }
                    }
                  },
                  "path": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "caseSensitive": {
                        "type": "boolean"
                      },
                      "operand": {
                        "enum": [
                          "equals",
                          "starts-with",
                          "ends-with",
                          "contains"
                        ]
                      },
                      "values": {
                        "type": "array",
                        "minItems": 1,
                        "maxItems": 100,
                        "items": {
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 200
                        }
                      }
                    }
                  },
                  "pathSegment": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "caseSensitive": {
                        "type": "boolean"
                      },
                      "operand": {
                        "enum": [
                          "equals",
                          "starts-with",
                          "ends-with",
                          "contains"
                        ]
                      },
                      "values": {
                        "type": "array",
                        "minItems": 1,
                        "maxItems": 100,
                        "items": {
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 200
                        }
                      }
                    }
                  },
                  "port": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "operand": {
                        "enum": [
                          "equals",
                          "less",
                          "greater",
                          "less-or-equal",
                          "greater-or-equal"
                        ]
                      },
                      "values": {
                        "type": "array",
                        "minItems": 1,
                        "maxItems": 100,
                        "items": {
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "queryParameter": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "caseSensitive": {
                        "type": "boolean"
                      },
                      "operand": {
                        "enum": [
                          "equals",
                          "starts-with",
                          "ends-with",
                          "contains"
                        ]
                      },
                      "values": {
                        "type": "array",
                        "minItems": 1,
                        "maxItems": 100,
                        "items": {
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 200
                        }
                      }
                    }
                  },
                  "queryString": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "caseSensitive": {
                        "type": "boolean"
                      },
                      "operand": {
                        "enum": [
                          "equals",
                          "starts-with",
                          "ends-with",
                          "contains"
                        ]
                      },
                      "values": {
                        "type": "array",
                        "minItems": 1,
                        "maxItems": 100,
                        "items": {
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 200
                        }
                      }
                    }
                  },
                  "scheme": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "caseSensitive": {
                        "type": "boolean"
                      },
                      "operand": {
                        "enum": [
                          "equals",
                          "starts-with",
                          "ends-with",
                          "contains"
                        ]
                      },
                      "values": {
                        "type": "array",
                        "minItems": 1,
                        "maxItems": 100,
                        "items": {
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 200
                        }
                      }
                    }
                  },
                  "serverName": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "caseSensitive": {
                        "type": "boolean"
                      },
                      "operand": {
                        "enum": [
                          "equals",
                          "starts-with",
                          "ends-with",
                          "contains"
                        ]
                      },
                      "values": {
                        "type": "array",
                        "minItems": 1,
                        "maxItems": 100,
                        "items": {
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 200
                        }
                      }
                    }
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "httpHeader",
                      "httpUri",
                      "httpCookie",
                      "sslExtension"
                    ]
                  },
                  "unnamedQueryParameter": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "caseSensitive": {
                        "type": "boolean"
                      },
                      "operand": {
                        "enum": [
                          "equals",
                          "starts-with",
                          "ends-with",
                          "contains"
                        ]
                      },
                      "values": {
                        "type": "array",
                        "minItems": 1,
                        "maxItems": 100,
                        "items": {
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 200
                        }
                      }
                    }
                  }
                },
                "example": {
                  "name": "My name",
                  "description": "My description",
                  "all": {},
                  "alpn": {},
                  "event": "request",
                  "extension": {},
                  "host": {},
                  "index": 1,
                  "normalized": false,
                  "npn": {},
                  "path": {},
                  "pathSegment": {},
                  "port": {},
                  "queryParameter": {},
                  "queryString": {},
                  "scheme": {},
                  "serverName": {},
                  "type": "httpUri",
                  "unnamedQueryParameter": {}
                }
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "RuleController.createRuleCondition"
      },
      "get": {
        "x-controller-name": "RuleController",
        "x-operation-name": "getConditions",
        "tags": [
          "RuleController"
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieve condition resources by pool id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "conditions": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "tenantId": {
                            "type": "string"
                          },
                          "createdAt": {
                            "type": "date"
                          },
                          "updatedAt": {
                            "type": "date"
                          },
                          "all": {
                            "type": "object"
                          },
                          "alpn": {
                            "type": "object"
                          },
                          "event": {
                            "type": "string"
                          },
                          "extension": {
                            "type": "object"
                          },
                          "host": {
                            "type": "object"
                          },
                          "index": {
                            "type": "number"
                          },
                          "normalized": {
                            "type": "boolean"
                          },
                          "npn": {
                            "type": "object"
                          },
                          "path": {
                            "type": "object"
                          },
                          "pathSegment": {
                            "type": "object"
                          },
                          "port": {
                            "type": "object"
                          },
                          "queryParameter": {
                            "type": "object"
                          },
                          "queryString": {
                            "type": "object"
                          },
                          "scheme": {
                            "type": "object"
                          },
                          "serverName": {
                            "type": "object"
                          },
                          "type": {
                            "type": "string"
                          },
                          "unnamedQueryParameter": {
                            "type": "object"
                          },
                          "ruleId": {
                            "type": "string"
                          }
                        },
                        "example": {
                          "id": "11111111-2222-3333-4444-555555555555",
                          "name": "My name",
                          "description": "My description",
                          "createdAt": "2019-03-05T08:40:25.000Z",
                          "updatedAt": "2019-03-05T08:40:25.100Z",
                          "all": {},
                          "alpn": {},
                          "event": "request",
                          "extension": {},
                          "host": {},
                          "index": 1,
                          "normalized": false,
                          "npn": {},
                          "path": {},
                          "pathSegment": {},
                          "port": {},
                          "queryParameter": {},
                          "queryString": {},
                          "scheme": {},
                          "serverName": {},
                          "type": "httpUri",
                          "unnamedQueryParameter": {},
                          "ruleId": "2d3h896a-4d82-4234-8d08-55550dbc191"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "ruleId",
            "description": "Rule resource ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": ""
            }
          }
        ],
        "operationId": "RuleController.getConditions"
      }
    },
    "/adcaas/v1/rules/{ruleId}": {
      "patch": {
        "x-controller-name": "RuleController",
        "x-operation-name": "updateById",
        "tags": [
          "RuleController"
        ],
        "responses": {
          "204": {
            "description": "Successfully update Rule resource"
          },
          "404": {
            "description": "Can not find Rule resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array"
                    }
                  },
                  "example": {
                    "statusCode": 404,
                    "name": "Error",
                    "code": "ENTITY_NOT_FOUND"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "ruleId",
            "description": "Rule resource ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": ""
            }
          }
        ],
        "requestBody": {
          "description": "Rule resource properties that need to be updated",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [],
                "properties": {
                  "id": false,
                  "name": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 50
                  },
                  "description": {
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 200
                  },
                  "tenantId": false,
                  "createdAt": false,
                  "updatedAt": false,
                  "endpointpolicyId": {
                    "type": "string",
                    "format": "uuid"
                  }
                },
                "example": {
                  "name": "My name",
                  "description": "My description",
                  "endpointpolicyId": "2d3h896a-4d82-40ee-8d08-55550db1234"
                }
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "RuleController.updateById"
      },
      "get": {
        "x-controller-name": "RuleController",
        "x-operation-name": "findById",
        "tags": [
          "RuleController"
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieve Rule resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "rule": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "tenantId": {
                          "type": "string"
                        },
                        "createdAt": {
                          "type": "date"
                        },
                        "updatedAt": {
                          "type": "date"
                        },
                        "endpointpolicyId": {
                          "type": "string"
                        }
                      },
                      "example": {
                        "id": "11111111-2222-3333-4444-555555555555",
                        "name": "My name",
                        "description": "My description",
                        "createdAt": "2019-03-05T08:40:25.000Z",
                        "updatedAt": "2019-03-05T08:40:25.100Z",
                        "endpointpolicyId": "2d3h896a-4d82-40ee-8d08-55550db1234"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Can not find Rule resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array"
                    }
                  },
                  "example": {
                    "statusCode": 404,
                    "name": "Error",
                    "code": "ENTITY_NOT_FOUND"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "ruleId",
            "description": "Rule resource ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": ""
            }
          }
        ],
        "operationId": "RuleController.findById"
      },
      "delete": {
        "x-controller-name": "RuleController",
        "x-operation-name": "deleteById",
        "tags": [
          "RuleController"
        ],
        "responses": {
          "204": {
            "description": "Successfully delete Rule resource"
          },
          "404": {
            "description": "Can not find Rule resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array"
                    }
                  },
                  "example": {
                    "statusCode": 404,
                    "name": "Error",
                    "code": "ENTITY_NOT_FOUND"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "ruleId",
            "description": "Rule resource ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": ""
            }
          }
        ],
        "operationId": "RuleController.deleteById"
      }
    },
    "/adcaas/v1/rules": {
      "post": {
        "x-controller-name": "RuleController",
        "x-operation-name": "create",
        "tags": [
          "RuleController"
        ],
        "responses": {
          "200": {
            "description": "Successfully create Rule resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "rule": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "tenantId": {
                          "type": "string"
                        },
                        "createdAt": {
                          "type": "date"
                        },
                        "updatedAt": {
                          "type": "date"
                        },
                        "endpointpolicyId": {
                          "type": "string"
                        }
                      },
                      "example": {
                        "id": "11111111-2222-3333-4444-555555555555",
                        "name": "My name",
                        "description": "My description",
                        "createdAt": "2019-03-05T08:40:25.000Z",
                        "updatedAt": "2019-03-05T08:40:25.100Z",
                        "endpointpolicyId": "2d3h896a-4d82-40ee-8d08-55550db1234"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid Rule resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array"
                    }
                  },
                  "example": {
                    "statusCode": 400,
                    "name": "BadRequestError"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Rule resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array"
                    }
                  },
                  "example": {
                    "statusCode": 422,
                    "name": "UnprocessableEntityError",
                    "message": "The request body is invalid. See error object `details` property for more info.",
                    "code": "VALIDATION_FAILED"
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Rule resource that need to be created",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "endpointpolicyId"
                ],
                "properties": {
                  "id": false,
                  "name": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 50
                  },
                  "description": {
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 200
                  },
                  "tenantId": false,
                  "createdAt": false,
                  "updatedAt": false,
                  "endpointpolicyId": {
                    "type": "string",
                    "format": "uuid"
                  }
                },
                "example": {
                  "name": "My name",
                  "description": "My description",
                  "endpointpolicyId": "2d3h896a-4d82-40ee-8d08-55550db1234"
                }
              }
            }
          }
        },
        "operationId": "RuleController.create"
      },
      "get": {
        "x-controller-name": "RuleController",
        "x-operation-name": "find",
        "tags": [
          "RuleController"
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieve Rule resources",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "rules": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "tenantId": {
                            "type": "string"
                          },
                          "createdAt": {
                            "type": "date"
                          },
                          "updatedAt": {
                            "type": "date"
                          },
                          "endpointpolicyId": {
                            "type": "string"
                          }
                        },
                        "example": {
                          "id": "11111111-2222-3333-4444-555555555555",
                          "name": "My name",
                          "description": "My description",
                          "createdAt": "2019-03-05T08:40:25.000Z",
                          "updatedAt": "2019-03-05T08:40:25.100Z",
                          "endpointpolicyId": "2d3h896a-4d82-40ee-8d08-55550db1234"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "style": "deepObject",
            "explode": true,
            "schema": {
              "type": "object",
              "properties": {
                "where": {
                  "type": "object",
                  "additionalProperties": true
                },
                "fields": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "boolean"
                    },
                    "name": {
                      "type": "boolean"
                    },
                    "description": {
                      "type": "boolean"
                    },
                    "tenantId": {
                      "type": "boolean"
                    },
                    "createdAt": {
                      "type": "boolean"
                    },
                    "updatedAt": {
                      "type": "boolean"
                    },
                    "endpointpolicyId": {
                      "type": "boolean"
                    }
                  },
                  "additionalProperties": false
                },
                "offset": {
                  "type": "integer",
                  "minimum": 0
                },
                "limit": {
                  "type": "integer",
                  "minimum": 1,
                  "example": 100
                },
                "skip": {
                  "type": "integer",
                  "minimum": 0
                },
                "order": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "include": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "relation": {
                        "type": "string"
                      },
                      "scope": {
                        "properties": {
                          "where": {
                            "type": "object",
                            "additionalProperties": true
                          },
                          "fields": {
                            "type": "object",
                            "properties": {},
                            "additionalProperties": true
                          },
                          "offset": {
                            "type": "integer",
                            "minimum": 0
                          },
                          "limit": {
                            "type": "integer",
                            "minimum": 1,
                            "example": 100
                          },
                          "skip": {
                            "type": "integer",
                            "minimum": 0
                          },
                          "order": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        },
                        "additionalProperties": false
                      }
                    }
                  }
                }
              },
              "additionalProperties": false
            }
          }
        ],
        "operationId": "RuleController.find"
      }
    },
    "/adcaas/v1/services/{serviceId}/endpointpolicies/{endpointpolicyId}": {
      "post": {
        "x-controller-name": "ServiceController",
        "x-operation-name": "associatePolicy",
        "tags": [
          "ServiceController"
        ],
        "responses": {
          "204": {
            "description": "Successfully associate Service and Endpoint Policy"
          },
          "404": {
            "description": "Cannot find Service resource or Endpoint Policy resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array"
                    }
                  },
                  "example": {
                    "statusCode": 404,
                    "name": "Error",
                    "code": "ENTITY_NOT_FOUND"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "serviceId",
            "description": "Service resource ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": ""
            }
          },
          {
            "name": "endpointpolicyId",
            "description": "Endpoint Policy resource ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": ""
            }
          }
        ],
        "operationId": "ServiceController.associatePolicy"
      },
      "get": {
        "x-controller-name": "ServiceController",
        "x-operation-name": "findPolicy",
        "tags": [
          "ServiceController"
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieve Endpoint Policy resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "endpointpolicy": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "tenantId": {
                          "type": "string"
                        },
                        "createdAt": {
                          "type": "date"
                        },
                        "updatedAt": {
                          "type": "date"
                        }
                      },
                      "example": {
                        "id": "11111111-2222-3333-4444-555555555555",
                        "name": "My name",
                        "description": "My description",
                        "createdAt": "2019-03-05T08:40:25.000Z",
                        "updatedAt": "2019-03-05T08:40:25.100Z"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "serviceId",
            "description": "Service resource ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": ""
            }
          },
          {
            "name": "endpointpolicyId",
            "description": "Endpoint Policy resource ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": ""
            }
          }
        ],
        "operationId": "ServiceController.findPolicy"
      },
      "delete": {
        "x-controller-name": "ServiceController",
        "x-operation-name": "deassociatePolicy",
        "tags": [
          "ServiceController"
        ],
        "responses": {
          "204": {
            "description": "Successfully deassociate Service and Endpoint Policy"
          }
        },
        "parameters": [
          {
            "name": "serviceId",
            "description": "Service resource ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": ""
            }
          },
          {
            "name": "endpointpolicyId",
            "description": "Endpoint Policy resource ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": ""
            }
          }
        ],
        "operationId": "ServiceController.deassociatePolicy"
      }
    },
    "/adcaas/v1/services/{serviceId}/endpointpolicies": {
      "get": {
        "x-controller-name": "ServiceController",
        "x-operation-name": "findPolicies",
        "tags": [
          "ServiceController"
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieve Endpoint Policy resources",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "endpointpolicies": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "tenantId": {
                            "type": "string"
                          },
                          "createdAt": {
                            "type": "date"
                          },
                          "updatedAt": {
                            "type": "date"
                          }
                        },
                        "example": {
                          "id": "11111111-2222-3333-4444-555555555555",
                          "name": "My name",
                          "description": "My description",
                          "createdAt": "2019-03-05T08:40:25.000Z",
                          "updatedAt": "2019-03-05T08:40:25.100Z"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "serviceId",
            "description": "Service resource ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": ""
            }
          }
        ],
        "operationId": "ServiceController.findPolicies"
      }
    },
    "/adcaas/v1/services/{serviceId}": {
      "patch": {
        "x-controller-name": "ServiceController",
        "x-operation-name": "updateById",
        "tags": [
          "ServiceController"
        ],
        "responses": {
          "204": {
            "description": "Successfully update Service resource"
          },
          "404": {
            "description": "Can not find Service resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array"
                    }
                  },
                  "example": {
                    "statusCode": 404,
                    "name": "Error",
                    "code": "ENTITY_NOT_FOUND"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "serviceId",
            "description": "Service resource ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": ""
            }
          }
        ],
        "requestBody": {
          "description": "Service resource properties that need to be updated",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [],
                "properties": {
                  "id": false,
                  "name": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 50
                  },
                  "description": {
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 200
                  },
                  "tenantId": false,
                  "createdAt": false,
                  "updatedAt": false,
                  "type": false,
                  "applicationId": false,
                  "addressStatus": false,
                  "clientTLS": {
                    "type": "string"
                  },
                  "clonePools": false,
                  "enable": false,
                  "fallbackPersistenceMethod": false,
                  "iRules": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "lastHop": false,
                  "layer4": false,
                  "maxConnections": false,
                  "metadata": false,
                  "persistenceMethods": false,
                  "policyFirewallEnforced": false,
                  "policyFirewallStaged": false,
                  "policyIAM": false,
                  "policyNAT": false,
                  "defaultPoolId": {
                    "type": "string"
                  },
                  "profileClassification": false,
                  "profileConnectivity": {
                    "type": "string"
                  },
                  "profileDiameterEndpoint": false,
                  "profileDNS": false,
                  "profileDOS": false,
                  "profileEnforcement": false,
                  "profileFIX": false,
                  "profileFTP": false,
                  "profileHTTP": {
                    "type": "string"
                  },
                  "profileHTTP2": {
                    "type": "string"
                  },
                  "profileHTTPAcceleration": false,
                  "profileHTTPCompression": {
                    "type": "string"
                  },
                  "profileIPOther": false,
                  "profileMultiplex": false,
                  "profileL4": false,
                  "profileRADIUS": false,
                  "profileRewrite": false,
                  "profileSIP": false,
                  "profileSubscriberManagement": false,
                  "profileTCP": false,
                  "profileTrafficLog": false,
                  "profileUDP": false,
                  "redirect80": false,
                  "serverTLS": {
                    "type": "string"
                  },
                  "snat": false,
                  "translateClientPort": false,
                  "translateServerAddress": false,
                  "translateServerPort": false,
                  "virtualAddresses": false,
                  "virtualPort": false
                },
                "example": {
                  "name": "My name",
                  "description": "My description",
                  "iRules": [
                    "irule1",
                    "irule2"
                  ],
                  "defaultPoolId": "11111111-2222-3333-4444-555555555555"
                }
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "ServiceController.updateById"
      },
      "get": {
        "x-controller-name": "ServiceController",
        "x-operation-name": "findById",
        "tags": [
          "ServiceController"
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieve Service resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "service": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "tenantId": {
                          "type": "string"
                        },
                        "createdAt": {
                          "type": "date"
                        },
                        "updatedAt": {
                          "type": "date"
                        },
                        "type": {
                          "type": "string"
                        },
                        "applicationId": {
                          "type": "string"
                        },
                        "clientTLS": {
                          "type": "string"
                        },
                        "iRules": {
                          "type": "array"
                        },
                        "nat64Enabled": {
                          "type": "boolean"
                        },
                        "defaultPoolId": {
                          "type": "string"
                        },
                        "profileHTTP": {
                          "type": "string"
                        },
                        "profileHTTP2": {
                          "type": "string"
                        },
                        "profileHTTPCompression": {
                          "type": "string"
                        },
                        "serverTLS": {
                          "type": "string"
                        },
                        "virtualAddresses": {
                          "type": "array"
                        },
                        "virtualPort": {
                          "type": "number"
                        }
                      },
                      "example": {
                        "id": "11111111-2222-3333-4444-555555555555",
                        "name": "My name",
                        "description": "My description",
                        "createdAt": "2019-03-05T08:40:25.000Z",
                        "updatedAt": "2019-03-05T08:40:25.100Z",
                        "type": "HTTP",
                        "applicationId": "11111111-2222-3333-4444-555555555555",
                        "iRules": [
                          "irule1",
                          "irule2"
                        ],
                        "defaultPoolId": "11111111-2222-3333-4444-555555555555",
                        "virtualAddresses": [
                          "10.100.0.1"
                        ],
                        "virtualPort": "80"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Can not find Service resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array"
                    }
                  },
                  "example": {
                    "statusCode": 404,
                    "name": "Error",
                    "code": "ENTITY_NOT_FOUND"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "serviceId",
            "description": "Service resource ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": ""
            }
          }
        ],
        "operationId": "ServiceController.findById"
      },
      "delete": {
        "x-controller-name": "ServiceController",
        "x-operation-name": "deleteById",
        "tags": [
          "ServiceController"
        ],
        "responses": {
          "204": {
            "description": "Successfully delete Service resource"
          },
          "404": {
            "description": "Can not find Service resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array"
                    }
                  },
                  "example": {
                    "statusCode": 404,
                    "name": "Error",
                    "code": "ENTITY_NOT_FOUND"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "serviceId",
            "description": "Service resource ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": ""
            }
          }
        ],
        "operationId": "ServiceController.deleteById"
      }
    },
    "/adcaas/v1/services": {
      "post": {
        "x-controller-name": "ServiceController",
        "x-operation-name": "create",
        "tags": [
          "ServiceController"
        ],
        "responses": {
          "200": {
            "description": "Successfully create Service resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "service": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "tenantId": {
                          "type": "string"
                        },
                        "createdAt": {
                          "type": "date"
                        },
                        "updatedAt": {
                          "type": "date"
                        },
                        "type": {
                          "type": "string"
                        },
                        "applicationId": {
                          "type": "string"
                        },
                        "clientTLS": {
                          "type": "string"
                        },
                        "iRules": {
                          "type": "array"
                        },
                        "nat64Enabled": {
                          "type": "boolean"
                        },
                        "defaultPoolId": {
                          "type": "string"
                        },
                        "profileHTTP": {
                          "type": "string"
                        },
                        "profileHTTP2": {
                          "type": "string"
                        },
                        "profileHTTPCompression": {
                          "type": "string"
                        },
                        "serverTLS": {
                          "type": "string"
                        },
                        "virtualAddresses": {
                          "type": "array"
                        },
                        "virtualPort": {
                          "type": "number"
                        }
                      },
                      "example": {
                        "id": "11111111-2222-3333-4444-555555555555",
                        "name": "My name",
                        "description": "My description",
                        "createdAt": "2019-03-05T08:40:25.000Z",
                        "updatedAt": "2019-03-05T08:40:25.100Z",
                        "type": "HTTP",
                        "applicationId": "11111111-2222-3333-4444-555555555555",
                        "iRules": [
                          "irule1",
                          "irule2"
                        ],
                        "defaultPoolId": "11111111-2222-3333-4444-555555555555",
                        "virtualAddresses": [
                          "10.100.0.1"
                        ],
                        "virtualPort": "80"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid Service resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array"
                    }
                  },
                  "example": {
                    "statusCode": 400,
                    "name": "BadRequestError"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Service resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array"
                    }
                  },
                  "example": {
                    "statusCode": 422,
                    "name": "UnprocessableEntityError",
                    "message": "The request body is invalid. See error object `details` property for more info.",
                    "code": "VALIDATION_FAILED"
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Service resource that need to be created",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "type",
                  "applicationId",
                  "virtualAddresses"
                ],
                "properties": {
                  "id": false,
                  "name": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 50
                  },
                  "description": {
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 200
                  },
                  "tenantId": false,
                  "createdAt": false,
                  "updatedAt": false,
                  "type": {
                    "type": "string",
                    "enum": [
                      "HTTP",
                      "HTTPS"
                    ]
                  },
                  "applicationId": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "addressStatus": false,
                  "clientTLS": {
                    "type": "string"
                  },
                  "clonePools": false,
                  "enable": false,
                  "fallbackPersistenceMethod": false,
                  "iRules": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "lastHop": false,
                  "layer4": false,
                  "maxConnections": false,
                  "metadata": false,
                  "persistenceMethods": false,
                  "policyFirewallEnforced": false,
                  "policyFirewallStaged": false,
                  "policyIAM": false,
                  "policyNAT": false,
                  "defaultPoolId": {
                    "type": "string"
                  },
                  "profileAnalytics": false,
                  "profileClassification": false,
                  "profileConnectivity": {
                    "type": "string"
                  },
                  "profileDiameterEndpoint": false,
                  "profileDNS": false,
                  "profileDOS": false,
                  "profileEnforcement": false,
                  "profileFIX": false,
                  "profileFTP": false,
                  "profileHTTP": {
                    "type": "string"
                  },
                  "profileHTTP2": {
                    "type": "string"
                  },
                  "profileHTTPAcceleration": false,
                  "profileHTTPCompression": {
                    "type": "string"
                  },
                  "profileIPOther": false,
                  "profileMultiplex": false,
                  "profileL4": false,
                  "profileRADIUS": false,
                  "profileRewrite": false,
                  "profileSIP": false,
                  "profileSubscriberManagement": false,
                  "profileTCP": false,
                  "profileTrafficLog": false,
                  "profileUDP": false,
                  "redirect80": false,
                  "serverTLS": {
                    "type": "string"
                  },
                  "snat": false,
                  "translateClientPort": false,
                  "translateServerAddress": false,
                  "translateServerPort": false,
                  "virtualAddresses": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "ipv4"
                    },
                    "minItems": 1,
                    "maxItems": 1
                  },
                  "virtualPort": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 65535
                  }
                },
                "example": {
                  "name": "My name",
                  "description": "My description",
                  "type": "HTTP",
                  "applicationId": "11111111-2222-3333-4444-555555555555",
                  "iRules": [
                    "irule1",
                    "irule2"
                  ],
                  "defaultPoolId": "11111111-2222-3333-4444-555555555555",
                  "virtualAddresses": [
                    "10.100.0.1"
                  ],
                  "virtualPort": "80"
                }
              }
            }
          }
        },
        "operationId": "ServiceController.create"
      },
      "get": {
        "x-controller-name": "ServiceController",
        "x-operation-name": "find",
        "tags": [
          "ServiceController"
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieve Service resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "service": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "tenantId": {
                          "type": "string"
                        },
                        "createdAt": {
                          "type": "date"
                        },
                        "updatedAt": {
                          "type": "date"
                        },
                        "type": {
                          "type": "string"
                        },
                        "applicationId": {
                          "type": "string"
                        },
                        "clientTLS": {
                          "type": "string"
                        },
                        "iRules": {
                          "type": "array"
                        },
                        "nat64Enabled": {
                          "type": "boolean"
                        },
                        "defaultPoolId": {
                          "type": "string"
                        },
                        "profileHTTP": {
                          "type": "string"
                        },
                        "profileHTTP2": {
                          "type": "string"
                        },
                        "profileHTTPCompression": {
                          "type": "string"
                        },
                        "serverTLS": {
                          "type": "string"
                        },
                        "virtualAddresses": {
                          "type": "array"
                        },
                        "virtualPort": {
                          "type": "number"
                        }
                      },
                      "example": {
                        "id": "11111111-2222-3333-4444-555555555555",
                        "name": "My name",
                        "description": "My description",
                        "createdAt": "2019-03-05T08:40:25.000Z",
                        "updatedAt": "2019-03-05T08:40:25.100Z",
                        "type": "HTTP",
                        "applicationId": "11111111-2222-3333-4444-555555555555",
                        "iRules": [
                          "irule1",
                          "irule2"
                        ],
                        "defaultPoolId": "11111111-2222-3333-4444-555555555555",
                        "virtualAddresses": [
                          "10.100.0.1"
                        ],
                        "virtualPort": "80"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "style": "deepObject",
            "explode": true,
            "schema": {
              "type": "object",
              "properties": {
                "where": {
                  "type": "object",
                  "additionalProperties": true
                },
                "fields": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "boolean"
                    },
                    "name": {
                      "type": "boolean"
                    },
                    "description": {
                      "type": "boolean"
                    },
                    "tenantId": {
                      "type": "boolean"
                    },
                    "createdAt": {
                      "type": "boolean"
                    },
                    "updatedAt": {
                      "type": "boolean"
                    },
                    "type": {
                      "type": "boolean"
                    },
                    "applicationId": {
                      "type": "boolean"
                    },
                    "addressStatus": {
                      "type": "boolean"
                    },
                    "clientTLS": {
                      "type": "boolean"
                    },
                    "clonePools": {
                      "type": "boolean"
                    },
                    "enable": {
                      "type": "boolean"
                    },
                    "fallbackPersistenceMethod": {
                      "type": "boolean"
                    },
                    "iRules": {
                      "type": "boolean"
                    },
                    "lastHop": {
                      "type": "boolean"
                    },
                    "layer4": {
                      "type": "boolean"
                    },
                    "maxConnections": {
                      "type": "boolean"
                    },
                    "metadata": {
                      "type": "boolean"
                    },
                    "mirroring": {
                      "type": "boolean"
                    },
                    "nat64Enabled": {
                      "type": "boolean"
                    },
                    "persistenceMethods": {
                      "type": "boolean"
                    },
                    "policyFirewallEnforced": {
                      "type": "boolean"
                    },
                    "policyFirewallStaged": {
                      "type": "boolean"
                    },
                    "policyIAM": {
                      "type": "boolean"
                    },
                    "policyNAT": {
                      "type": "boolean"
                    },
                    "defaultPoolId": {
                      "type": "boolean"
                    },
                    "profileAnalytics": {
                      "type": "boolean"
                    },
                    "profileClassification": {
                      "type": "boolean"
                    },
                    "profileConnectivity": {
                      "type": "boolean"
                    },
                    "profileDiameterEndpoint": {
                      "type": "boolean"
                    },
                    "profileDNS": {
                      "type": "boolean"
                    },
                    "profileDOS": {
                      "type": "boolean"
                    },
                    "profileEnforcement": {
                      "type": "boolean"
                    },
                    "profileFIX": {
                      "type": "boolean"
                    },
                    "profileFTP": {
                      "type": "boolean"
                    },
                    "profileHTTP": {
                      "type": "boolean"
                    },
                    "profileHTTP2": {
                      "type": "boolean"
                    },
                    "profileHTTPAcceleration": {
                      "type": "boolean"
                    },
                    "profileHTTPCompression": {
                      "type": "boolean"
                    },
                    "profileIPOther": {
                      "type": "boolean"
                    },
                    "profileMultiplex": {
                      "type": "boolean"
                    },
                    "profileL4": {
                      "type": "boolean"
                    },
                    "profileRADIUS": {
                      "type": "boolean"
                    },
                    "profileRewrite": {
                      "type": "boolean"
                    },
                    "profileSIP": {
                      "type": "boolean"
                    },
                    "profileSubscriberManagement": {
                      "type": "boolean"
                    },
                    "profileTCP": {
                      "type": "boolean"
                    },
                    "profileTrafficLog": {
                      "type": "boolean"
                    },
                    "profileUDP": {
                      "type": "boolean"
                    },
                    "redirect80": {
                      "type": "boolean"
                    },
                    "serverTLS": {
                      "type": "boolean"
                    },
                    "snat": {
                      "type": "boolean"
                    },
                    "translateClientPort": {
                      "type": "boolean"
                    },
                    "translateServerAddress": {
                      "type": "boolean"
                    },
                    "translateServerPort": {
                      "type": "boolean"
                    },
                    "virtualAddresses": {
                      "type": "boolean"
                    },
                    "virtualPort": {
                      "type": "boolean"
                    }
                  },
                  "additionalProperties": false
                },
                "offset": {
                  "type": "integer",
                  "minimum": 0
                },
                "limit": {
                  "type": "integer",
                  "minimum": 1,
                  "example": 100
                },
                "skip": {
                  "type": "integer",
                  "minimum": 0
                },
                "order": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "additionalProperties": false
            }
          }
        ],
        "operationId": "ServiceController.find"
      }
    },
    "/adcaas/v1/tenants/{tenantId}/adcs/{adcId}": {
      "post": {
        "x-controller-name": "TenantAssociationController",
        "x-operation-name": "associateAdc",
        "tags": [
          "TenantAssociationController"
        ],
        "responses": {
          "204": {
            "description": "Successfully associate ADC and Tenant"
          },
          "404": {
            "description": "Cannot find ADC resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array"
                    }
                  },
                  "example": {
                    "statusCode": 404,
                    "name": "Error",
                    "code": "ENTITY_NOT_FOUND"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "tenantId",
            "description": "OpenStack project ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": ""
            }
          },
          {
            "name": "adcId",
            "description": "ADC resource ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": ""
            }
          }
        ],
        "operationId": "TenantAssociationController.associateAdc"
      },
      "get": {
        "x-controller-name": "TenantAssociationController",
        "x-operation-name": "findAdc",
        "tags": [
          "TenantAssociationController"
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieve ADC associated with Tenant",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "adc": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "tenantId": {
                          "type": "string"
                        },
                        "createdAt": {
                          "type": "date"
                        },
                        "updatedAt": {
                          "type": "date"
                        },
                        "type": {
                          "type": "string"
                        },
                        "networks": {
                          "type": "object"
                        },
                        "compute": {
                          "type": "object"
                        },
                        "management": {
                          "type": "object"
                        },
                        "license": {
                          "type": "string"
                        },
                        "status": {
                          "type": "string"
                        },
                        "lastErr": {
                          "type": "string"
                        }
                      },
                      "example": {
                        "id": "11111111-2222-3333-4444-555555555555",
                        "name": "My name",
                        "description": "My description",
                        "createdAt": "2019-03-05T08:40:25.000Z",
                        "updatedAt": "2019-03-05T08:40:25.100Z",
                        "type": "VE",
                        "networks": {
                          "mgmt1": {
                            "type": "mgmt",
                            "networkId": "80ccb4f0-5a9f-11e9-9721-3b33816a88bd",
                            "fixedIp": "172.16.11.100"
                          },
                          "failover1": {
                            "type": "ha",
                            "networkId": "b1d0a920-5aa0-11e9-9721-3b33816a88bd"
                          },
                          "internal1": {
                            "type": "int",
                            "networkId": "ba6e2a80-5aa0-11e9-9721-3b33816a88bd"
                          },
                          "external2": {
                            "type": "ext",
                            "networkId": "c25eca10-5aa0-11e9-9721-3b33816a88bd",
                            "floatingIp": "10.250.14.160"
                          }
                        },
                        "compute": {
                          "imageRef": "d4c52d70-5aa0-11e9-9721-3b33816a88bd",
                          "flavorRef": "ff29d6b0-5aa0-11e9-9721-3b33816a88bd",
                          "userData": "#!/bin/bash \necho userData is optional \n"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Cannot find assoociation or ADC resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array"
                    }
                  },
                  "example": {
                    "statusCode": 404,
                    "name": "Error",
                    "code": "ENTITY_NOT_FOUND"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "tenantId",
            "description": "Tenant resource ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": ""
            }
          },
          {
            "name": "adcId",
            "description": "ADC resource ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": ""
            }
          }
        ],
        "operationId": "TenantAssociationController.findAdc"
      },
      "delete": {
        "x-controller-name": "TenantAssociationController",
        "x-operation-name": "deassociateAdc",
        "tags": [
          "TenantAssociationController"
        ],
        "responses": {
          "204": {
            "description": "Successfully deassociate ADC and Tenant"
          }
        },
        "parameters": [
          {
            "name": "tenantId",
            "description": "OpenStack Project ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": ""
            }
          },
          {
            "name": "adcId",
            "description": "ADC resource ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": ""
            }
          }
        ],
        "operationId": "TenantAssociationController.deassociateAdc"
      }
    },
    "/adcaas/v1/tenants/{tenantId}/adcs": {
      "get": {
        "x-controller-name": "TenantAssociationController",
        "x-operation-name": "findAdcs",
        "tags": [
          "TenantAssociationController"
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieve ADCs associated with Tenant",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "adcs": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "tenantId": {
                            "type": "string"
                          },
                          "createdAt": {
                            "type": "date"
                          },
                          "updatedAt": {
                            "type": "date"
                          },
                          "type": {
                            "type": "string"
                          },
                          "networks": {
                            "type": "object"
                          },
                          "compute": {
                            "type": "object"
                          },
                          "management": {
                            "type": "object"
                          },
                          "license": {
                            "type": "string"
                          },
                          "status": {
                            "type": "string"
                          },
                          "lastErr": {
                            "type": "string"
                          }
                        },
                        "example": {
                          "id": "11111111-2222-3333-4444-555555555555",
                          "name": "My name",
                          "description": "My description",
                          "createdAt": "2019-03-05T08:40:25.000Z",
                          "updatedAt": "2019-03-05T08:40:25.100Z",
                          "type": "VE",
                          "networks": {
                            "mgmt1": {
                              "type": "mgmt",
                              "networkId": "80ccb4f0-5a9f-11e9-9721-3b33816a88bd",
                              "fixedIp": "172.16.11.100"
                            },
                            "failover1": {
                              "type": "ha",
                              "networkId": "b1d0a920-5aa0-11e9-9721-3b33816a88bd"
                            },
                            "internal1": {
                              "type": "int",
                              "networkId": "ba6e2a80-5aa0-11e9-9721-3b33816a88bd"
                            },
                            "external2": {
                              "type": "ext",
                              "networkId": "c25eca10-5aa0-11e9-9721-3b33816a88bd",
                              "floatingIp": "10.250.14.160"
                            }
                          },
                          "compute": {
                            "imageRef": "d4c52d70-5aa0-11e9-9721-3b33816a88bd",
                            "flavorRef": "ff29d6b0-5aa0-11e9-9721-3b33816a88bd",
                            "userData": "#!/bin/bash \necho userData is optional \n"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "tenantId",
            "description": "OpenStack Project ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": ""
            }
          }
        ],
        "operationId": "TenantAssociationController.findAdcs"
      }
    },
    "/adcaas/v1/tlsservers/count": {
      "get": {
        "x-controller-name": "TLSServerController",
        "x-operation-name": "count",
        "tags": [
          "TLSServerController"
        ],
        "responses": {
          "200": {
            "description": "Tlsserver model count",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "number"
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "style": "deepObject",
            "explode": true,
            "schema": {
              "type": "object",
              "additionalProperties": true
            }
          }
        ],
        "operationId": "TLSServerController.count"
      }
    },
    "/adcaas/v1/tlsservers/{tlsserverId}": {
      "patch": {
        "x-controller-name": "TLSServerController",
        "x-operation-name": "updateById",
        "tags": [
          "TLSServerController"
        ],
        "responses": {
          "204": {
            "description": "Successfully update TLSServer resource"
          },
          "404": {
            "description": "Can not find TLSServer resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array"
                    }
                  },
                  "example": {
                    "statusCode": 404,
                    "name": "Error",
                    "code": "ENTITY_NOT_FOUND"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "tlsserverId",
            "description": "TLSServer resource ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": ""
            }
          }
        ],
        "requestBody": {
          "description": "TLSServer resource properties that need to be updated",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [],
                "properties": {
                  "id": false,
                  "name": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 50
                  },
                  "description": {
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 200
                  },
                  "tenantId": false,
                  "createdAt": false,
                  "updatedAt": false,
                  "allowExpiredCRL": false,
                  "authenticationFrequency": false,
                  "authenticationInviteCA": false,
                  "authenticationMode": false,
                  "authenticationTrustCA": false,
                  "c3dEnabled": false,
                  "c3dOCSP": false,
                  "c3dOCSPUnknownStatusAction": false,
                  "certificates": {
                    "type": "array"
                  },
                  "ciphers": false,
                  "crlFile": false,
                  "ldapStartTLS": false,
                  "requireSNI": false,
                  "staplerOCSPEnabled": false
                },
                "example": {
                  "name": "My name",
                  "description": "My description"
                }
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "TLSServerController.updateById"
      },
      "get": {
        "x-controller-name": "TLSServerController",
        "x-operation-name": "findById",
        "tags": [
          "TLSServerController"
        ],
        "responses": {
          "responses": {
            "200": {
              "description": "Successfully retrieve TLSServer resource",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "tlsserver": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "tenantId": {
                            "type": "string"
                          },
                          "createdAt": {
                            "type": "date"
                          },
                          "updatedAt": {
                            "type": "date"
                          },
                          "allowExpiredCRL": {
                            "type": "boolean"
                          },
                          "authenticationFrequency": {
                            "type": "string"
                          },
                          "authenticationInviteCA": {
                            "type": "string"
                          },
                          "authenticationMode": {
                            "type": "string"
                          },
                          "authenticationTrustCA": {
                            "type": "string"
                          },
                          "c3dEnabled": {
                            "type": "boolean"
                          },
                          "c3dOCSP": {
                            "type": "object"
                          },
                          "c3dOCSPUnknownStatusAction": {
                            "type": "string"
                          },
                          "certificates": {
                            "type": "array"
                          },
                          "ciphers": {
                            "type": "string"
                          },
                          "crlFile": {
                            "type": "object"
                          },
                          "ldapStartTLS": {
                            "type": "string"
                          },
                          "requireSNI": {
                            "type": "boolean"
                          },
                          "staplerOCSPEnabled": {
                            "type": "boolean"
                          }
                        },
                        "example": {
                          "id": "11111111-2222-3333-4444-555555555555",
                          "name": "My name",
                          "description": "My description",
                          "createdAt": "2019-03-05T08:40:25.000Z",
                          "updatedAt": "2019-03-05T08:40:25.100Z",
                          "allowExpiredCRL": true,
                          "authenticationFrequency": "one-time",
                          "authenticationMode": "ignore",
                          "c3dEnabled": false,
                          "c3dOCSPUnknownStatusAction": "drop",
                          "ciphers": "DEFAULT",
                          "ldapStartTLS": "none",
                          "requireSNI": false,
                          "staplerOCSPEnabled": false
                        }
                      }
                    }
                  }
                }
              }
            },
            "404": {
              "description": "Can not find TLSServer resource",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "statusCode": {
                        "type": "integer"
                      },
                      "name": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string"
                      },
                      "details": {
                        "type": "array"
                      }
                    },
                    "example": {
                      "statusCode": 404,
                      "name": "Error",
                      "code": "ENTITY_NOT_FOUND"
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "tlsserverId",
            "description": "TLSServer resource ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": ""
            }
          }
        ],
        "operationId": "TLSServerController.findById"
      },
      "delete": {
        "x-controller-name": "TLSServerController",
        "x-operation-name": "deleteById",
        "tags": [
          "TLSServerController"
        ],
        "responses": {
          "204": {
            "description": "Successfully delete TLSServer resource"
          },
          "404": {
            "description": "Can not find TLSServer resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array"
                    }
                  },
                  "example": {
                    "statusCode": 404,
                    "name": "Error",
                    "code": "ENTITY_NOT_FOUND"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "tlsserverId",
            "description": "TLSServer resource ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": ""
            }
          }
        ],
        "operationId": "TLSServerController.deleteById"
      }
    },
    "/adcaas/v1/tlsservers": {
      "post": {
        "x-controller-name": "TLSServerController",
        "x-operation-name": "create",
        "tags": [
          "TLSServerController"
        ],
        "responses": {
          "200": {
            "description": "Successfully create TLSServer resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "tlsserver": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "tenantId": {
                          "type": "string"
                        },
                        "createdAt": {
                          "type": "date"
                        },
                        "updatedAt": {
                          "type": "date"
                        },
                        "allowExpiredCRL": {
                          "type": "boolean"
                        },
                        "authenticationFrequency": {
                          "type": "string"
                        },
                        "authenticationInviteCA": {
                          "type": "string"
                        },
                        "authenticationMode": {
                          "type": "string"
                        },
                        "authenticationTrustCA": {
                          "type": "string"
                        },
                        "c3dEnabled": {
                          "type": "boolean"
                        },
                        "c3dOCSP": {
                          "type": "object"
                        },
                        "c3dOCSPUnknownStatusAction": {
                          "type": "string"
                        },
                        "certificates": {
                          "type": "array"
                        },
                        "ciphers": {
                          "type": "string"
                        },
                        "crlFile": {
                          "type": "object"
                        },
                        "ldapStartTLS": {
                          "type": "string"
                        },
                        "requireSNI": {
                          "type": "boolean"
                        },
                        "staplerOCSPEnabled": {
                          "type": "boolean"
                        }
                      },
                      "example": {
                        "id": "11111111-2222-3333-4444-555555555555",
                        "name": "My name",
                        "description": "My description",
                        "createdAt": "2019-03-05T08:40:25.000Z",
                        "updatedAt": "2019-03-05T08:40:25.100Z",
                        "allowExpiredCRL": true,
                        "authenticationFrequency": "one-time",
                        "authenticationMode": "ignore",
                        "c3dEnabled": false,
                        "c3dOCSPUnknownStatusAction": "drop",
                        "ciphers": "DEFAULT",
                        "ldapStartTLS": "none",
                        "requireSNI": false,
                        "staplerOCSPEnabled": false
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid TLSServer resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array"
                    }
                  },
                  "example": {
                    "statusCode": 400,
                    "name": "BadRequestError"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable TLSServer resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array"
                    }
                  },
                  "example": {
                    "statusCode": 422,
                    "name": "UnprocessableEntityError",
                    "message": "The request body is invalid. See error object `details` property for more info.",
                    "code": "VALIDATION_FAILED"
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "TLSServer resource that need to be created",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [],
                "properties": {
                  "id": false,
                  "name": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 50
                  },
                  "description": {
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 200
                  },
                  "tenantId": false,
                  "createdAt": false,
                  "updatedAt": false,
                  "allowExpiredCRL": false,
                  "authenticationFrequency": false,
                  "authenticationInviteCA": false,
                  "authenticationMode": false,
                  "authenticationTrustCA": false,
                  "c3dEnabled": false,
                  "c3dOCSP": false,
                  "c3dOCSPUnknownStatusAction": false,
                  "certificates": {
                    "type": "array"
                  },
                  "ciphers": false,
                  "crlFile": false,
                  "ldapStartTLS": false,
                  "requireSNI": false,
                  "staplerOCSPEnabled": false
                },
                "example": {
                  "name": "My name",
                  "description": "My description"
                }
              }
            }
          }
        },
        "operationId": "TLSServerController.create"
      },
      "get": {
        "x-controller-name": "TLSServerController",
        "x-operation-name": "find",
        "tags": [
          "TLSServerController"
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieve TLSServer resources",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "tlsservers": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "tenantId": {
                            "type": "string"
                          },
                          "createdAt": {
                            "type": "date"
                          },
                          "updatedAt": {
                            "type": "date"
                          },
                          "allowExpiredCRL": {
                            "type": "boolean"
                          },
                          "authenticationFrequency": {
                            "type": "string"
                          },
                          "authenticationInviteCA": {
                            "type": "string"
                          },
                          "authenticationMode": {
                            "type": "string"
                          },
                          "authenticationTrustCA": {
                            "type": "string"
                          },
                          "c3dEnabled": {
                            "type": "boolean"
                          },
                          "c3dOCSP": {
                            "type": "object"
                          },
                          "c3dOCSPUnknownStatusAction": {
                            "type": "string"
                          },
                          "certificates": {
                            "type": "array"
                          },
                          "ciphers": {
                            "type": "string"
                          },
                          "crlFile": {
                            "type": "object"
                          },
                          "ldapStartTLS": {
                            "type": "string"
                          },
                          "requireSNI": {
                            "type": "boolean"
                          },
                          "staplerOCSPEnabled": {
                            "type": "boolean"
                          }
                        },
                        "example": {
                          "id": "11111111-2222-3333-4444-555555555555",
                          "name": "My name",
                          "description": "My description",
                          "createdAt": "2019-03-05T08:40:25.000Z",
                          "updatedAt": "2019-03-05T08:40:25.100Z",
                          "allowExpiredCRL": true,
                          "authenticationFrequency": "one-time",
                          "authenticationMode": "ignore",
                          "c3dEnabled": false,
                          "c3dOCSPUnknownStatusAction": "drop",
                          "ciphers": "DEFAULT",
                          "ldapStartTLS": "none",
                          "requireSNI": false,
                          "staplerOCSPEnabled": false
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "style": "deepObject",
            "explode": true,
            "schema": {
              "type": "object",
              "properties": {
                "where": {
                  "type": "object",
                  "additionalProperties": true
                },
                "fields": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "boolean"
                    },
                    "name": {
                      "type": "boolean"
                    },
                    "description": {
                      "type": "boolean"
                    },
                    "tenantId": {
                      "type": "boolean"
                    },
                    "createdAt": {
                      "type": "boolean"
                    },
                    "updatedAt": {
                      "type": "boolean"
                    },
                    "allowExpiredCRL": {
                      "type": "boolean"
                    },
                    "authenticationFrequency": {
                      "type": "boolean"
                    },
                    "authenticationInviteCA": {
                      "type": "boolean"
                    },
                    "authenticationMode": {
                      "type": "boolean"
                    },
                    "authenticationTrustCA": {
                      "type": "boolean"
                    },
                    "c3dEnabled": {
                      "type": "boolean"
                    },
                    "c3dOCSP": {
                      "type": "boolean"
                    },
                    "c3dOCSPUnknownStatusAction": {
                      "type": "boolean"
                    },
                    "certificates": {
                      "type": "boolean"
                    },
                    "ciphers": {
                      "type": "boolean"
                    },
                    "crlFile": {
                      "type": "boolean"
                    },
                    "ldapStartTLS": {
                      "type": "boolean"
                    },
                    "requireSNI": {
                      "type": "boolean"
                    },
                    "staplerOCSPEnabled": {
                      "type": "boolean"
                    }
                  },
                  "additionalProperties": false
                },
                "offset": {
                  "type": "integer",
                  "minimum": 0
                },
                "limit": {
                  "type": "integer",
                  "minimum": 1,
                  "example": 100
                },
                "skip": {
                  "type": "integer",
                  "minimum": 0
                },
                "order": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "additionalProperties": false
            }
          }
        ],
        "operationId": "TLSServerController.find"
      }
    },
    "/adcaas/v1/wafpolicies/count": {
      "get": {
        "x-controller-name": "WafpolicyController",
        "x-operation-name": "count",
        "tags": [
          "WafpolicyController"
        ],
        "responses": {
          "200": {
            "description": "Wafpolicy model count",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "number"
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "style": "deepObject",
            "explode": true,
            "schema": {
              "type": "object",
              "additionalProperties": true
            }
          }
        ],
        "operationId": "WafpolicyController.count"
      }
    },
    "/adcaas/v1/wafpolicies/{id}/adcs/{adcId}": {
      "post": {
        "x-controller-name": "WafpolicyController",
        "x-operation-name": "wafpolicyUpload",
        "tags": [
          "WafpolicyController"
        ],
        "responses": {
          "204": {
            "description": "Uploading WAF Policy resource"
          },
          "404": {
            "description": "Can not find trustedDeivceId",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array"
                    }
                  },
                  "example": {
                    "statusCode": 404,
                    "name": "Error",
                    "code": "ENTITY_NOT_FOUND"
                  }
                }
              }
            }
          },
          "422": {
            "description": " Adc is not trusted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array"
                    }
                  },
                  "example": {
                    "statusCode": 422,
                    "name": "UnprocessableEntityError",
                    "message": "The request body is invalid. See error object `details` property for more info.",
                    "code": "VALIDATION_FAILED"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "WAF Policy resource ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": ""
            }
          },
          {
            "name": "adcId",
            "description": "ADC resource ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": ""
            }
          }
        ],
        "operationId": "WafpolicyController.wafpolicyUpload"
      },
      "get": {
        "x-controller-name": "WafpolicyController",
        "x-operation-name": "wafpolicyCheckStatus",
        "tags": [
          "WafpolicyController"
        ],
        "responses": {
          "200": "Status of wafpolicy",
          "404": {
            "description": "Can not find relative resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array"
                    }
                  },
                  "example": {
                    "statusCode": 404,
                    "name": "Error",
                    "code": "ENTITY_NOT_FOUND"
                  }
                }
              }
            }
          },
          "422": {
            "description": " Adc is not trusted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array"
                    }
                  },
                  "example": {
                    "statusCode": 422,
                    "name": "UnprocessableEntityError",
                    "message": "The request body is invalid. See error object `details` property for more info.",
                    "code": "VALIDATION_FAILED"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "WAF Policy resource ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": ""
            }
          },
          {
            "name": "adcId",
            "description": "ADC resource ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": ""
            }
          }
        ],
        "operationId": "WafpolicyController.wafpolicyCheckStatus"
      }
    },
    "/adcaas/v1/wafpolicies/{id}": {
      "patch": {
        "x-controller-name": "WafpolicyController",
        "x-operation-name": "updateById",
        "tags": [
          "WafpolicyController"
        ],
        "responses": {
          "204": {
            "description": "Successfully update WAF Policy resource"
          },
          "404": {
            "description": "Can not find ADC resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array"
                    }
                  },
                  "example": {
                    "statusCode": 404,
                    "name": "Error",
                    "code": "ENTITY_NOT_FOUND"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "WAF Policy resource ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": ""
            }
          }
        ],
        "requestBody": {
          "description": "WAF Policy resource properties that need to be updated",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [],
                "properties": {
                  "id": false,
                  "name": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 50
                  },
                  "description": {
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 200
                  },
                  "tenantId": false,
                  "createdAt": false,
                  "updatedAt": false,
                  "file": false,
                  "ignoreChanges": false,
                  "url": false,
                  "public": false
                },
                "example": {
                  "name": "My name",
                  "description": "My description"
                }
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "WafpolicyController.updateById"
      },
      "get": {
        "x-controller-name": "WafpolicyController",
        "x-operation-name": "findById",
        "tags": [
          "WafpolicyController"
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieve WAF Policy resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "wafpolicy": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "tenantId": {
                          "type": "string"
                        },
                        "createdAt": {
                          "type": "date"
                        },
                        "updatedAt": {
                          "type": "date"
                        },
                        "file": {
                          "type": "string"
                        },
                        "url": {
                          "type": "string"
                        },
                        "public": {
                          "type": "boolean"
                        }
                      },
                      "example": {
                        "id": "11111111-2222-3333-4444-555555555555",
                        "name": "My name",
                        "description": "My description",
                        "createdAt": "2019-03-05T08:40:25.000Z",
                        "updatedAt": "2019-03-05T08:40:25.100Z",
                        "file": "/Common/my_waf",
                        "url": "https://raw.githubusercontent.com/wafrepo/master/my_waf.xml",
                        "public": true
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Can not find WAF Policy resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array"
                    }
                  },
                  "example": {
                    "statusCode": 404,
                    "name": "Error",
                    "code": "ENTITY_NOT_FOUND"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "WAF Policy resource ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": ""
            }
          }
        ],
        "operationId": "WafpolicyController.findById"
      },
      "delete": {
        "x-controller-name": "WafpolicyController",
        "x-operation-name": "deleteById",
        "tags": [
          "WafpolicyController"
        ],
        "responses": {
          "204": {
            "description": "Successfully delete WAF Policy resource"
          },
          "404": {
            "description": "Can not find WAF Policy resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array"
                    }
                  },
                  "example": {
                    "statusCode": 404,
                    "name": "Error",
                    "code": "ENTITY_NOT_FOUND"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "WAF Policy resource ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": ""
            }
          }
        ],
        "operationId": "WafpolicyController.deleteById"
      }
    },
    "/adcaas/v1/wafpolicies": {
      "post": {
        "x-controller-name": "WafpolicyController",
        "x-operation-name": "create",
        "tags": [
          "WafpolicyController"
        ],
        "responses": {
          "200": {
            "description": "Successfully create WAF Policy resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "wafpolicy": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "tenantId": {
                          "type": "string"
                        },
                        "createdAt": {
                          "type": "date"
                        },
                        "updatedAt": {
                          "type": "date"
                        },
                        "file": {
                          "type": "string"
                        },
                        "url": {
                          "type": "string"
                        },
                        "public": {
                          "type": "boolean"
                        }
                      },
                      "example": {
                        "id": "11111111-2222-3333-4444-555555555555",
                        "name": "My name",
                        "description": "My description",
                        "createdAt": "2019-03-05T08:40:25.000Z",
                        "updatedAt": "2019-03-05T08:40:25.100Z",
                        "file": "/Common/my_waf",
                        "url": "https://raw.githubusercontent.com/wafrepo/master/my_waf.xml",
                        "public": true
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid WAF Policy resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array"
                    }
                  },
                  "example": {
                    "statusCode": 400,
                    "name": "BadRequestError"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable WAF Policy resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array"
                    }
                  },
                  "example": {
                    "statusCode": 422,
                    "name": "UnprocessableEntityError",
                    "message": "The request body is invalid. See error object `details` property for more info.",
                    "code": "VALIDATION_FAILED"
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "WAF Policy resource that need to be created",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "url"
                ],
                "properties": {
                  "id": false,
                  "name": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 50
                  },
                  "description": {
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 200
                  },
                  "tenantId": false,
                  "createdAt": false,
                  "updatedAt": false,
                  "file": false,
                  "ignoreChanges": false,
                  "url": {
                    "type": "string",
                    "format": "uri"
                  },
                  "public": {
                    "type": "boolean"
                  }
                },
                "example": {
                  "name": "My name",
                  "description": "My description",
                  "url": "https://raw.githubusercontent.com/wafrepo/master/my_waf.xml",
                  "public": true
                }
              }
            }
          }
        },
        "operationId": "WafpolicyController.create"
      },
      "get": {
        "x-controller-name": "WafpolicyController",
        "x-operation-name": "find",
        "tags": [
          "WafpolicyController"
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieve WAF Policy resources",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "wafpolicies": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "tenantId": {
                            "type": "string"
                          },
                          "createdAt": {
                            "type": "date"
                          },
                          "updatedAt": {
                            "type": "date"
                          },
                          "file": {
                            "type": "string"
                          },
                          "url": {
                            "type": "string"
                          },
                          "public": {
                            "type": "boolean"
                          }
                        },
                        "example": {
                          "id": "11111111-2222-3333-4444-555555555555",
                          "name": "My name",
                          "description": "My description",
                          "createdAt": "2019-03-05T08:40:25.000Z",
                          "updatedAt": "2019-03-05T08:40:25.100Z",
                          "file": "/Common/my_waf",
                          "url": "https://raw.githubusercontent.com/wafrepo/master/my_waf.xml",
                          "public": true
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "style": "deepObject",
            "explode": true,
            "schema": {
              "type": "object",
              "properties": {
                "where": {
                  "type": "object",
                  "additionalProperties": true
                },
                "fields": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "boolean"
                    },
                    "name": {
                      "type": "boolean"
                    },
                    "description": {
                      "type": "boolean"
                    },
                    "tenantId": {
                      "type": "boolean"
                    },
                    "createdAt": {
                      "type": "boolean"
                    },
                    "updatedAt": {
                      "type": "boolean"
                    },
                    "file": {
                      "type": "boolean"
                    },
                    "ignoreChanges": {
                      "type": "boolean"
                    },
                    "url": {
                      "type": "boolean"
                    },
                    "public": {
                      "type": "boolean"
                    }
                  },
                  "additionalProperties": false
                },
                "offset": {
                  "type": "integer",
                  "minimum": 0
                },
                "limit": {
                  "type": "integer",
                  "minimum": 1,
                  "example": 100
                },
                "skip": {
                  "type": "integer",
                  "minimum": 0
                },
                "order": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "additionalProperties": false
            }
          }
        ],
        "operationId": "WafpolicyController.find"
      }
    },
    "/ping": {
      "get": {
        "x-controller-name": "PingController",
        "x-operation-name": "ping",
        "tags": [
          "PingController"
        ],
        "responses": {
          "200": {
            "description": "Ping Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "greeting": {
                      "type": "string"
                    },
                    "date": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string"
                    },
                    "headers": {
                      "type": "object",
                      "properties": {
                        "Content-Type": {
                          "type": "string"
                        }
                      },
                      "additionalProperties": true
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "PingController.ping"
      }
    }
  },
  "components": {
    "schemas": {
      "ContentBody": {},
      "Certificate": {
        "title": "Certificate",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "tenantId": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "certificate": {
            "type": "string"
          },
          "chainCA": {
            "type": "string"
          },
          "issuerCertificate": {
            "type": "object"
          },
          "passphrase": {
            "type": "string"
          },
          "pkcs12": {
            "type": "string"
          },
          "pkcs12Options": {
            "type": "object"
          },
          "privateKey": {
            "type": "string"
          },
          "staplerOCSP": {
            "type": "object"
          }
        },
        "required": [
          "id",
          "certificate"
        ],
        "additionalProperties": false
      },
      "ASGDeployRequest": {},
      "Endpointpolicy": {
        "title": "Endpointpolicy",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "tenantId": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id"
        ],
        "additionalProperties": false
      },
      "Monitor": {
        "title": "Monitor",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "tenantId": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "interval": {
            "type": "number"
          },
          "timeout": {
            "type": "number"
          },
          "targetAddress": {
            "type": "string"
          },
          "targetPort": {
            "type": "number"
          },
          "monitorType": {
            "type": "string"
          },
          "acceptRCODE": {
            "type": "string"
          },
          "adaptive": {
            "type": "boolean"
          },
          "adaptiveDivergenceMilliseconds": {
            "type": "number"
          },
          "adaptiveDivergencePercentage": {
            "type": "number"
          },
          "adaptiveDivergenceType": {
            "type": "string"
          },
          "adaptiveLimitMilliseconds": {
            "type": "number"
          },
          "adaptiveWindow": {
            "type": "number"
          },
          "answerContains": {
            "type": "string"
          },
          "arguments": {
            "type": "string"
          },
          "base": {
            "type": "string"
          },
          "chaseReferrals": {
            "type": "boolean"
          },
          "ciphers": {
            "type": "string"
          },
          "clientCertificate": {
            "type": "string"
          },
          "codesDown": {
            "type": "array",
            "items": {
              "type": "number"
            }
          },
          "codesUp": {
            "type": "array",
            "items": {
              "type": "number"
            }
          },
          "domain": {
            "type": "string"
          },
          "dscp": {
            "type": "number"
          },
          "expand": {
            "type": "boolean"
          },
          "filter": {
            "type": "string"
          },
          "headers": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "mandatoryAttributes": {
            "type": "boolean"
          },
          "nasIpAddress": {
            "type": "string"
          },
          "passphrase": {
            "type": "object"
          },
          "pathname": {
            "type": "string"
          },
          "protocol": {
            "type": "string"
          },
          "queryName": {
            "type": "string"
          },
          "queryType": {
            "type": "string"
          },
          "receive": {
            "type": "string"
          },
          "receiveDown": {
            "type": "string"
          },
          "remark": {
            "type": "string"
          },
          "request": {
            "type": "string"
          },
          "reverse": {
            "type": "boolean"
          },
          "script": {
            "type": "object"
          },
          "secret": {
            "type": "object"
          },
          "security": {
            "type": "string"
          },
          "send": {
            "type": "string"
          },
          "timeUntilUp": {
            "type": "number"
          },
          "transparent": {
            "type": "boolean"
          },
          "upInterval": {
            "type": "number"
          },
          "username": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "monitorType"
        ],
        "additionalProperties": false
      },
      "Member": {
        "title": "Member",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "tenantId": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "address": {
            "type": "string"
          },
          "port": {
            "type": "number"
          },
          "poolId": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "address",
          "port",
          "poolId"
        ],
        "additionalProperties": false
      },
      "Condition": {
        "title": "Condition",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "tenantId": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "all": {
            "type": "object"
          },
          "alpn": {
            "type": "object"
          },
          "event": {
            "type": "string"
          },
          "extension": {
            "type": "object"
          },
          "host": {
            "type": "object"
          },
          "index": {
            "type": "number"
          },
          "normalized": {
            "type": "boolean"
          },
          "npn": {
            "type": "object"
          },
          "path": {
            "type": "object"
          },
          "pathSegment": {
            "type": "object"
          },
          "port": {
            "type": "object"
          },
          "queryParameter": {
            "type": "object"
          },
          "queryString": {
            "type": "object"
          },
          "scheme": {
            "type": "object"
          },
          "serverName": {
            "type": "object"
          },
          "type": {
            "type": "string"
          },
          "unnamedQueryParameter": {
            "type": "object"
          },
          "ruleId": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "ruleId"
        ],
        "additionalProperties": false
      },
      "Action": {
        "title": "Action",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "tenantId": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "enabled": {
            "type": "boolean"
          },
          "event": {
            "type": "string"
          },
          "insert": {
            "type": "object"
          },
          "location": {
            "type": "string"
          },
          "policy": {
            "type": "string"
          },
          "remove": {
            "type": "object"
          },
          "replace": {
            "type": "object"
          },
          "select": {
            "type": "object"
          },
          "type": {
            "type": "string"
          },
          "ruleId": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "ruleId"
        ],
        "additionalProperties": false
      },
      "Service": {
        "title": "Service",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "tenantId": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "type": {
            "type": "string"
          },
          "applicationId": {
            "type": "string"
          },
          "addressStatus": {
            "type": "boolean"
          },
          "clientTLS": {
            "type": "string"
          },
          "clonePools": {
            "type": "object"
          },
          "enable": {
            "type": "boolean"
          },
          "fallbackPersistenceMethod": {
            "type": "string"
          },
          "iRules": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "lastHop": {
            "type": "string"
          },
          "layer4": {
            "type": "string"
          },
          "maxConnections": {
            "type": "number"
          },
          "metadata": {
            "type": "object"
          },
          "mirroring": {
            "type": "string"
          },
          "nat64Enabled": {
            "type": "boolean"
          },
          "persistenceMethods": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "policyFirewallEnforced": {
            "type": "string"
          },
          "policyFirewallStaged": {
            "type": "string"
          },
          "policyIAM": {
            "type": "string"
          },
          "policyNAT": {
            "type": "string"
          },
          "defaultPoolId": {
            "type": "string"
          },
          "profileAnalytics": {
            "type": "string"
          },
          "profileClassification": {
            "type": "string"
          },
          "profileConnectivity": {
            "type": "string"
          },
          "profileDiameterEndpoint": {
            "type": "string"
          },
          "profileDNS": {
            "type": "string"
          },
          "profileDOS": {
            "type": "string"
          },
          "profileEnforcement": {
            "type": "string"
          },
          "profileFIX": {
            "type": "string"
          },
          "profileFTP": {
            "type": "string"
          },
          "profileHTTP": {
            "type": "string"
          },
          "profileHTTP2": {
            "type": "string"
          },
          "profileHTTPAcceleration": {
            "type": "string"
          },
          "profileHTTPCompression": {
            "type": "string"
          },
          "profileIPOther": {
            "type": "string"
          },
          "profileMultiplex": {
            "type": "string"
          },
          "profileL4": {
            "type": "string"
          },
          "profileRADIUS": {
            "type": "string"
          },
          "profileRewrite": {
            "type": "string"
          },
          "profileSIP": {
            "type": "string"
          },
          "profileSubscriberManagement": {
            "type": "string"
          },
          "profileTCP": {
            "type": "object"
          },
          "profileTrafficLog": {
            "type": "string"
          },
          "profileUDP": {
            "type": "string"
          },
          "redirect80": {
            "type": "boolean"
          },
          "serverTLS": {
            "type": "string"
          },
          "snat": {
            "type": "string"
          },
          "translateClientPort": {
            "type": "boolean"
          },
          "translateServerAddress": {
            "type": "boolean"
          },
          "translateServerPort": {
            "type": "boolean"
          },
          "virtualAddresses": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "virtualPort": {
            "type": "number"
          }
        },
        "required": [
          "id",
          "type",
          "applicationId",
          "virtualAddresses"
        ],
        "additionalProperties": false
      },
      "TLSServer": {
        "title": "TLSServer",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "tenantId": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "allowExpiredCRL": {
            "type": "boolean"
          },
          "authenticationFrequency": {
            "type": "string"
          },
          "authenticationInviteCA": {
            "type": "string"
          },
          "authenticationMode": {
            "type": "string"
          },
          "authenticationTrustCA": {
            "type": "string"
          },
          "c3dEnabled": {
            "type": "boolean"
          },
          "c3dOCSP": {
            "type": "object"
          },
          "c3dOCSPUnknownStatusAction": {
            "type": "string"
          },
          "certificates": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "ciphers": {
            "type": "string"
          },
          "crlFile": {
            "type": "object"
          },
          "ldapStartTLS": {
            "type": "string"
          },
          "requireSNI": {
            "type": "boolean"
          },
          "staplerOCSPEnabled": {
            "type": "boolean"
          }
        },
        "required": [
          "id"
        ],
        "additionalProperties": false
      }
    }
  },
  "servers": [
    {
      "url": "http://localhost:3000"
    }
  ]
}