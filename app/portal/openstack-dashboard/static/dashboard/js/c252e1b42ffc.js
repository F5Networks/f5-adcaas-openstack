var STATIC_URL="/dashboard/static/";var WEBROOT="/dashboard/";/*!
 * jQuery twitter bootstrap wizard plugin
 * Examples and documentation at: http://github.com/VinceG/twitter-bootstrap-wizard
 * version 1.0
 * Requires jQuery v1.3.2 or later
 * Supports Bootstrap 2.2.x, 2.3.x, 3.0
 * Dual licensed under the MIT and GPL licenses:
 * http://www.opensource.org/licenses/mit-license.php
 * http://www.gnu.org/licenses/gpl.html
 * Authors: Vadim Vincent Gabriel (http://vadimg.com), Jason Gill (www.gilluminate.com)
 */;(function($){var bootstrapWizardCreate=function(element,options){var element=$(element);var obj=this;var baseItemSelector='li:has([data-toggle="tab"])';var $settings=$.extend({},$.fn.bootstrapWizard.defaults,options);var $activeTab=null;var $navigation=null;this.rebindClick=function(selector,fn)
{selector.unbind('click',fn).bind('click',fn);}
this.fixNavigationButtons=function(){if(!$activeTab.length){$navigation.find('a:first').tab('show');$activeTab=$navigation.find(baseItemSelector+':first');}
$($settings.previousSelector,element).toggleClass('disabled',(obj.firstIndex()>=obj.currentIndex()));$($settings.nextSelector,element).toggleClass('disabled',(obj.currentIndex()>=obj.navigationLength()));obj.rebindClick($($settings.nextSelector,element),obj.next);obj.rebindClick($($settings.previousSelector,element),obj.previous);obj.rebindClick($($settings.lastSelector,element),obj.last);obj.rebindClick($($settings.firstSelector,element),obj.first);if($settings.onTabShow&&typeof $settings.onTabShow==='function'&&$settings.onTabShow($activeTab,$navigation,obj.currentIndex())===false){return false;}};this.next=function(e){if(element.hasClass('last')){return false;}
if($settings.onNext&&typeof $settings.onNext==='function'&&$settings.onNext($activeTab,$navigation,obj.nextIndex())===false){return false;}
$index=obj.nextIndex();if($index>obj.navigationLength()){}else{$navigation.find(baseItemSelector+':eq('+$index+') a').tab('show');}};this.previous=function(e){if(element.hasClass('first')){return false;}
if($settings.onPrevious&&typeof $settings.onPrevious==='function'&&$settings.onPrevious($activeTab,$navigation,obj.previousIndex())===false){return false;}
$index=obj.previousIndex();if($index<0){}else{$navigation.find(baseItemSelector+':eq('+$index+') a').tab('show');}};this.first=function(e){if($settings.onFirst&&typeof $settings.onFirst==='function'&&$settings.onFirst($activeTab,$navigation,obj.firstIndex())===false){return false;}
if(element.hasClass('disabled')){return false;}
$navigation.find(baseItemSelector+':eq(0) a').tab('show');};this.last=function(e){if($settings.onLast&&typeof $settings.onLast==='function'&&$settings.onLast($activeTab,$navigation,obj.lastIndex())===false){return false;}
if(element.hasClass('disabled')){return false;}
$navigation.find(baseItemSelector+':eq('+obj.navigationLength()+') a').tab('show');};this.currentIndex=function(){return $navigation.find(baseItemSelector).index($activeTab);};this.firstIndex=function(){return 0;};this.lastIndex=function(){return obj.navigationLength();};this.getIndex=function(e){return $navigation.find(baseItemSelector).index(e);};this.nextIndex=function(){return $navigation.find(baseItemSelector).index($activeTab)+1;};this.previousIndex=function(){return $navigation.find(baseItemSelector).index($activeTab)-1;};this.navigationLength=function(){return $navigation.find(baseItemSelector).length-1;};this.activeTab=function(){return $activeTab;};this.nextTab=function(){return $navigation.find(baseItemSelector+':eq('+(obj.currentIndex()+1)+')').length?$navigation.find(baseItemSelector+':eq('+(obj.currentIndex()+1)+')'):null;};this.previousTab=function(){if(obj.currentIndex()<=0){return null;}
return $navigation.find(baseItemSelector+':eq('+parseInt(obj.currentIndex()-1)+')');};this.show=function(index){return element.find(baseItemSelector+':eq('+index+') a').tab('show');};this.disable=function(index){$navigation.find(baseItemSelector+':eq('+index+')').addClass('disabled');};this.enable=function(index){$navigation.find(baseItemSelector+':eq('+index+')').removeClass('disabled');};this.hide=function(index){$navigation.find(baseItemSelector+':eq('+index+')').hide();};this.display=function(index){$navigation.find(baseItemSelector+':eq('+index+')').show();};this.remove=function(args){var $index=args[0];var $removeTabPane=typeof args[1]!='undefined'?args[1]:false;var $item=$navigation.find(baseItemSelector+':eq('+$index+')');if($removeTabPane){var $href=$item.find('a').attr('href');$($href).remove();}
$item.remove();};var innerTabClick=function(e){var clickedIndex=$navigation.find(baseItemSelector).index($(e.currentTarget).parent(baseItemSelector));if($settings.onTabClick&&typeof $settings.onTabClick==='function'&&$settings.onTabClick($activeTab,$navigation,obj.currentIndex(),clickedIndex)===false){return false;}};var innerTabShown=function(e){$element=$(e.target).parent();var nextTab=$navigation.find(baseItemSelector).index($element);if($element.hasClass('disabled')){return false;}
if($settings.onTabChange&&typeof $settings.onTabChange==='function'&&$settings.onTabChange($activeTab,$navigation,obj.currentIndex(),nextTab)===false){return false;}
$activeTab=$element;obj.fixNavigationButtons();};this.resetWizard=function(){$('a[data-toggle="tab"]',$navigation).off('click',innerTabClick);$('a[data-toggle="tab"]',$navigation).off('shown shown.bs.tab',innerTabShown);$navigation=element.find('ul:first',element);$activeTab=$navigation.find(baseItemSelector+'.active',element);$('a[data-toggle="tab"]',$navigation).on('click',innerTabClick);$('a[data-toggle="tab"]',$navigation).on('shown shown.bs.tab',innerTabShown);obj.fixNavigationButtons();};$navigation=element.find('ul:first',element);$activeTab=$navigation.find(baseItemSelector+'.active',element);if(!$navigation.hasClass($settings.tabClass)){$navigation.addClass($settings.tabClass);}
if($settings.onInit&&typeof $settings.onInit==='function'){$settings.onInit($activeTab,$navigation,0);}
if($settings.onShow&&typeof $settings.onShow==='function'){$settings.onShow($activeTab,$navigation,obj.nextIndex());}
$('a[data-toggle="tab"]',$navigation).on('click',innerTabClick);$('a[data-toggle="tab"]',$navigation).on('shown shown.bs.tab',innerTabShown);};$.fn.bootstrapWizard=function(options){if(typeof options=='string'){var args=Array.prototype.slice.call(arguments,1)
if(args.length===1){args.toString();}
return this.data('bootstrapWizard')[options](args);}
return this.each(function(index){var element=$(this);if(element.data('bootstrapWizard'))return;var wizard=new bootstrapWizardCreate(element,options);element.data('bootstrapWizard',wizard);wizard.fixNavigationButtons();});};$.fn.bootstrapWizard.defaults={tabClass:'nav nav-pills',nextSelector:'.wizard li.next',previousSelector:'.wizard li.previous',firstSelector:'.wizard li.first',lastSelector:'.wizard li.last',onShow:null,onInit:null,onNext:null,onPrevious:null,onLast:null,onFirst:null,onTabChange:null,onTabClick:null,onTabShow:null};})(jQuery);horizon.string={escapeRegex:function(text){return text.replace(/([.*+?^${}()|\[\]\/\\])/g,"\\$1");},escapeHtml:function(text){return text.replace(/&/g,'&amp;').replace(/</g,'&lt;').replace(/>/g,'&gt;').replace(/"/g,'&quot;').replace(/'/g,'&#x27;').replace(/\//g,'&#x2F;');}};horizon.lists={generate_element:function(name,value,type){var $li=$('<li>');$li.attr('name',value).html(name+'<em class="'+type+'_id">('+value+')</em>'+'<a href="#" class="btn btn-primary"></a>');return $li;},generate_html:function(type){var self=this;self.feature_type=type;var update_form=function(){var lists=$("#"+type+"ListId li").attr('data-index',100);var active_features=$("#selected_"+type+" > li").map(function(){return $(this).attr("name");});$("#"+type+"ListId input:checkbox").removeAttr('checked');active_features.each(function(index,value){$("#"+type+"ListId input:checkbox[value="+value+"]").prop('checked',true).parents("li").attr('data-index',index);});$("#"+type+"ListId ul").html(lists.sort(function(a,b){if($(a).data("index")<$(b).data("index")){return-1;}
if($(a).data("index")>$(b).data("index")){return 1;}
return 0;}));};var append_new_elements=function(type,state){$("#"+state+"_"+type).empty();$.each(self[type+"s_"+state],function(index,value){$("#"+state+"_"+self.feature_type).append(self.generate_element(value.name,value.value,self.feature_type));});};$("#"+type+"ListSortContainer").show();$("#"+type+"ListIdContainer").hide();self.init_list(type);append_new_elements(type,"available");append_new_elements(type,"selected");$("."+type+"list > li > a.btn").click(function(e){var $this=$(this);e.preventDefault();e.stopPropagation();if($this.parents("ul#available_"+type).length>0){$this.parent().appendTo($("#selected_"+type));}else if($this.parents("ul#selected_"+type).length>0){$this.parent().appendTo($("#available_"+type));}
update_form();});if($("#"+type+"ListId > div.form-group.error").length>0){var errortext=$("#"+type+"ListId > div.form-group.error").find("span.help-block").text();$("#selected_"+type+"_label").before($('<div class="dynamic-error">').html(errortext));}
$("."+type+"list").sortable({connectWith:"ul."+type+"list",placeholder:"ui-state-highlight",distance:5,start:function(){$("#selected_"+type).addClass("dragging");},stop:function(){$("#selected_"+type).removeClass("dragging");update_form();}}).disableSelection();},get_console_log:function(via_user_submit,user_decided_length){var form_element=$("#tail_length");var error_txt=gettext('There was a problem communicating with the server, please try again.');if(!via_user_submit){via_user_submit=false;}
$.ajax({url:$(form_element).attr('action'),data:(user_decided_length)?$(form_element).serialize():"length=35",method:'get',success:function(response_body){$('pre.logs').text(response_body);},error:function(){if(via_user_submit){horizon.clearErrorMessages();horizon.toast.add('error',error_txt);}}});},get_element:function(id,type){return $('label[for^="id_'+type+'_'+id+'"]');},init_list:function(type){var self=this;self[type+"s_selected"]=[];self[type+"s_available"]=[];$(horizon.lists.get_element("",type)).each(function(){var $parent=$(this).parent();var $input=$parent.children("input");var name=horizon.string.escapeHtml($parent.text().replace(/^\s+/,""));var properties={"name":name,"id":$input.attr("id"),"value":$input.attr("value")};var feature_state=($input.is(":checked"))?"selected":"available";self[type+"s_"+feature_state].push(properties);});}};horizon.ajax={_queue:[],_active:[],get_messages:function(request){return request.getResponseHeader("X-Horizon-Messages");},queue:function(opts){var def=$.Deferred();horizon.ajax._queue.push({opts:opts,deferred:def});horizon.ajax.next();return def.promise();},next:function(){var queue=horizon.ajax._queue;var limit=horizon.conf.ajax.queue_limit;function process_queue(request){return function(){var active=horizon.ajax._active;var index=$.inArray(request,active);if(index>-1){active.splice(index,1);}
horizon.ajax.next();};}
if(queue.length&&(!limit||horizon.ajax._active.length<limit)){var item=queue.shift();var request=$.ajax(item.opts);horizon.ajax._active.push(request);request.always(process_queue(request));request.then(item.deferred.resolve,item.deferred.reject);}}};horizon.datepickers={add:function(selector){$(selector).each(function(){var el=$(this);el.datepicker({format:'yyyy-mm-dd',setDate:new Date(),showButtonPanel:true,language:horizon.datepickerLocale});});}};horizon.forms={handle_snapshot_source:function(){$("div.table_wrapper, #modal_wrapper").on("change","select#id_snapshot_source",function(){var $option=$(this).find("option:selected");var $form=$(this).closest('form');var $volName=$form.find('input#id_name');if($volName.val()===""){$volName.val($option.data("name"));}
var $volSize=$form.find('input#id_size');var volSize=parseInt($volSize.val(),10)||-1;var dataSize=parseInt($option.data("size"),10)||-1;if(volSize<dataSize){$volSize.val(dataSize);}});},handle_volume_source:function(){$("div.table_wrapper, #modal_wrapper").on("change","select#id_volume_source",function(){var $option=$(this).find("option:selected");var $form=$(this).closest('form');var $volName=$form.find('input#id_name');if($volName.val()===""){$volName.val($option.data("name"));}
var $volSize=$form.find('input#id_size');var volSize=parseInt($volSize.val(),10)||-1;var dataSize=parseInt($option.data("size"),10)||-1;if(volSize<dataSize){$volSize.val(dataSize);}});},handle_image_source:function(){$("div.table_wrapper, #modal_wrapper").on("change","select#id_image_source",function(){var $option=$(this).find("option:selected");var $form=$(this).closest('form');var $volName=$form.find('input#id_name');if($volName.val()===""){$volName.val($option.data("name"));}
var $volSize=$form.find('input#id_size');var dataSize=parseInt($option.data("size"),10)||-1;var minDiskSize=parseInt($option.data("min_disk"),10)||1;$volSize.val(Math.max(minDiskSize,dataSize));});},handle_subnet_address_source:function(){$("div.table_wrapper, #modal_wrapper").on("change","select#id_address_source",function(){var $option=$(this).find("option:selected");var $form=$(this).closest("form");var $ipVersion=$form.find("select#id_ip_version");if($option.val()=="subnetpool"){$ipVersion.attr("disabled","disabled");}else{$ipVersion.removeAttr("disabled");}});},handle_subnet_subnetpool:function(){$("div.table_wrapper, #modal_wrapper").on("change","select#id_subnetpool",function(){var $option=$(this).find("option:selected");var $form=$(this).closest("form");var $ipVersion=$form.find("select#id_ip_version");var $prefixLength=$form.find("select#id_prefixlen");var subnetpoolIpVersion=parseInt($option.data("ip_version"),10)||4;var minPrefixLen=parseInt($option.data("min_prefixlen"),10)||1;var maxPrefixLen=parseInt($option.data("max_prefixlen"),10);var defaultPrefixLen=parseInt($option.data("default_prefixlen"),10)||-1;var optionsAsString="";$ipVersion.val(subnetpoolIpVersion);if(!maxPrefixLen){if(subnetpoolIpVersion==4){maxPrefixLen=32;}else{maxPrefixLen=128;}}
for(i=minPrefixLen;i<=maxPrefixLen;i++){optionsAsString+="<option value='"+i+"'>"+i;if(i==defaultPrefixLen){optionsAsString+=" ("+gettext("pool default")+")";}
optionsAsString+="</option>";}
$prefixLength.empty().append(optionsAsString);if(defaultPrefixLen>=0){$prefixLength.val(defaultPrefixLen);}else{$prefixLength.val("");}});},handle_object_upload_source:function(){$("div.table_wrapper, #modal_wrapper").on("change","input#id_object_file",function(){if(typeof($(this).attr("filename"))==='undefined'){$(this).attr("filename","");}
var $form=$(this).closest("form");var $obj_name=$form.find("input#id_name");var $fullPath=$(this).val();var $startIndex=($fullPath.indexOf('\\')>=0?$fullPath.lastIndexOf('\\'):$fullPath.lastIndexOf('/'));var $filename=$fullPath.substring($startIndex);if($filename.indexOf('\\')===0||$filename.indexOf('/')===0){$filename=$filename.substring(1);}
if(typeof($obj_name.val())==='undefined'||$obj_name.val().length<1||$(this).attr("filename").localeCompare($obj_name.val())===0){$obj_name.val($filename);$(this).attr("filename",$filename);$obj_name.trigger('input');}});},datepicker:function(){var startDate=$('#id_start').datepicker({language:horizon.datepickerLocale}).on('changeDate',function(ev){if(ev.dates[0].valueOf()>endDate.dates[0].valueOf()){var newDate=new Date(ev.dates[0]);newDate.setDate(newDate.getDate()+1);endDate.setDate(newDate);$('input#id_end')[0].focus();}
startDate.hide();endDate.setStartDate(ev.dates[0]);endDate.update();}).data('datepicker');var endDate=$('#id_end').datepicker({language:horizon.datepickerLocale,startDate:startDate?startDate.dates[0]:null}).on('changeDate',function(){endDate.hide();}).data('datepicker');$("#id_start").mousedown(function(){endDate.hide();});$("#id_end").mousedown(function(){startDate.hide();});$('.datepicker-addon').on('click',function(){$(this).siblings('input').trigger('focus');});}};horizon.forms.handle_submit=function(el){var $form=$(el).find("form");$form.submit(function(){var $this=$(this);var button=$this.find('[type="submit"]');if(button.hasClass('btn-primary')&&!button.hasClass('always-enabled')){$this.submit(function(){return false;});button.removeClass('primary').addClass('disabled');button.attr('disabled','disabled');}
$this.find('select[disabled="disabled"]').each(function(i,field){$(field).removeAttr("disabled");});return true;});};horizon.forms.add_password_fields_reveal_buttons=function(el){var _change_input_type=function($input,type){var $new_input=$input.clone();$new_input.attr('type',type);$input.replaceWith($new_input);return $new_input;};$(el).find('input[type="password"]').each(function(i,input){var $input=$(input);$input.closest('div').addClass("has-feedback");$('<span>').addClass("form-control-feedback fa fa-eye password-icon").insertAfter($input).click(function(){var $icon=$(this);if($input.attr('type')==='password'){$icon.removeClass('fa-eye');$icon.addClass('fa-eye-slash');$input=_change_input_type($input,'text');}else{$icon.removeClass('fa-eye-slash');$icon.addClass('fa-eye');$input=_change_input_type($input,'password');}});});};horizon.forms.init_themable_select=function($elem){"use strict";$elem=$elem||$('body');$elem=$elem instanceof jQuery?$elem:$($elem);$elem=$elem.hasClass('themable-select')?$elem:$elem.find('.themable-select');var initialized_class='select-initialized';if($elem.hasClass(initialized_class)){return;}
$elem.addClass(initialized_class);$elem.on('click','li a',function(){var $this=$(this);var $container=$this.closest('.themable-select');var value=$this.data('selectValue');var $select=$container.data('mySelect');if(!$select){$select=$container.find('select');$container.data('mySelect',$select);}
if($select.val()!==value){$select.val(value).change();}});$elem.find('li a[title]').tooltip();MutationObserver=window.MutationObserver||window.WebKitMutationObserver;var $targets=$elem.find('select');for(var ii=0;ii<$targets.length;ii++){var observer=new MutationObserver(function(mutations){var $select=$(mutations[0].target).closest('select');var $options=$select.find('option');var list=[];for(var jj=0;jj<$options.length;jj++){var $thisOption=$($options[jj]);var $list_item=$(document.createElement('li')).attr('data-original-index',jj);var $anchor=$(document.createElement('a')).attr('data-select-value',$thisOption.attr('value'));$anchor.text($thisOption.text()).appendTo($list_item);list[jj]=$list_item;}
$select.siblings('.dropdown-menu').html(list).change();$select.trigger('change');});var config={childList:true,subtree:true,attributes:false,characterData:true};observer.observe($targets[ii],config);}
$elem.children('select').on('change',function(){var $this=$(this);var thisVal=$this.val();var thisLabel=$this.find('option[value="'+thisVal+'"]').text();var $title=$this.parents('.themable-select').find('.dropdown-title');if(thisLabel===null||thisLabel.length===0){thisLabel=$this.find('option').first().text();}
if(thisLabel!==$title.text()){$title.text(thisLabel);}});};horizon.forms.init_new_selects=function(){$(document).on('DOMNodeInserted',function(e){var $target=$(e.target);var newInputs=$target.find('.themable-select').not('.select-initialized');for(var ii=0;ii<newInputs.length;ii++){horizon.forms.init_themable_select($(newInputs[ii]));}});};horizon.forms.getSpinnerValue=function(val,defaultVal){val=parseInt(val,10);return isNaN(val)?defaultVal:val;};horizon.forms.checkSpinnerValue=function($input){var val=$input.attr('value');var max=horizon.forms.getSpinnerValue($input.attr('max'),Number.MAX_SAFE_INTEGER);var min=horizon.forms.getSpinnerValue($input.attr('min'),0);var $parent=$input.parents('.themable-spinner');var $up=$parent.find('.spinner-up');var $down=$parent.find('.spinner-down');$parent.find('.themable-spinner-btn').removeAttr('disabled');if(val<=min){$down.attr('disabled',true);}else if(val>=max){$up.attr('disabled',true);}};horizon.forms.init_themable_spinner=function($elem){"use strict";$elem=$elem||$('body');$elem=$elem instanceof jQuery?$elem:$($elem);$elem=$elem.hasClass('themable-spinner')?$elem:$elem.find('.themable-spinner');var initialized_class='spinner-initialized';$elem=$elem.not('.'+initialized_class);var $input=$elem.find('input[type="number"]');horizon.forms.checkSpinnerValue($input);$elem.addClass(initialized_class).on('click','.btn',function(){var $this=$(this);var $input=$this.parents('.themable-spinner').find('input');var max=horizon.forms.getSpinnerValue($input.attr('max'),Number.MAX_SAFE_INTEGER);var min=horizon.forms.getSpinnerValue($input.attr('min'),0);var step=horizon.forms.getSpinnerValue($input.attr('step'),1);var originalVal=$input.val();var val=parseInt(originalVal===''?min||0:$input.val(),10);var new_val=val-step;if($this.hasClass('spinner-up')){new_val=originalVal?val+step:min;if(max==undefined||new_val<=max){$input.val(new_val).trigger('input').trigger('change');}}else{new_val=originalVal?val-step:min;if(min==undefined||new_val>=min){$input.val(new_val).trigger('input').trigger('change');}}});$input.on('change',function(e){horizon.forms.checkSpinnerValue($(e.delegateTarget));});};horizon.forms.init_new_spinners=function(){$(document).on('DOMNodeInserted',function(e){var $target=$(e.target);var newInputs=$target.find('.themable-spinner').not('.spinner-initialized');for(var ii=0;ii<newInputs.length;ii++){horizon.forms.init_themable_spinner($(newInputs[ii]));}});};horizon.addInitFunction(horizon.forms.init=function(){var $body=$('body');horizon.forms.handle_submit($body);horizon.modals.addModalInitFunction(horizon.forms.handle_submit);horizon.forms.init_themable_select();horizon.forms.init_new_selects();horizon.modals.addModalInitFunction(horizon.forms.init_themable_select);horizon.forms.init_themable_spinner();horizon.forms.init_new_spinners();horizon.forms.handle_snapshot_source();horizon.forms.handle_volume_source();horizon.forms.handle_image_source();horizon.forms.handle_object_upload_source();horizon.forms.datepicker();horizon.forms.handle_subnet_address_source();horizon.forms.handle_subnet_subnetpool();if(!horizon.conf.disable_password_reveal){horizon.forms.add_password_fields_reveal_buttons($body);horizon.modals.addModalInitFunction(horizon.forms.add_password_fields_reveal_buttons);}
$body.on("click","form button:not([ng-click]).btn-danger",function(evt){horizon.datatables.confirm(this);evt.preventDefault();});var $document=$(document);$document.on("change",'select.switchable',function(evt){var $fieldset=$(evt.target).closest('fieldset'),$switchables=$fieldset.find('select.switchable');$switchables.each(function(index,switchable){var $switchable=$(switchable);var slug=$switchable.data('slug');var isThemable=$switchable.parent('.themable-select').length>0;var visible=isThemable?$switchable.siblings('.dropdown-toggle').is(':visible'):$switchable.is(':visible');var val=$switchable.val();function handle_switched_field(index,input){var $input=$(input),data=$input.data(slug+"-"+val);if(typeof data==="undefined"||!visible){$input.closest('.form-group').hide();if($input.attr('required')==='required'){$input.data('savedRequired','required');$input.removeAttr('required');}}else{if($input.attr('type')!=="checkbox"){$('label[for='+$input.attr('id')+']').html(data);}
$input.closest('.form-group').show();if($input.data('savedRequired')==='required'){$input.attr("required","required");}}}
$fieldset.find('.switched[data-switch-on*="'+slug+'"]').each(handle_switched_field);$fieldset.siblings().find('.switched[data-switch-on*="'+slug+'"]').each(handle_switched_field);});});$('select.switchable').trigger('change');horizon.modals.addModalInitFunction(function(modal){$(modal).find('select.switchable').trigger('change');});$document.on("change",'input.switchable',function(evt){var $fieldset=$(evt.target).closest('fieldset'),$switchables=$fieldset.find('input.switchable');$switchables.each(function(index,switchable){var $switchable=$(switchable),visible=$switchable.parent().hasClass('themable-checkbox')?$switchable.siblings('label').is(':visible'):$switchable.is(':visible'),slug=$switchable.data('slug'),checked=$switchable.prop('checked'),hide_on=$switchable.data('hideOnChecked');if(!visible)return;if($switchable.data('hide-tab')){var hide_tab=String($switchable.data('hide-tab')).split(',');for(var i=0,len=hide_tab.length;i<len;i++){var tab=$('*[data-target="#'+hide_tab[i]+'"]').parent();if(checked==hide_on){tab.hide();}else if(!tab.is(':visible')){tab.show();}}
var $btnfinal=$('.button-final');if(checked==hide_on){$('.button-next').hide();$btnfinal.show();$btnfinal.data('show-on-tab',$fieldset.prop('id'));}else{$btnfinal.hide();$('.button-next').show();$btnfinal.removeData('show-on-tab');}}
function handle_switched_field(index,input){var $input=$(input);if(checked!=hide_on){$input.closest('.form-group').show();if($input.data('is-required')){$input.closest('.form-group').addClass("required");}}else{$input.closest('.form-group').hide();if($input.data('is-required')){$input.closest('.form-group').removeClass("required");}}}
$fieldset.find('.switched[data-switch-on*="'+slug+'"]').each(handle_switched_field);$fieldset.siblings().find('.switched[data-switch-on*="'+slug+'"]').each(handle_switched_field);});});$('input.switchable').trigger('change');horizon.modals.addModalInitFunction(function(modal){$(modal).find('input.switchable').trigger('change');});$document.on('shown.bs.tab',function(){var $fieldset=$('fieldset.active');var $btnfinal=$('.button-final');if($btnfinal.data('show-on-tab')){if($fieldset.prop('id')==$btnfinal.data('show-on-tab')){$('.button-next').hide();$btnfinal.show();}else{$btnfinal.hide();$('.button-next').show();}}});function update_volume_source_displayed_fields(field){var $this=$(field),base_type=$this.val();$this.find("option").each(function(){if(this.value!==base_type){$("#id_"+this.value).closest(".form-group").hide();}else{$("#id_"+this.value).closest(".form-group").show();}});}
$document.on('change','#id_volume_source_type',function(){update_volume_source_displayed_fields(this);});$('#id_volume_source_type').change();horizon.modals.addModalInitFunction(function(modal){$(modal).find("#id_volume_source_type").change();});$document.tooltip({selector:"div.form-group .help-icon",placement:function(tip,input){return $(input).closest("form[class*='split']").length?"bottom":'right';},title:function(){return $(this).closest('div.form-group').children('.help-block').text();}});$document.on('mousedown keydown','.form-group select',function(){$(this).tooltip('hide');});$document.on('keydown.esc_btn',function(evt){if(evt.keyCode===27){$('.tooltip').hide();}});$('p.help-block').hide();});horizon.formset_table=(function(){'use strict';var module={};module.reenumerate_rows=function(table,prefix){var count=0;var input_name_re=new RegExp('^'+prefix+'-(\\d+|__prefix__)-');var input_id_re=new RegExp('^id_'+prefix+'-(\\d+|__prefix__)-');table.find('tbody tr').each(function(){$(this).find('input').each(function(){var input=$(this);input.attr('name',input.attr('name').replace(input_name_re,prefix+'-'+count+'-'));input.attr('id',input.attr('id').replace(input_id_re,'id_'+prefix+'-'+count+'-'));});count+=1;});$('#id_'+prefix+'-TOTAL_FORMS').val(count);};module.delete_row=function(){$(this).closest('tr').hide();$(this).prev('input[name$="-DELETE"]').attr('checked',true);};module.replace_delete=function(where){where.find('input[name$="-DELETE"]').hide().after($('<a href="#" class="close">×</a>').click(module.delete_row));};module.add_row=function(table,prefix,empty_row_html){var new_row=$(empty_row_html);module.replace_delete(new_row);table.find('tbody').append(new_row);module.reenumerate_rows(table,prefix);};module.init=function(prefix,empty_row_html,add_label){var table=$('table#'+prefix);module.replace_delete(table);if(add_label){var button=$('<a href="#" class="btn btn-primary btn-sm pull-right">'+
add_label+'</a>');table.find('tfoot td').append(button);button.click(function(){module.add_row(table,prefix,empty_row_html);});}
var initial_forms=+$('#id_'+prefix+'-INITIAL_FORMS').val();var total_forms=+$('#id_'+prefix+'-TOTAL_FORMS').val();if(table.find('tbody tr').length>1&&table.find('tbody td.error').length===0&&total_forms>initial_forms){table.find('tbody tr').each(function(index){if(index>=initial_forms){$(this).remove();}});module.reenumerate_rows(table,prefix);$('#id_'+prefix+'-INITIAL_FORMS').val($('#id_'+prefix+'-TOTAL_FORMS').val());}
table.find('td.error[title]').tooltip();};return module;}());horizon.loader={templates:{inline:'#loader-inline',modal:'#loader-modal'}};horizon.loader.inline=function(text){return horizon.templates.compile(horizon.loader.templates.inline,{text:text});};horizon.loader.modal=function(text){return horizon.templates.compile(horizon.loader.templates.modal,{text:text});};horizon.alert=function(type,message,extra_tags){var safe=false;if(typeof(extra_tags)!=="undefined"&&$.inArray('safe',extra_tags.split(' '))!==-1){safe=true;}
var type_display={'danger':gettext("Danger: "),'warning':gettext("Warning: "),'info':gettext("Notice: "),'success':gettext("Success: "),'error':gettext("Error: ")}[type];if(type==='error'){type='danger';}
var template=horizon.templates.compiled_templates["#alert_message_template"],params={"type":type||'default',"type_display":type_display,"message":message,"safe":safe};var this_alert=$(template.render(params)).hide().prependTo("#main_content .messages").fadeIn(100);horizon.autoDismissAlert(this_alert);return this_alert;};horizon.clearErrorMessages=function(){$('#main_content .messages .alert.alert-danger').remove();};horizon.clearSuccessMessages=function(){$('#main_content .messages .alert.alert-success').remove();};horizon.clearAllMessages=function(){horizon.clearErrorMessages();horizon.clearSuccessMessages();};horizon.autoDismissAlert=function($alert){if(typeof(horizon.conf.auto_fade_alerts)==="undefined")
return;var types=$alert.attr('class').split(' '),intersection=$.grep(types,function(value){return $.inArray(value,horizon.conf.auto_fade_alerts.types)!==-1;});if(intersection.length>0){setTimeout(function(){$alert.fadeOut(horizon.conf.auto_fade_alerts.fade_duration);},horizon.conf.auto_fade_alerts.delay);}};horizon.addInitFunction(function(){$(document).ajaxComplete(function(event,request){var message_array=$.parseJSON(horizon.ajax.get_messages(request));$(message_array).each(function(index,item){horizon.alert(item[0],item[1],item[2]);});});$('a.ajax-modal').click(function(){horizon.clearAllMessages();});$(".alert").alert();$('#main_content .messages .alert').each(function(){horizon.autoDismissAlert($(this));});});horizon.modals={_request:null,spinner:null,progress_bar:null,_init_functions:[]};horizon.modals.addModalInitFunction=function(f){horizon.modals._init_functions.push(f);};horizon.modals.initModal=function(modal){$(horizon.modals._init_functions).each(function(index,f){f(modal);});};horizon.modals.create=function(title,body,confirm,cancel,confirmCssClass){if(!cancel){cancel=gettext("Cancel");}
var template=horizon.templates.compiled_templates["#modal_template"],params={title:title,body:body,confirm:confirm,cancel:cancel,confirmCssClass:confirmCssClass||"btn-primary",modal_backdrop:horizon.modals.MODAL_BACKDROP};return $(template.render(params)).appendTo("#modal_wrapper");};horizon.modals.success=function(data){var modal;var modal_wrapper=$('#modal_wrapper');modal_wrapper.parent().append(modal_wrapper);modal_wrapper.append(data);modal=$('#modal_wrapper > .modal:last');modal.modal();$(modal).trigger("new_modal",modal);return modal;};horizon.modals.modal_spinner=function(text,$container){if(!$container){$container=$('#modal_wrapper');}
horizon.modals.spinner=horizon.loader.modal(text);horizon.modals.spinner.appendTo($container);horizon.modals.spinner.modal({backdrop:'static'});};horizon.modals.progress_bar=function(text){var template=horizon.templates.compiled_templates["#progress-modal"];horizon.modals.bar=$(template.render({text:text})).appendTo("#modal_wrapper");horizon.modals.bar.modal({backdrop:'static'});var $progress_bar=horizon.modals.bar.find('.progress-bar');horizon.modals.progress_bar.update=function(fraction){var percent=Math.round(100*fraction)+'%';$progress_bar.css('width',Math.round(100*fraction)+'%').parents('.progress-text').find('.progress-bar-text').text(percent);};};horizon.modals.init_wizard=function(){var _max_visited_step=0;var _validate_steps=function(start,end){var $form=$('.workflow > form'),response={};if(typeof end==='undefined'){end=start;}
$form.find('div.row div.alert-danger').parent().remove();$form.find('.form-group.has-error').each(function(){var $group=$(this);$group.removeClass('has-error');$group.find('span.help-block').remove();});var disabled=$form.find('select[disabled="disabled"]').removeAttr("disabled");$.ajax({type:'POST',url:$form.attr('action'),headers:{'X-Horizon-Validate-Step-Start':start,'X-Horizon-Validate-Step-End':end},data:$form.serialize(),dataType:'json',async:false,success:function(data){response=data;}});disabled.attr("disabled","disabled");if(response.has_errors){var first_field=true;$.each(response.errors,function(step_slug,step_errors){var step_id=response.workflow_slug+'__'+step_slug,$fieldset=$form.find('#'+step_id);$.each(step_errors,function(field,errors){var $field;if(field==='__all__'){$.each(errors,function(index,error){$fieldset.find('div.row').prepend('<div class="col-sm-12"><div class="alert alert-danger">'+
error+'</div></div>');});$fieldset.find('input,  select, textarea').first().focus();return;}
$field=$fieldset.find('[name="'+field+'"]');$field.closest('.form-group').addClass('has-error');$.each(errors,function(index,error){$field.closest(".form-control").after('<span class="help-block">'+
error+'</span>');});if(first_field){$field.focus();first_field=false;}});});return false;}};$('.workflow.wizard').bootstrapWizard({tabClass:'wizard-tabs',nextSelector:'.button-next',previousSelector:'.button-previous',onTabShow:function(tab,navigation,index){var $navs=navigation.find('li');var total=$navs.length;var current=index;var $footer=$('.modal-footer');_max_visited_step=Math.max(_max_visited_step,current);if(current+1>=total){$footer.find('.button-next').hide();$footer.find('.button-final').show();}else{$footer.find('.button-next').show();$footer.find('.button-final').hide();}
$navs.each(function(i){var $this=$(this);if(i<=_max_visited_step){$this.addClass('done');}else{$this.removeClass('done');}});},onNext:function($tab,$nav,index){return _validate_steps(index-1);},onTabClick:function($tab,$nav,current,index){return(index<=current||_validate_steps(current,index-1)!==false);}});};horizon.modals.getUploadUrl=function(jqXHR){return jqXHR.getResponseHeader("X-File-Upload-URL");};horizon.modals.fileUpload=function(url,file,jqXHR){var token=jqXHR.getResponseHeader('X-Auth-Token');horizon.modals.progress_bar(gettext("Uploading image"));return $.ajax({type:'PUT',url:url,xhrFields:{withCredentials:true},headers:{'X-Auth-Token':token},data:file,processData:false,contentType:'application/octet-stream',xhr:function(){var xhr=new window.XMLHttpRequest();xhr.upload.addEventListener('progress',function(evt){if(evt.lengthComputable){horizon.modals.progress_bar.update(evt.loaded/evt.total);}},false);return xhr;}});};horizon.modals.prepareFileUpload=function($form){var $elem=$form.find('input[data-external-upload]');if(!$elem.length){return undefined;}
var file=$elem.get(0).files[0];var $hiddenPseudoFile=$form.find('input[name="'+$elem.attr('name')+'__hidden"]');if(file){$hiddenPseudoFile.val(file.name);$elem.remove();return file;}else{$hiddenPseudoFile.val('');return undefined;}};horizon.addInitFunction(horizon.modals.init=function(){var $document=$(document);$('#modal_wrapper').on('new_modal',function(evt,modal){horizon.modals.initModal(modal);});$document.on('click','.modal .cancel',function(evt){$(this).closest('.modal').modal('hide');evt.preventDefault();});$document.on('submit','.modal form',function(evt){var $form=$(this),form=this,$button=$form.find(".modal-footer .btn-primary"),update_field_id=$form.attr("data-add-to-field"),headers={},modalFileUpload=$form.attr("enctype")==="multipart/form-data",formData,ajaxOpts,featureFileList,featureFormData,file;if(modalFileUpload){featureFileList=$("<input type='file'/>").get(0).files!==undefined;featureFormData=window.FormData!==undefined;if(!featureFileList||!featureFormData){return;}else{file=horizon.modals.prepareFileUpload($form);formData=new window.FormData(form);}}else{formData=$form.serialize();}
evt.preventDefault();$button.prop("disabled",true);if(update_field_id){headers["X-Horizon-Add-To-Field"]=update_field_id;}
function processServerSuccess(data,textStatus,jqXHR){var redirect_header=jqXHR.getResponseHeader("X-Horizon-Location"),add_to_field_header=jqXHR.getResponseHeader("X-Horizon-Add-To-Field"),json_data,field_to_update;if(redirect_header===null){$('.ajax-modal, .dropdown-toggle').removeAttr("disabled");}
if(redirect_header){location.href=redirect_header;}else if(add_to_field_header){json_data=$.parseJSON(data);field_to_update=$("#"+add_to_field_header);field_to_update.append("<option value='"+json_data[0]+"'>"+json_data[1]+"</option>");field_to_update.change();field_to_update.val(json_data[0]);}else{horizon.modals.success(data,textStatus,jqXHR);}}
function processServerError(jqXHR,textStatus,errorThrown,$formElement){$formElement=$formElement||$form;if(jqXHR.getResponseHeader('logout')){location.href=jqXHR.getResponseHeader("X-Horizon-Location");}else{$('.ajax-modal, .dropdown-toggle').removeAttr("disabled");$formElement.closest(".modal").modal("hide");horizon.toast.add("danger",gettext("There was an error submitting the form. Please try again."));}}
ajaxOpts={type:"POST",url:$form.attr('action'),headers:headers,data:formData,beforeSend:function(){$("#modal_wrapper .modal").last().modal("hide");$('.ajax-modal, .dropdown-toggle').attr('disabled',true);horizon.modals.modal_spinner(gettext("Working"));},complete:function(jqXHR){var redirect_header=jqXHR.getResponseHeader("X-Horizon-Location");if(redirect_header===null){horizon.modals.spinner.modal('hide');}
$("#modal_wrapper .modal").last().modal("show");$button.prop("disabled",false);},success:function(data,textStatus,jqXHR){var promise;var uploadUrl=horizon.modals.getUploadUrl(jqXHR);$form.closest(".modal").modal("hide");if(uploadUrl){promise=horizon.modals.fileUpload(uploadUrl,file,jqXHR);}
if(promise){promise.then(function(){processServerSuccess(data,textStatus,jqXHR);},function(jqXHR,statusText,errorThrown){var $progressBar=horizon.modals.bar.find('.progress-bar');processServerError(jqXHR,statusText,errorThrown,$progressBar);});}else{processServerSuccess(data,textStatus,jqXHR);}},error:processServerError};if(modalFileUpload){ajaxOpts.contentType=false;ajaxOpts.processData=false;}
$.ajax(ajaxOpts);});$document.on('show.bs.modal','.modal',function(evt){$("select",evt.target).keyup(function(e){if(e.keyCode===27){e.target.blur();e.stopPropagation();}});});horizon.modals.addModalInitFunction(function(modal){$(modal).find(":text, select, textarea").filter(":visible:first").focus();});horizon.modals.addModalInitFunction(function(modal){horizon.datatables.validate_button($(modal).find(".table_wrapper > form"));});horizon.modals.addModalInitFunction(horizon.utils.loadAngular);$document.on('click','.ajax-modal',function(evt){var $this=$(this);if(horizon.modals._request&&typeof(horizon.modals._request.abort)!==undefined){horizon.modals._request.abort();}
horizon.modals._request=$.ajax($this.attr('href'),{beforeSend:function(){horizon.modals.modal_spinner(gettext("Loading"));},complete:function(){horizon.modals._request=null;horizon.modals.spinner.modal('hide');},error:function(jqXHR){if(jqXHR.status===401){var redir_url=jqXHR.getResponseHeader("X-Horizon-Location");if(redir_url){location.href=redir_url;}else{location.reload(true);}}
else{if(!horizon.ajax.get_messages(jqXHR)){horizon.toast.add("danger",gettext("An error occurred. Please try again later."));}}},success:function(data,textStatus,jqXHR){var update_field_id=$this.attr('data-add-to-field'),modal,form;modal=horizon.modals.success(data,textStatus,jqXHR);if(update_field_id){form=modal.find("form");if(form.length){form.attr("data-add-to-field",update_field_id);}}}});evt.preventDefault();});$document.on("show.bs.modal",".modal",function(){var modal_stack=$("#modal_wrapper .modal");modal_stack.splice(modal_stack.length-1,1);modal_stack.modal("hide");});$document.on('hidden.bs.modal','.modal',function(){var $this=$(this),modal_stack=$("#modal_wrapper .modal");if($this[0]===modal_stack.last()[0]||$this.hasClass("loading")){$this.remove();if(!$this.hasClass("loading")){$("#modal_wrapper .modal").last().modal("show");}}});$document.on("show.bs.modal",".modal",function(){$(".modal-content").draggable({handle:".modal-header"});});var MOUSE_LBUTTON_CODE_NORMALIZED=1;var MOUSE_WHEEL_CODE_NORMALIZED=2;$(document).on('click','.openstack-spin',function(ev){if(ev.which!==MOUSE_WHEEL_CODE_NORMALIZED&&!(ev.which===MOUSE_LBUTTON_CODE_NORMALIZED&&(ev.shiftKey||ev.ctrlKey||ev.metaKey))){horizon.modals.modal_spinner(gettext("Loading"));}});});horizon.addInitFunction(function(){$(window).bind('pageshow',function(event){if(event.originalEvent.persisted){window.location.reload();}});});horizon.modals.MODAL_BACKDROP="static";horizon.datatables={update:function(){var $rows_to_update=$('tr.warning.ajax-update');var $table=$rows_to_update.closest('table');var interval=$rows_to_update.attr('data-update-interval');var decay_constant=$table.attr('decay_constant');var requests=[];if($rows_to_update.length<=0){return;}
if($rows_to_update.find('.actions_column .btn-group.open').length){setTimeout(horizon.datatables.update,interval);$table.removeAttr('decay_constant');return;}
$rows_to_update.each(function(){var $row=$(this);var $table=$row.closest('table.datatable');requests.push(horizon.ajax.queue({url:$row.attr('data-update-url'),error:function(jqXHR){switch(jqXHR.status){case 404:var row_count,colspan,template,params;row_count=horizon.datatables.update_footer_count($table,-1);if(row_count===0){colspan=$table.find('.table_column_header th').length;template=horizon.templates.compiled_templates["#empty_row_template"];params={"colspan":colspan,no_items_label:gettext("No items to display.")};var empty_row=template.render(params);$row.replaceWith(empty_row);}else{$row.remove();}
$table.trigger("update");horizon.datatables.update_actions();break;default:console.log(gettext("An error occurred while updating."));$row.removeClass("ajax-update");$row.find("i.ajax-updating").remove();break;}},success:function(data){var $new_row=$(data);if($new_row.hasClass('warning')){var $container=$(document.createElement('div')).addClass('progress-text horizon-loading-bar');var $progress=$(document.createElement('div')).addClass('progress progress-striped active').appendTo($container);$(document.createElement('div')).addClass('progress-bar').appendTo($progress);if($new_row.find('.btn-action-required').length>0){$(document.createElement('span')).addClass('fa fa-question-circle progress-bar-text').appendTo($container);}
$new_row.find("td.warning:last").prepend($container);}
if($new_row.html()!==$row.html()){var $checkbox=$row.find('.table-row-multi-select');if($checkbox.length&&$checkbox[0].checked){$new_row.find('.table-row-multi-select').prop('checked',true);}
$row.replaceWith($new_row);recompileAngularContent($table);$table.trigger("update");$table.removeAttr('decay_constant');if($table.attr('id')in horizon.datatables.qs){horizon.datatables.qs[$table.attr('id')].cache();}}},complete:function(){horizon.datatables.validate_button();}}));});$.when.apply($,requests).always(function(){decay_constant=decay_constant||0;decay_constant++;$table.attr('decay_constant',decay_constant);var next_poll=interval*decay_constant;if(next_poll>30*1000){next_poll=30*1000;}
setTimeout(horizon.datatables.update,next_poll);});},update_actions:function(){var $actions_to_update=$('.btn-launch.ajax-update, .btn-create.ajax-update');$actions_to_update.each(function(){var $action=$(this);horizon.ajax.queue({url:$action.attr('data-update-url'),error:function(){console.log(gettext("An error occurred while updating."));},success:function(data){var $new_action=$(data);if($new_action.html()!=$action.html()){$action.replaceWith($new_action);}}});});},validate_button:function($form,disable_button){$form=$form||$(".table_wrapper > form");$form.each(function(){var $this=$(this);var $action_buttons=$this.find('.table_actions button[data-batch-action="true"]');var $more_dropdown=$this.find('.table_actions_menu > a.dropdown-toggle');if(disable_button===undefined){var checkboxes=$this.find(".table-row-multi-select");var checked=checkboxes.filter(":checked");disable_button=(checkboxes.length>0&&checked.length==0);}
$action_buttons.toggleClass("disabled",disable_button);$more_dropdown.toggleClass("disabled",disable_button);});},initialize_checkboxes_behavior:function(){$('.table_wrapper, #modal_wrapper').on('change','.table-row-multi-select',function(){var $this=$(this);var $table=$this.closest('table');var is_checked=$this.prop('checked');if($this.hasClass('multi-select-header')){$table.find('tbody tr:visible .table-row-multi-select').prop('checked',is_checked);}else{var $multi_select_checkbox=$table.find('.multi-select-header');var $checkboxes=$table.find('tbody .table-row-multi-select');var not_checked=$checkboxes.not(':checked').length;is_checked=$checkboxes.length!=not_checked;$multi_select_checkbox.prop('checked',not_checked==0);}
horizon.datatables.validate_button($this.closest('form'),!is_checked);});},initialize_table_tooltips:function(){$('div.table_wrapper').tooltip({selector:'[data-toggle="tooltip"]',container:'body'});},disable_actions_on_submit:function($form){$form=$form||$(".table_wrapper > form");$form.on("submit",function(){var $this=$(this);$this.attr('data-submitted','true');$this.find('td.actions_column button[type="submit"]').addClass("disabled");$this.addClass('wait');});}};horizon.datatables.confirm=function(action){var $action=$(action);if($action.hasClass("disabled")){return;}
var $uibModal_parent=$action.closest('.modal');var name_array=[];var action_string=$action.text();var help_text=$action.attr("help_text")||"";var name_string="";var $closest_tr=$action.closest("tr");var $data_display=$closest_tr.find('span[data-display]');if($data_display.length>0){name_string=' "'+$data_display.attr("data-display")+'"';name_array=[name_string];}else{var $device_window=$('div.topologyBalloon');var $device_table=$device_window.find('table.detailInfoTable').has('caption[data-display]');var $data_display=$device_table.find('caption[data-display]');if($data_display.length>0){name_string=' "'+$data_display.attr("data-display")+'"';name_array=[name_string];}}
var $closest_table=$action.closest("table");$data_display=$closest_table.find('tr[data-display]');if($data_display.length>0){var $actions_div=$action.closest("div");if($actions_div.hasClass("table_actions")||$actions_div.hasClass("table_actions_menu")){$data_display.has(".table-row-multi-select:checked").each(function(){name_array.push(" \""+$(this).attr("data-display")+"\"");});name_string=name_array.join(", ");}else{name_string=" \""+$action.closest("tr").attr("data-display")+"\"";name_array=[name_string];}}else{$data_display=$('dd[data-display]');if($data_display.length>0){name_string=' "'+$('dd[data-display]').attr("data-display")+'"';name_array=[name_string];}}
var title=interpolate(gettext("Confirm %s"),[action_string]);var template=horizon.templates.compiled_templates["#confirm_modal"],params={selection:name_string,selection_list:name_array,help:help_text};var body;try{body=$(template.render(params)).html();}catch(e){body=name_string+gettext("Please confirm your selection. ")+help_text;}
var actionNode=action.nodeType?action:action[0];var confirmCssClass=actionNode.className.indexOf("btn-danger")>=0?"btn-danger":"btn-primary";var modal=horizon.modals.create(title,body,action_string,"",confirmCssClass);modal.modal();if($uibModal_parent.length){var child_backdrop=modal.next('.modal-backdrop');child_backdrop.css('z-index',$uibModal_parent.css('z-index')+10);modal.css('z-index',child_backdrop.css('z-index')+10);}
modal.find('.'+confirmCssClass).click(function(){var $form=$action.closest('form');var el=document.createElement("input");el.type='hidden';el.name=$action.attr('name');el.value=$action.attr('value');$form.append(el).submit();modal.modal('hide');horizon.modals.modal_spinner(gettext("Working"));return false;});return modal;};$.tablesorter.addParser({id:'sizeSorter',is:function(){return false;},format:function(s){var sizes={BYTE:0,B:0,KB:1,MB:2,GB:3,TB:4,PB:5};var regex=/([\d\.,]+)\s*(byte|B|KB|MB|GB|TB|PB)+/i;var match=s.match(regex);if(match&&match.length===3){return parseFloat(match[1])*Math.pow(1024,sizes[match[2].toUpperCase()]);}
return parseInt(s,10);},type:'numeric'});$.tablesorter.addParser({id:'timesinceSorter',is:function(){return false;},format:function(s,table,cell){return $(cell).find('span').data('seconds');},type:'numeric'});$.tablesorter.addParser({id:"timestampSorter",is:function(){return false;},format:function(s){s=s.replace(/\-/g," ").replace(/:/g," ");s=s.replace("T"," ").replace("Z"," ");s=s.split(" ");return new Date(s[0],s[1],s[2],s[3],s[4],s[5]).getTime();},type:"numeric"});$.tablesorter.addParser({id:'IPv4Address',is:function(s,table,cell){var a=$(cell).find('li').first().text().split('.');if(a.length===1&&a[0]===''){a=s.split('.');}
if(a.length!==4){return false;}
for(var i=0;i<a.length;i++){if(isNaN(a[i])){return false;}
if((a[i]&0xFF)!=a[i]){return false;}}
return true;},format:function(s,table,cell){var result=0;var a=$(cell).find('li').first().text().split('.');if(a.length===1&&a[0]===''){a=s.split('.');}
var last_index=a.length-1;for(var i=0;i<a.length;i++){var shift=8*(last_index-i);result+=((parseInt(a[i],10)<<shift)>>>0);}
return result;},type:'numeric'});horizon.datatables.disable_buttons=function(){$("table .table_actions").on("click",".btn.disabled",function(event){event.preventDefault();event.stopPropagation();});};$.tablesorter.addParser({id:'uuid',is:function(){return false;},format:function(s){s=s.toUpperCase();var value=0.0;for(var i=0;i<s.length;i++){var char_offset=1.0/Math.pow(100,i);value=value+(s.charCodeAt(i)*char_offset);}
return value;},type:'numeric'});horizon.datatables.update_footer_count=function(el,modifier){var $el=$(el),$browser,$header,$footer,row_count,footer_text_template,footer_text;if(!modifier){modifier=0;}
$browser=$el.closest("#browser_wrapper");if($browser.length){$footer=$browser.find('.tfoot span.content_table_count');}
else{$header=$el.find('thead span.table_count');$footer=$el.find('tfoot span.table_count');}
row_count=$el.find('tbody tr:visible').length+modifier-$el.find('.empty').length;if(row_count){footer_text_template=ngettext("Displaying %s item","Displaying %s items",row_count);footer_text=interpolate(footer_text_template,[row_count]);}else{footer_text='';}
if($header){$header.text(footer_text);}
$footer.text(footer_text);return row_count;};horizon.datatables.add_no_results_row=function(table){var template=horizon.templates.compiled_templates["#empty_row_template"];if(!table.find("tbody tr:visible").length&&typeof(template)!=="undefined"){var colspan=table.find('.table_column_header th').length;var params={"colspan":colspan,no_items_label:gettext("No items to display.")};table.find("tbody").append(template.render(params));}};horizon.datatables.remove_no_results_row=function(table){table.find("tr.empty").remove();};horizon.datatables.fix_row_striping=function(table){table.trigger('applyWidgetId',['zebra']);};horizon.datatables.set_table_sorting=function(parent){$(parent).find("table.datatable").each(function(){var $table=$(this),header_options={};if($table.find('tbody tr').not('.empty').length>1){$table.find("thead th[class!='table_header']").each(function(i){var $th=$(this);if(!$th.hasClass('sortable')){header_options[i]={sorter:false};}else if($th.data('type')==='size'){header_options[i]={sorter:'sizeSorter'};}else if($th.data('type')==='ip'){header_options[i]={sorter:'IPv4Address'};}else if($th.data('type')==='timesince'){header_options[i]={sorter:'timesinceSorter'};}else if($th.data('type')==='timestamp'){header_options[i]={sorter:'timestampSorter'};}else if($th.data('type')=='uuid'){header_options[i]={sorter:'uuid'};}});$table.tablesorter({headers:header_options,widgets:['zebra'],selectorHeaders:"thead th[class!='table_header']",cancelSelection:false,emptyTo:'none',headerTemplate:'{content}{icon}',cssIcon:'table-sort-indicator'});}});};horizon.datatables.add_table_checkboxes=function($parent){$($parent).find('table thead .multi_select_column').each(function(){var $thead=$(this);if(!$thead.find('.table-row-multi-select').length&&$thead.parents('table').find('tbody .table-row-multi-select').length){var $container=$(document.createElement('div')).addClass('themable-checkbox');var $input=$(document.createElement('input')).attr('type','checkbox').addClass('table-row-multi-select multi-select-header').uniqueId().appendTo($container);$(document.createElement('label')).attr('for',$input.attr('id')).appendTo($container);$thead.append($container);}});};horizon.datatables.set_table_query_filter=function(parent){horizon.datatables.qs={};$(parent).find('table').each(function(index,elm){var input=$($(elm).find('div.table_search.client input')),table_selector;if(input.length>0){input.on('keypress',function(evt){if(evt.keyCode===13){return false;}});input.next('button.btn span.search-icon').on('click keypress',function(){return false;});table_selector='table#'+$(elm).attr('id');var qs=input.quicksearch(table_selector+' tbody tr',{'delay':300,'loader':'span.loading','bind':'keyup','show':this.show,'hide':this.hide,onBefore:function(){var table=$(table_selector);horizon.datatables.remove_no_results_row(table);},onAfter:function(){var table=$(table_selector);horizon.datatables.update_footer_count(table);horizon.datatables.add_no_results_row(table);horizon.datatables.fix_row_striping(table);},prepareQuery:function(val){return new RegExp(horizon.string.escapeRegex(val),"i");},testQuery:function(query,txt,_row){return query.test($(_row).find('td:not(.hidden):not(.actions_column)').text());}});horizon.datatables.qs[$(elm).attr('id')]=qs;}});};horizon.datatables.set_table_fixed_filter=function(parent){$(parent).find('table.datatable').each(function(index,elm){$(elm).on('click','div.table_filter button',function(evt){$(elm).find('div.table_filter button').each(function(index,btn){$(btn).removeClass('active');});var table=$(elm);var category=$(this).val();evt.preventDefault();horizon.datatables.remove_no_results_row(table);table.find('tbody tr').hide();table.find('tbody tr.category-'+category).show();horizon.datatables.update_footer_count(table);horizon.datatables.add_no_results_row(table);horizon.datatables.fix_row_striping(table);});$(elm).find('div.table_filter button').each(function(i,button){if($(button).text().indexOf(' (0)')===-1){$(button).trigger('click');return false;}});});};horizon.addInitFunction(horizon.datatables.init=function(){horizon.datatables.validate_button();horizon.datatables.disable_buttons();$('table.datatable').each(function(idx,el){horizon.datatables.update_footer_count($(el),0);});horizon.datatables.initialize_checkboxes_behavior();horizon.datatables.initialize_table_tooltips();var $body=$('body');horizon.datatables.add_table_checkboxes($body);horizon.datatables.set_table_sorting($body);horizon.datatables.set_table_query_filter($body);horizon.datatables.set_table_fixed_filter($body);horizon.datatables.disable_actions_on_submit();horizon.modals.addModalInitFunction(horizon.datatables.add_table_checkboxes);horizon.modals.addModalInitFunction(horizon.datatables.set_table_sorting);horizon.modals.addModalInitFunction(horizon.datatables.set_table_query_filter);horizon.modals.addModalInitFunction(horizon.datatables.set_table_fixed_filter);horizon.modals.addModalInitFunction(horizon.datatables.initialize_table_tooltips);horizon.modals.addModalInitFunction(function modalInitActionDisable(modal){horizon.datatables.disable_actions_on_submit($(modal).find(".table_wrapper > form"));});horizon.tabs.addTabLoadFunction(horizon.datatables.add_table_checkboxes);horizon.tabs.addTabLoadFunction(horizon.datatables.set_table_sorting);horizon.tabs.addTabLoadFunction(horizon.datatables.set_table_query_filter);horizon.tabs.addTabLoadFunction(horizon.datatables.set_table_fixed_filter);horizon.tabs.addTabLoadFunction(horizon.datatables.initialize_checkboxes_behavior);horizon.tabs.addTabLoadFunction(horizon.datatables.initialize_table_tooltips);horizon.tabs.addTabLoadFunction(function(tab){horizon.datatables.validate_button($(tab).find(".table_wrapper > form"));horizon.datatables.disable_actions_on_submit($(tab).find(".table_wrapper > form"));});horizon.datatables.update();});horizon.inline_edit={get_cell_id:function(td_element){return[td_element.parents("tr").first().data("object-id"),"__",td_element.data("cell-name")].join('');},get_object_container:function(){if(!window.cell_object_container){window.cell_object_container=[];}
return window.cell_object_container;},get_cell_object:function(td_element){var cell_id=horizon.inline_edit.get_cell_id(td_element);var id="cell__"+cell_id;var container=horizon.inline_edit.get_object_container(td_element);var cell_object;if(container&&container[id]){cell_object=container[id];cell_object.reset_with(td_element);return cell_object;}else{cell_object=new horizon.inline_edit.Cell(td_element);container[id]=cell_object;return cell_object;}},Cell:function(td_element){var self=this;self.reset_with=function(td_element){self.td_element=td_element;self.form_element=td_element.find("input, textarea");self.url=td_element.data('update-url');self.inline_edit_mod=false;self.successful_update=false;};self.reset_with(td_element);self.refresh=function(){horizon.ajax.queue({url:self.url,data:{'inline_edit_mod':self.inline_edit_mod},beforeSend:function(){self.start_loading();},complete:function(){$(".tooltip.fade.top.in").remove();self.stop_loading();if(self.successful_update){var success=$('<div class="success"></div>');self.td_element.find('.inline-edit-status').append(success);self.td_element.addClass("no-transition");self.td_element.addClass("success");self.td_element.removeClass("no-transition");self.td_element.removeClass("inline_edit_available");success.fadeOut(1300,function(){self.td_element.addClass("inline_edit_available");self.td_element.removeClass("success");});}},error:function(jqXHR){if(jqXHR.status===401){var redir_url=jqXHR.getResponseHeader("X-Horizon-Location");if(redir_url){location.href=redir_url;}else{horizon.toast.add("error",gettext("Not authorized to do this operation."));}}
else{if(!horizon.ajax.get_messages(jqXHR)){horizon.toast.add("error",gettext("An error occurred. Please try again later."));}}},success:function(data){var $td_element=$(data);var $tr,$cell_wrapper,td_element_text;self.form_element=self.get_form_element($td_element);if(self.inline_edit_mod){var cellWidth=self.td_element.outerWidth(true);$td_element.width(cellWidth);$td_element.addClass("has-form");}
self.cached_presentation_view=self.td_element;self.rewrite_cell($td_element);$tr=$td_element.closest('tr');if($td_element.attr('data-cell-name')===$tr.attr('data-display-key')){$cell_wrapper=$td_element.find('.table_cell_data_wrapper');if($cell_wrapper.length){td_element_text=$cell_wrapper.find('a').text();if($tr.attr('data-display')!==td_element_text){$tr.attr('data-display',td_element_text);}}}
if(self.inline_edit_mod){self.form_element.focus();}}});};self.update=function(post_data){horizon.ajax.queue({type:'POST',url:self.url,data:post_data,beforeSend:function(){self.start_loading();},complete:function(){if(!self.successful_update){self.stop_loading();}},error:function(jqXHR){if(jqXHR.status===400){if(self.td_element.find(".inline-edit-error .error").length<=0){self.form_element.css('padding-left','20px');self.form_element.width(self.form_element.width()-20);}
var error_message=$.parseJSON(jqXHR.responseText).message;var error=$('<div title="'+error_message+'" class="error"></div>');self.td_element.find(".inline-edit-error").html(error);error.tooltip({'placement':'top'});}
else if(jqXHR.status===401){var redir_url=jqXHR.getResponseHeader("X-Horizon-Location");if(redir_url){location.href=redir_url;}else{horizon.toast.add("error",gettext("Not authorized to do this operation."));}}
else{if(!horizon.ajax.get_messages(jqXHR)){horizon.toast.add("error",gettext("An error occurred. Please try again later."));}}},success:function(){self.successful_update=true;self.refresh();}});};self.cancel=function(){self.rewrite_cell(self.cached_presentation_view);self.stop_loading();};self.get_form_element=function(td_element){return td_element.find("input, textarea");};self.rewrite_cell=function(td_element){self.td_element.replaceWith(td_element);self.td_element=td_element;};self.start_loading=function(){self.td_element.addClass("no-transition");var spinner=$('<div class="loading"></div>');self.td_element.find('.inline-edit-status').append(spinner);self.td_element.addClass("loading");self.td_element.removeClass("inline_edit_available");self.get_form_element(self.td_element).attr("disabled","disabled");};self.stop_loading=function(){self.td_element.find('div.inline-edit-status div.loading').remove();self.td_element.removeClass("loading");self.td_element.addClass("inline_edit_available");self.get_form_element(self.td_element).removeAttr("disabled");};}};horizon.addInitFunction(horizon.inline_edit.init=function(parent){parent=parent||document;var $table=$(parent).find('table');$table.on('click','.ajax-inline-edit',function(evt){var $this=$(this);var td_element=$this.parents('td').first();var cell=horizon.inline_edit.get_cell_object(td_element);cell.inline_edit_mod=true;cell.refresh();evt.preventDefault();});var submit_form=function(evt,el){var $submit=$(el);var td_element=$submit.parents('td').first();var post_data=$submit.parents('form').first().serialize();var cell=horizon.inline_edit.get_cell_object(td_element);cell.update(post_data);evt.preventDefault();};$table.on('click','.inline-edit-submit',function(evt){submit_form(evt,this);});$table.on('keypress','.inline-edit-form',function(evt){if(evt.which===13&&!evt.shiftKey){submit_form(evt,this);}});$table.on('click','.inline-edit-cancel',function(evt){var $cancel=$(this);var td_element=$cancel.parents('td').first();var cell=horizon.inline_edit.get_cell_object(td_element);cell.cancel();evt.preventDefault();});$table.on('mouseenter','.inline_edit_available',function(){$(this).find(".table_cell_action").fadeIn(100);});$table.on('mouseleave','.inline_edit_available',function(){$(this).find(".table_cell_action").fadeOut(200);});});horizon.tabs={_init_load_functions:[]};horizon.tabs.addTabLoadFunction=function(f){horizon.tabs._init_load_functions.push(f);};horizon.tabs.initTabLoad=function($tab){$tab.removeClass('tab-loading');$(horizon.tabs._init_load_functions).each(function(index,f){f($tab);});recompileAngularContent($tab);};horizon.tabs.load_tab=function(){var $this=$(this),tab_id=$this.attr('data-target'),$tab_pane=$(tab_id);var $template=horizon.loader.inline(gettext('Loading'));$tab_pane.append($template).addClass('tab-loading');if(window.location.search.length>0){$tab_pane.load(window.location.search+"&tab="+tab_id.replace('#',''),function(){horizon.tabs.initTabLoad($tab_pane);});}else{$tab_pane.load("?tab="+tab_id.replace('#',''),function(){horizon.tabs.initTabLoad($tab_pane);});}
$this.attr("data-loaded","true");};horizon.addInitFunction(horizon.tabs.init=function(){var data=horizon.cookies.getObject("tabs")||{};$(".tab-content").find(".js-tab-pane").addClass("tab-pane");horizon.modals.addModalInitFunction(function(el){$(el).find(".js-tab-pane").addClass("tab-pane");});var $document=$(document);$document.on("show.bs.tab",".ajax-tabs a[data-loaded='false']",horizon.tabs.load_tab);$document.on("shown.bs.tab",".nav-tabs a[data-toggle='tab']",function(evt){var $tab=$(evt.target),$content=$($(evt.target).attr('data-target'));$content.find("table.datatable").each(function(){horizon.datatables.update_footer_count($(this));});if($content.find(".d3-container").length){window.dispatchEvent(new Event('resize'));}
data[$tab.closest(".nav-tabs").attr("id")]=$tab.attr('data-target');horizon.cookies.putObject("tabs",data);});$(".nav-tabs[data-sticky-tabs='sticky']").each(function(){var $this=$(this),id=$this.attr("id"),active_tab=data[id];if(active_tab&&window.location.search.indexOf("tab=")<0){$this.find("a[data-target='"+active_tab+"']").tab('show');}});$(".tab-content").on("keydown",".tab-pane :input:visible:last",function(evt){var $this=$(this),next_pane=$this.closest(".tab-pane").next(".tab-pane");if(evt.which===9&&!evt.shiftKey&&next_pane.length){evt.preventDefault();$(".nav-tabs a[data-target='#"+next_pane.attr("id")+"']").tab('show');}});$(".tab-content").on("keydown",".tab-pane :input:visible:first",function(evt){var $this=$(this),prev_pane=$this.closest(".tab-pane").prev(".tab-pane");if(evt.shiftKey&&evt.which===9&&prev_pane.length){evt.preventDefault();$(".nav-tabs a[data-target='#"+prev_pane.attr("id")+"']").tab('show');prev_pane.find(":input:last").focus();}});$document.on("focus",".tab-content :input",function(){var $this=$(this),tab_pane=$this.closest(".tab-pane"),tab_id=tab_pane.attr('id');if(!tab_pane.hasClass("active")){$(".nav-tabs a[data-target='#"+tab_id+"']").tab('show');}});});horizon.tabs.addTabLoadFunction(horizon.inline_edit.init);horizon.templates={template_ids:["#modal_template","#empty_row_template","#alert_message_template","#loader-modal","#loader-inline","#membership_template","#confirm_modal","#progress-modal"],compiled_templates:{}};horizon.templates.compile_templates=function(id){if(id){horizon.templates.compiled_templates[id]=Hogan.compile($(id).html());}else{horizon.templates.compiled_templates=$.isEmptyObject(horizon.templates.compiled_templates)?{}:horizon.templates.compiled_templates;$.each(horizon.templates.template_ids,function(ind,template_id){if(!(template_id in horizon.templates.compiled_templates)){horizon.templates.compiled_templates[template_id]=Hogan.compile($(template_id).html());}});}};horizon.templates.compile=function(id,context){var template=horizon.templates.compiled_templates[id];if(!template){horizon.templates.compile_templates(id);template=horizon.templates.compiled_templates[id];}
return $(template.render(context));};horizon.addInitFunction(horizon.templates.init=function(){horizon.templates.compile_templates();});horizon.user={init:function(){$("#id_password").change(function(){if($("#id_confirm_password").val()!==""){horizon.user.check_passwords_match();}});$("#id_confirm_password").change(function(){horizon.user.check_passwords_match();});},check_passwords_match:function(){var row=$("input#id_confirm_password");var error_id="id_confirm_password_error";var msg="<span id='"+error_id+"' class='help-block'>"+gettext("Passwords do not match.")+"</span>";var password=$("#id_password").val();var confirm_password=$("#id_confirm_password").val();if(password!==confirm_password&&$("#"+error_id).length===0){$(row).parent().addClass("has-error").append(msg);}else if(password===confirm_password){$(row).parent().removeClass("has-error");$("#"+error_id).remove();}}};horizon.membership={current_membership:[],data:[],roles:[],has_roles:[],default_role_id:[],get_field_id:function(id_string){return id_string.slice(id_string.lastIndexOf("_")+1);},get_member_id:function(id_string,step_slug){return id_string.slice(id_string.indexOf(step_slug)+step_slug.length+1);},get_role_element:function(step_slug,role_id){return $('select[id^="id_'+step_slug+'_role_'+role_id+'"]');},get_member_element:function(step_slug,data_id){return $('li[data-'+step_slug+'-id$='+data_id+']').parent();},init_properties:function(step_slug){horizon.membership.has_roles[step_slug]=$("."+step_slug+"_membership").data('show-roles')!=="False";horizon.membership.default_role_id[step_slug]=$('#id_default_'+step_slug+'_role').attr('value');horizon.membership.init_data_list(step_slug);horizon.membership.init_role_list(step_slug);horizon.membership.init_current_membership(step_slug);},init_data_list:function(step_slug){horizon.membership.data[step_slug]=[];angular.forEach($(this.get_role_element(step_slug,"")).find("option"),function(option){horizon.membership.data[step_slug][option.value]=option.text;});},init_role_list:function(step_slug){horizon.membership.roles[step_slug]=[];angular.forEach($('label[for^="id_'+step_slug+'_role_"]'),function(role){var id=horizon.membership.get_field_id($(role).attr('for'));horizon.membership.roles[step_slug][id]=$(role).text();});},init_current_membership:function(step_slug){horizon.membership.current_membership[step_slug]=[];var members_list=[];var role_id,selected_members;angular.forEach(this.get_role_element(step_slug,''),function(value){role_id=horizon.membership.get_field_id($(value).attr('id'));selected_members=$(value).find("option:selected");members_list=[];if(selected_members){angular.forEach(selected_members,function(member){members_list.push(member.value);});}
horizon.membership.current_membership[step_slug][role_id]=members_list;});},get_member_roles:function(step_slug,data_id){var roles=[];for(var role in horizon.membership.current_membership[step_slug]){if($.inArray(data_id,horizon.membership.current_membership[step_slug][role])!==-1){roles.push(role);}}
return roles;},update_role_lists:function(step_slug,role_id,new_list){this.get_role_element(step_slug,role_id).val(new_list);horizon.membership.current_membership[step_slug][role_id]=new_list;},remove_member:function(step_slug,data_id,role_id,role_list){var index=role_list.indexOf(data_id);if(index>=0){role_list.splice(index,1);horizon.membership.update_role_lists(step_slug,role_id,role_list);}},remove_member_from_role:function(step_slug,data_id,role_id){var role,membership=horizon.membership.current_membership[step_slug];if(role_id){horizon.membership.remove_member(step_slug,data_id,role_id,membership[role_id]);}
else{for(role in membership){if(membership.hasOwnProperty(role)){horizon.membership.remove_member(step_slug,data_id,role,membership[role]);}}}},add_member_to_role:function(step_slug,data_id,role_id){var role_list=horizon.membership.current_membership[step_slug][role_id];role_list.push(data_id);horizon.membership.update_role_lists(step_slug,role_id,role_list);},update_member_role_dropdown:function(step_slug,data_id,role_ids,member_el){if(typeof(role_ids)==='undefined'){role_ids=horizon.membership.get_member_roles(step_slug,data_id);}
if(typeof(member_el)==='undefined'){member_el=horizon.membership.get_member_element(step_slug,data_id);}
var $dropdown=member_el.find("li.member").siblings('.dropdown');var $role_items=$dropdown.children('.role_dropdown').children('li');$role_items.each(function(idx,el){if($.inArray(($(el).data('role-id')),role_ids)!==-1){$(el).addClass('selected');}else{$(el).removeClass('selected');}});var $roles_display=$dropdown.children('.dropdown-toggle').children('.roles_display');var roles_to_display=[];for(var i=0;i<role_ids.length;i++){roles_to_display.push(horizon.membership.roles[step_slug][role_ids[i]]);}
var text=roles_to_display.join(', ');if(text.length===0){text=gettext('No roles');}
$roles_display.text(text);},generate_member_element:function(step_slug,display_name,data_id,role_ids,text){var roles=[],that=this,membership_roles=that.roles[step_slug],r;for(r in membership_roles){if(membership_roles.hasOwnProperty(r)){roles.push({role_id:r,role_name:membership_roles[r]});}}
var template=horizon.templates.compiled_templates["#membership_template"],params={data_id:"id_"+step_slug+"_"+data_id,step_slug:step_slug,default_role:that.roles[that.default_role_id[step_slug]],display_name:display_name,text:text,roles:roles,roles_label:gettext("Roles")},member_el=$(template.render(params));this.update_member_role_dropdown(step_slug,params.data_id,role_ids,member_el);return $(member_el);},generate_html:function(step_slug){var data_id,data=horizon.membership.data[step_slug];for(data_id in data){if(data.hasOwnProperty(data_id)){var display_name=data[data_id];var role_ids=this.get_member_roles(step_slug,data_id);if(role_ids.length>0){$("."+step_slug+"_members").append(this.generate_member_element(step_slug,display_name,data_id,role_ids,"-"));}
else{$(".available_"+step_slug).append(this.generate_member_element(step_slug,display_name,data_id,role_ids,"+"));}}}
horizon.membership.detect_no_results(step_slug);},update_membership:function(step_slug){$(".available_"+step_slug+", ."+step_slug+"_members").on('click',".btn-group a[href='#add_remove']",function(evt){evt.preventDefault();var available=$(".available_"+step_slug).has($(this)).length;var data_id=horizon.membership.get_member_id($(this).parent().siblings().attr('data-'+step_slug+'-id'),step_slug);var member_el=$(this).parent().parent();if(available){var default_role=horizon.membership.default_role_id[step_slug];$(this).text("-");$("."+step_slug+"_members").append(member_el);horizon.membership.add_member_to_role(step_slug,data_id,default_role);if(horizon.membership.has_roles[step_slug]){$(this).parent().siblings(".role_options").show();horizon.membership.update_member_role_dropdown(step_slug,data_id,[default_role],member_el);}}
else{$(this).text("+");$(this).parent().siblings(".role_options").hide();$(".available_"+step_slug).append(member_el);horizon.membership.remove_member_from_role(step_slug,data_id);}
horizon.membership.list_filtering(step_slug);horizon.membership.detect_no_results(step_slug);$("input."+step_slug+"_filter").trigger("keyup");});},detect_no_results:function(step_slug){$('.'+step_slug+'_filterable').each(function(){var css_class=$(this).find('ul').attr('class');var filter=$.grep(css_class.split(' '),function(val){return val.indexOf(step_slug)!==-1;})[0];if(!$('.'+filter).children('ul').length){$('#no_'+filter).show();$("input[id='"+filter+"']").attr('disabled','disabled');}
else{$('#no_'+filter).hide();$("input[id='"+filter+"']").removeAttr('disabled');}});},select_member_role:function(step_slug){$(".available_"+step_slug+", ."+step_slug+"_members").on('click','.role_dropdown li',function(evt){evt.preventDefault();evt.stopPropagation();var new_role_id=$(this).attr("data-role-id");var id_str=$(this).parent().parent().siblings(".member").attr("data-"+step_slug+"-id");var data_id=horizon.membership.get_member_id(id_str,step_slug);if($(this).hasClass('selected')){$(this).removeClass('selected');horizon.membership.remove_member_from_role(step_slug,data_id,new_role_id);}else{$(this).addClass('selected');horizon.membership.add_member_to_role(step_slug,data_id,new_role_id);}
horizon.membership.update_member_role_dropdown(step_slug,data_id);});},add_new_member:function(step_slug){$("select[id='id_new_"+step_slug+"']").on('change',function(){var display_name=$(this).find("option").text();var data_id=$(this).find("option").attr("value");var default_role_id=horizon.membership.default_role_id[step_slug];$("."+step_slug+"_members").append(horizon.membership.generate_member_element(step_slug,display_name,data_id,[default_role_id],"-"));horizon.membership.data[step_slug][data_id]=display_name;$("select[multiple='multiple']").append("<option value='"+data_id+"'>"+horizon.membership.data[step_slug][data_id]+"</option>");horizon.membership.add_member_to_role(step_slug,data_id,default_role_id);$(this).text("");horizon.membership.list_filtering(step_slug);horizon.membership.detect_no_results(step_slug);$("input.filter").val("");$("."+step_slug+"_members .btn-group").removeClass('last_stripe');$("."+step_slug+"_members .btn-group:last").addClass('last_stripe');});},add_new_member_styling:function(step_slug){var add_member_el=$("label[for='id_new_"+step_slug+"']").parent();$(add_member_el).find("select").hide();$("#add_"+step_slug).append($(add_member_el));$(add_member_el).addClass("add_"+step_slug);$(add_member_el).find("label, .input").addClass("add_"+step_slug+"_btn");},fix_stripes:function(step_slug){$('.fake_'+step_slug+'_table').each(function(){var filter="."+$(this).attr('id');var visible=" .btn-group:visible";var even=" .btn-group:visible:even";var last=" .btn-group:visible:last";$(filter+visible).removeClass('dark_stripe');$(filter+visible).addClass('light_stripe');$(filter+even).removeClass('light_stripe');$(filter+even).addClass('dark_stripe');$(filter+visible).removeClass('last_stripe');$(filter+last).addClass('last_stripe');});},list_filtering:function(step_slug){$('input.'+step_slug+'_filter').unbind();$('.'+step_slug+'_filterable').each(function(){var css_class=$(this).children().children('ul').attr('class');var filter=$.grep(css_class.split(' '),function(val){return val.indexOf(step_slug)!==-1;})[0];var input=$("input[id='"+filter+"']");input.quicksearch('ul.'+filter+' ul li span.display_name',{'delay':200,'loader':'span.loading','show':function(){$(this).parent().parent().show();if(filter==="available_"+step_slug){$(this).parent('.dropdown-toggle').hide();}},'hide':function(){$(this).parent().parent().hide();},'noResults':'ul#no_'+filter,'onAfter':function(){horizon.membership.fix_stripes(step_slug);},'prepareQuery':function(val){return new RegExp(horizon.string.escapeRegex(val),"i");},'testQuery':function(query,txt,span){if($(input).attr('id')===filter){$(input).prev().removeAttr('disabled');return query.test($(span).text());}else{return true;}}});});},workflow_init:function(modal,step_slug,step_id){$(modal).find('form').each(function(){var $form=$(this);if($form.find('div.'+step_slug+'_membership').length===0){return;}
horizon.membership.init_properties(step_slug);horizon.membership.generate_html(step_slug);horizon.membership.update_membership(step_slug);horizon.membership.select_member_role(step_slug);horizon.membership.add_new_member(step_slug);$form.find(".available_"+step_slug+" .role_options").hide();if(!horizon.membership.has_roles[step_slug]){$form.find("."+step_slug+"_members .role_options").hide();}
if(step_id.indexOf('update')===0){$form.find("#"+step_id+" input").blur();}
$form.find('.'+step_slug+'_membership').keydown(function(event){if(event.keyCode===13){event.preventDefault();return false;}});horizon.membership.add_new_member_styling(step_slug);horizon.membership.list_filtering(step_slug);horizon.membership.detect_no_results(step_slug);$form.find('.fake_'+step_slug+'_table').each(function(){var filter="."+$(this).attr('id');$(filter+' .btn-group:even').addClass('dark_stripe');$(filter+' .btn-group:last').addClass('last_stripe');});});}};var WIDTH=100;var HEIGHT=100;var RADIUS=45;function create_vis(chart){return d3.select(chart).append("svg:svg").attr("class","chart legacy-pie-chart").attr("viewBox","0 0 "+WIDTH+" "+HEIGHT).append("g").attr("transform","translate("+(WIDTH/2)+","+(HEIGHT/2)+")");}
function create_arc(){return d3.svg.arc().outerRadius(RADIUS).innerRadius(0);}
function create_pie(param){return d3.layout.pie().sort(null).value(function(d){return d[param];});}
horizon.d3_pie_chart_usage={init:function(){var self=this;var pie_chart_data=$(".pie-chart-usage");self.chart=d3.selectAll(".pie-chart-usage");for(var i=0;i<pie_chart_data.length;i++){var data=$(pie_chart_data[i]).data("used");if(data[1]===true){self.data=data[0];self.pieChart(i,false);}else{var used=Math.min(parseInt(data,10),100);self.data=[{"percentage":used},{"percentage":100-used}];self.pieChart(i,true);}}},pieChart:function(i,fill){var self=this;var vis=create_vis(self.chart[0][i]);var arc=create_arc();var pie=create_pie("percentage");vis.selectAll(".arc").data(pie([{"percentage":10}])).enter().append("path").attr("class","arc").attr("d",arc);var animate=function(data){vis.selectAll(".arc").data(pie(data)).enter().append("path").attr("class",function(){var ret_val="arc inner";if(self.data[0].percentage>=100){ret_val+=" FULL";}else if(self.data[0].percentage>=80){ret_val+=" NEARLY_FULL";}
return ret_val;}).attr("d",arc).transition().duration(500).attrTween("d",function(start){start.endAngle=start.startAngle=0;var end={startAngle:0,endAngle:2*Math.PI*(100-start.value)/100};var tween=d3.interpolate(start,end);return function(t){return arc(tween(t));};});};var show_numbers=function(){vis.append("text").attr("class","chart-numbers").attr('text-anchor','middle').attr('dominant-baseline','central').text(self.data);};if(fill){animate(self.data);}else{show_numbers(self.data);}}};horizon.d3_pie_chart_distribution={init:function(){var self=this;var pie_chart_data=$(".pie-chart-distribution");self.chart=d3.selectAll(".pie-chart-distribution");for(var i=0;i<pie_chart_data.length;i++){var parts=$(pie_chart_data[i]).data("used").split("|");self.data=[];self.keys=[];for(var j=0;j<parts.length;j++){var key_value=parts[j].split("=");var d={key:key_value[0],value:key_value[1]};self.data.push(d);self.keys.push(key_value[0]);}
self.pieChart(i,$(pie_chart_data[i]));}},pieChart:function(i,$elem){var self=this;var vis=create_vis(self.chart[0][i]);var arc=create_arc();var pie=create_pie("value");var total=0;for(var j=0;j<self.data.length;j++){total=total+parseInt(self.data[j].value,10);}
var initial_data=[];if(total===0){initial_data=[{"value":1}];}
vis.selectAll(".arc").data(pie(initial_data)).enter().append("path").attr("class","arc").attr("d",arc);var animate=function(data){vis.selectAll(".arc").data(pie(data)).enter().append("path").attr("class","arc inner").attr("d",arc).transition().duration(500).attrTween("d",function(start){start.endAngle=start.startAngle;var end=jQuery.extend({},start);end.endAngle=end.startAngle+2*Math.PI/total*end.value;var tween=d3.interpolate(start,end);return function(t){return arc(tween(t));};});};if(total!==0){animate(self.data);}
var $legend=$(document.createElement('div')).addClass('legend');var total=0;for(var j=0;j<self.data.length;j++){self.data[j].value=parseFloat(self.data[j].value);total+=self.data[j].value;}
for(var j=0;j<self.data.length;j++){var this_item=self.data[j];var $this_group=$(document.createElement('div')).addClass('legend-group').appendTo($legend);$(document.createElement('span')).addClass('legend-symbol').appendTo($this_group);$(document.createElement('span')).addClass('legend-key').text(this_item.key).appendTo($this_group);var $this_value=$(document.createElement('span')).addClass('legend-value');if(this_item.value===0){$this_item.text("0%");}else{$this_value.text(Math.round((this_item.value/total)*100)+"%");}
$this_value.appendTo($this_group);}
$elem.append($legend);}};horizon.addInitFunction(function(){horizon.d3_pie_chart_usage.init();horizon.d3_pie_chart_distribution.init();});var container="#heat_resource_topology";function update(){node=node.data(nodes,function(d){return d.name;});link=link.data(links);var nodeEnter=node.enter().append("g").attr("class","node").attr("node_name",function(d){return d.name;}).attr("node_id",function(d){return d.instance;}).call(force.drag);nodeEnter.append("image").attr("xlink:href",function(d){return d.image;}).attr("id",function(d){return"image_"+d.name;}).attr("x",function(d){return d.image_x;}).attr("y",function(d){return d.image_y;}).attr("width",function(d){return d.image_size;}).attr("height",function(d){return d.image_size;});node.exit().remove();link.enter().insert("svg:line","g.node").attr("class","link").style("stroke-width",function(d){return Math.sqrt(d.value);});link.exit().remove();node.on("mouseover",function(d){$("#info_box").html(d.info_box);});node.on("mouseout",function(){$("#info_box").html('');});force.start();}
function tick(){link.attr("x1",function(d){return d.source.x;}).attr("y1",function(d){return d.source.y;}).attr("x2",function(d){return d.target.x;}).attr("y2",function(d){return d.target.y;});node.attr("transform",function(d){return"translate("+d.x+","+d.y+")";});}
function set_in_progress(stack,nodes){if(stack.in_progress===true){in_progress=true;}
for(var i=0;i<nodes.length;i++){var d=nodes[i];if(d.in_progress===true){in_progress=true;return false;}}}
function findNode(name){for(var i=0;i<nodes.length;i++){if(nodes[i].name===name){return nodes[i];}}}
function findNodeIndex(name){for(var i=0;i<nodes.length;i++){if(nodes[i].name===name){return i;}}}
function addNode(node){nodes.push(node);needs_update=true;}
function removeNode(name){var i=0;var n=findNode(name);while(i<links.length){if(links[i].source===n||links[i].target===n){links.splice(i,1);}else{i++;}}
nodes.splice(findNodeIndex(name),1);needs_update=true;}
function remove_nodes(old_nodes,new_nodes){for(var i=0;i<old_nodes.length;i++){var remove_node=true;for(var j=0;j<new_nodes.length;j++){if(old_nodes[i].name===new_nodes[j].name){remove_node=false;break;}}
if(remove_node===true){removeNode(old_nodes[i].name);}}}
function build_links(){for(var i=0;i<nodes.length;i++){build_node_links(nodes[i]);build_reverse_links(nodes[i]);}}
function build_node_links(node){for(var j=0;j<node.required_by.length;j++){var push_link=true;var target_idx='';var source_idx=findNodeIndex(node.name);try{target_idx=findNodeIndex(node.required_by[j]);}catch(err){push_link=false;}
for(var lidx=0;lidx<links.length;lidx++){if(links[lidx].source===source_idx&&links[lidx].target===target_idx){push_link=false;break;}}
if(push_link===true&&(source_idx&&target_idx)){links.push({'source':source_idx,'target':target_idx,'value':1});}}}
function build_reverse_links(node){for(var i=0;i<nodes.length;i++){if(nodes[i].required_by){for(var j=0;j<nodes[i].required_by.length;j++){var dependency=nodes[i].required_by[j];if(node.name===dependency){links.push({'source':findNodeIndex(nodes[i].name),'target':findNodeIndex(node.name),'value':1});}}}}}
function ajax_poll(poll_time){setTimeout(function(){$.getJSON(ajax_url,function(json){$("#d3_data").attr("data-d3_data",JSON.stringify(json));$("#stack_box").html(json.stack.info_box);set_in_progress(json.stack,json.nodes);needs_update=false;remove_nodes(nodes,json.nodes);json.nodes.forEach(function(d){var current_node=findNode(d.name);if(current_node){current_node.status=d.status;if(current_node.image!==d.image){current_node.image=d.image;var this_image=d3.select("#image_"+current_node.name);this_image.transition().attr("x",function(d){return d.image_x+5;}).duration(100).transition().attr("x",function(d){return d.image_x-5;}).duration(100).transition().attr("x",function(d){return d.image_x+5;}).duration(100).transition().attr("x",function(d){return d.image_x-5;}).duration(100).transition().attr("xlink:href",d.image).transition().attr("x",function(d){return d.image_x;}).duration(100).ease("bounce");}
current_node.info_box=d.info_box;}else{addNode(d);build_links();}});if(needs_update===true){update();}});if(in_progress===false){poll_time=30000;}
else{poll_time=3000;}
ajax_poll(poll_time);},poll_time);}
if($(container).length){var width=$(container).width(),height=500,stack_id=$("#stack_id").data("stack_id"),ajax_url=WEBROOT+'project/stacks/get_d3_data/'+stack_id+'/',graph=$("#d3_data").data("d3_data"),force=d3.layout.force().nodes(graph.nodes).links([]).gravity(0.1).charge(-2000).linkDistance(100).size([width,height]).on("tick",tick),svg=d3.select(container).append("svg").attr("width",width).attr("height",height),node=svg.selectAll(".node"),link=svg.selectAll(".link"),needs_update=false,nodes=force.nodes(),links=force.links();build_links();update();$("#stack_box").html(graph.stack.info_box);var in_progress=false;set_in_progress(graph.stack,node);var poll_time=0;if(in_progress===true){poll_time=3000;}
else{poll_time=30000;}
ajax_poll(poll_time);}
Rickshaw.namespace('Rickshaw.Graph.Renderer.StaticAxes');Rickshaw.Graph.Renderer.StaticAxes=Rickshaw.Class.create(Rickshaw.Graph.Renderer.Line,{name:'StaticAxes',defaults:function($super){return Rickshaw.extend($super(),{xMin:undefined,xMax:undefined,yMin:undefined,yMax:undefined});},domain:function($super){var ret=$super();var xMin,xMax;if(this.yMin!==undefined&&this.yMax!==undefined){ret.y=[this.yMin,this.yMax];}
if(this.xMin!==undefined&&this.xMax!==undefined){xMin=d3.time.format.utc('%Y-%m-%dT%H:%M:%S').parse(this.xMin);xMin=xMin.getTime()/1000;xMax=d3.time.format.utc('%Y-%m-%dT%H:%M:%S').parse(this.xMax);xMax=xMax.getTime()/1000;ret.x=[xMin,xMax];}
return ret;}});horizon.d3_line_chart={LineChart:function(chart_module,html_element,settings){var self=this;var jquery_element=$(html_element);self.chart_module=chart_module;self.html_element=html_element;self.jquery_element=jquery_element;self.$spinner=horizon.loader.inline(gettext('Loading')).hide().appendTo(jquery_element);self.init=function(){var self=this;self.legend_element=$(jquery_element.data('legend-selector')).get(0);self.slider_element=$(jquery_element.data('slider-selector')).get(0);self.data=jquery_element.data('data');self.url_parameters=jquery_element.data('url_parameters');if(typeof self.data==='string'){self.final_url=self.data;if(jquery_element.data('form-selector')){$(jquery_element.data('form-selector')).each(function(){if(self.final_url.indexOf('?')>-1){self.final_url+='&'+$(this).serialize();}else{self.final_url+='?'+$(this).serialize();}});}}
self.color=d3.scale.category10();self.stats={};self.stats.average=0;self.stats.last_value=0;self.init_settings(settings);self.get_size();};self.init_settings=function(settings){var self=this;self.settings={};self.settings.renderer='line';self.settings.auto_size=true;self.settings.axes_x=true;self.settings.axes_y=true;self.settings.axes_y_label=true;self.settings.interpolation='linear';self.settings.yMin=undefined;self.settings.yMax=undefined;self.settings.xMin=undefined;self.settings.xMax=undefined;self.settings.higlight_last_point=false;self.settings.composed_chart_selector='.overview_chart';self.settings.bar_chart_selector='div[data-chart-type="overview_bar_chart"]';self.settings.bar_chart_settings=undefined;self.hover_formatter='verbose';if(settings){self.apply_settings(settings);}
if(self.jquery_element.data('settings')){var inline_settings=self.jquery_element.data('settings');self.apply_settings(inline_settings);}};self.apply_settings=function(settings){var self=this;var allowed_settings=['renderer','auto_size','axes_x','axes_y','interpolation','yMin','yMax','xMin','xMax','bar_chart_settings','bar_chart_selector','composed_chart_selector','higlight_last_point','axes_y_label'];jQuery.each(allowed_settings,function(index,setting_name){if(settings[setting_name]!==undefined){self.settings[setting_name]=settings[setting_name];}});};self.get_size=function(){$(self.html_element).css('height','');$(self.html_element).css('width','');var svg=$(self.html_element).find('svg');svg.hide();self.width=jquery_element.width();self.height=jquery_element.height();if(self.settings.auto_size){var auto_height=$(window).height()-jquery_element.offset().top-30;if(auto_height>self.height){self.height=auto_height;}}
$(self.html_element).css('height',self.height);$(self.html_element).css('width',self.width);svg.show();svg.css('height',self.height);svg.css('width',self.width);};self.init();self.error_message=function(error){$(self.html_element).html(error);$(self.legend_element).empty();$(self.legend_element).css('height','');horizon.toast.add('error',gettext('An error occurred. Please try again later.'));};self.load_data=function(data){self.jquery_element.empty();$(self.legend_element).empty();self.series=data.series;self.stats=data.stats;self.apply_settings(data.settings);if(self.series.length<=0){$(self.html_element).html(gettext('No data available.'));$(self.legend_element).empty();$(self.legend_element).css('height','');}else{self.render();}};self.refresh=function(){var self=this;self.start_loading();if(typeof self.data==='string'){horizon.ajax.queue({url:self.final_url,success:function(data){self.load_data(data);},error:function(){self.error_message(gettext('No data available.'));},complete:function(){self.finish_loading();}});}else if(self.data){self.load_data(self.data);self.finish_loading();}else{self.error_message(gettext('No data available.'));}};self.render=function(){var self=this;var last_point,last_point_color;$.map(self.series,function(serie){serie.color=last_point_color=self.color(serie.name);$.map(serie.data,function(statistic){statistic.x=d3.time.format.utc('%Y-%m-%dT%H:%M:%S').parse(statistic.x);statistic.x=statistic.x.getTime()/1000;last_point=statistic;last_point.color=serie.color;});});var renderer=self.settings.renderer;if(renderer==='StaticAxes'){renderer=Rickshaw.Graph.Renderer.StaticAxes;}
self.jquery_element.empty();var $newGraph=self.jquery_element.clone();self.jquery_element.replaceWith($newGraph);self.jquery_element=$newGraph;self.html_element=self.jquery_element[0];var graph=new Rickshaw.Graph({element:self.html_element,width:self.width,height:self.height,renderer:renderer,series:self.series,yMin:self.settings.yMin,yMax:self.settings.yMax,xMin:self.settings.xMin,xMax:self.settings.xMax,interpolation:self.settings.interpolation});graph.render();if(self.hover_formatter==='verbose'){new Rickshaw.Graph.HoverDetail({graph:graph,formatter:function(series,x,y){if(y%1===0){y=parseInt(y,10);}else{y=parseFloat(y).toFixed(2);}
var d=new Date(x*1000);var datetime_string=d.getUTCFullYear()+"-"+
("00"+(d.getUTCMonth()+1)).slice(-2)+"-"+
("00"+d.getUTCDate()).slice(-2)+" "+
("00"+d.getUTCHours()).slice(-2)+":"+
("00"+d.getUTCMinutes()).slice(-2)+":"+
("00"+d.getUTCSeconds()).slice(-2)+" GMT";var date='<span class="date">'+datetime_string+'</span>';var swatch='<span class="detail_swatch" style="background-color: '+series.color+'"></span>';return swatch+series.name+': '+y+' '+series.unit+'<br>'+date;}});}
if(self.legend_element){var legend=new Rickshaw.Graph.Legend({graph:graph,element:self.legend_element});new Rickshaw.Graph.Behavior.Series.Toggle({graph:graph,legend:legend});new Rickshaw.Graph.Behavior.Series.Order({graph:graph,legend:legend});new Rickshaw.Graph.Behavior.Series.Highlight({graph:graph,legend:legend});}
if(self.settings.axes_x){var axes_x=new Rickshaw.Graph.Axis.Time({graph:graph});axes_x.render();}
if(self.settings.axes_y){var axes_y_settings={graph:graph};if(!self.settings.axes_y_label){axes_y_settings.tickFormat=(function(){return'';});}
var axes_y=new Rickshaw.Graph.Axis.Y(axes_y_settings);axes_y.render();}
$(self.legend_element).css('height','');if(self.stats!==undefined){var composed_chart=self.jquery_element.parents(self.settings.composed_chart_selector).first();var bar_chart_html=composed_chart.find(self.settings.bar_chart_selector).get(0);horizon.d3_bar_chart.refresh(bar_chart_html,self.settings.bar_chart_settings,self.stats);}
if(self.settings.higlight_last_point){if(last_point!==undefined&&last_point_color!==undefined){graph.vis.append('circle').attr('class','used_component').attr('cy',graph.y(last_point.y)).attr('cx',graph.x(last_point.x)).attr('r',2).style('fill',last_point_color).style('stroke',last_point_color).style('stroke-width',2);}}};self.start_loading=function(){var self=this;$(self.html_element).addClass('has-spinner');self.$spinner.show();$(self.legend_element).empty().addClass('disabled');};self.finish_loading=function(){var self=this;$(self.legend_element).removeClass('disabled');$(self.html_element).removeClass('has-spinner');self.$spinner.hide();};},init:function(selector,settings){var self=this;$(selector).each(function(){self.refresh(this,settings);});if(settings!==undefined&&settings.auto_resize){var rtime=new Date(1,1,2000,12,0,0);var timeout=false;var delta=400;$(window).resize(function(){rtime=new Date();if(timeout===false){timeout=true;setTimeout(resizeend,delta);}});var resizeend=function(){if(new Date()-rtime<delta){setTimeout(resizeend,delta);}else{timeout=false;$(selector).each(function(){self.refresh(this,settings);});}};}
self.bind_commands(selector,settings);},refresh:function(html_element,settings){var chart=new this.LineChart(this,html_element,settings);chart.refresh();},bind_commands:function(selector,settings){var select_box_selector='select[data-line-chart-command="select_box_change"]';var datepicker_selector='input[data-line-chart-command="date_picker_change"]';var self=this;var connect_forms_to_charts=function(){$(selector).each(function(){var chart=$(this);$(chart.data('form-selector')).each(function(){var form=$(this);var chart_identifier='div[data-form-selector="'+chart.data('form-selector')+'"]';if(!form.data('charts_selector')){form.data('charts_selector',chart_identifier);}else{form.data('charts_selector',form.data('charts_selector')+', '+chart_identifier);}});});};var delegate_event_and_refresh_charts=function(selector,event_name,settings){$('form').delegate(selector,event_name,function(){var invoker=$(this);var form=invoker.parents('form').first();$(form.data('charts_selector')).each(function(){self.refresh(this,settings);});});};var bind_select_box_change=function(settings){delegate_event_and_refresh_charts(select_box_selector,'change',settings);};var bind_datepicker_change=function(settings){horizon.datepickers.add(datepicker_selector);delegate_event_and_refresh_charts(datepicker_selector,'changeDate',settings);};connect_forms_to_charts();bind_select_box_change(settings);bind_datepicker_change(settings);}};horizon.addInitFunction(function(){horizon.d3_line_chart.init('div[data-chart-type="line_chart"]',{});});horizon.d3_bar_chart={BarChart:function(chart_module,html_element,settings,data){var self=this;self.chart_module=chart_module;self.html_element=html_element;self.jquery_element=$(self.html_element);self.init=function(settings,data){var self=this;self.data={};self.data.max_value=self.jquery_element.data('max-value');if(!self.max_value){self.max_value=100;}
self.data.used=self.jquery_element.data('used');self.data.average=self.jquery_element.data('average');self.data.tooltip_average=self.jquery_element.data('tooltip-average');self.data.tooltip_free=self.jquery_element.data('tooltip-free');self.data.tooltip_used=self.jquery_element.data('tooltip-used');if(data!==undefined){if(data.used!==undefined){self.data.used=data.used;}
if(data.average!==undefined){self.data.average=data.average;}
if(data.tooltip_average!==undefined){self.data.tooltip_average=data.tooltip_average;}
if(data.tooltip_free!==undefined){self.data.tooltip_free=data.tooltip_free;}
if(data.tooltip_used!==undefined){self.data.tooltip_used=data.tooltip_used;}}
if($.isArray(self.data.used)){self.data.percentage_average=0;self.data.percentage_used=Array();self.data.tooltip_used_contents=Array();for(var i=0;i<self.data.used.length;++i){if(!isNaN(self.max_value)&&!isNaN(self.data.used[i].used_instances)){var used=Math.round((self.data.used[i].used_instances/self.max_value)*100);self.data.percentage_used.push(used);self.data.tooltip_used_contents.push(self.data.used[i].tooltip_used);}else{}}}else{if(!isNaN(self.max_value)&&!isNaN(self.data.used)){self.data.percentage_used=Math.round((self.data.used/self.max_value)*100);}else{self.data.percentage_used=0;}
if(!isNaN(self.max_value)&&!isNaN(self.data.average)){self.data.percentage_average=((self.data.average/self.max_value)*100);}else{self.data.percentage_average=0;}}
self.init_settings(settings);};self.init_settings=function(settings){var self=this;self.data.settings={};self.data.settings.orientation='horizontal';self.data.settings.width=self.jquery_element.data('width');self.data.settings.height=self.jquery_element.data('height');if(settings){self.apply_settings(settings);}
if(self.jquery_element.data('settings')){var inline_settings=self.jquery_element.data('settings');self.apply_settings(inline_settings);}};self.apply_settings=function(settings){var self=this;var allowed_settings=['orientation','used_label_placement','width','height'];$.each(allowed_settings,function(index,setting_name){if(settings[setting_name]!==undefined){self.data.settings[setting_name]=settings[setting_name];}});};self.init(settings,data);self.refresh=function(){var self=this;self.jquery_element.empty();self.render();};self.render=function(){var self=this;var wrapper=new self.chart_module.Wrapper(self.chart_module,self.html_element,self.data);(new self.chart_module.UnusedComponent(wrapper)).render(self.data.tooltip_free);if(wrapper.used_multi()){for(var i=0;i<wrapper.percentage_used.length;++i){wrapper.used_multi_iterator=i;(new self.chart_module.UsedComponent(wrapper)).render(self.data.tooltip_used);wrapper.total_used_perc+=wrapper.percentage_used_value();wrapper.total_used_value_in_pixels=(wrapper.w/100)*wrapper.total_used_perc;}}else{(new self.chart_module.UsedComponent(wrapper)).render(self.data.tooltip_used);(new self.chart_module.AverageComponent(wrapper)).render(self.data.tooltip_average);}};},Wrapper:function(chart_module,html_element,data){var self=this;self.html_element=html_element;self.jquery_element=$(html_element);self.bar_html=d3.select(html_element);self.bar=self.bar_html.append('svg:svg').attr('class','legacy-bar-chart');chart_module.get_size(self.html_element);self.data=data;self.used_label_placement=data.settings.used_label_placement;if(data.settings.width!==undefined){self.w=parseFloat(data.settings.width);}else{self.w=parseFloat(self.jquery_element.width());}
if(data.settings.height!==undefined){self.h=parseFloat(data.settings.height);}else{self.h=parseFloat(self.jquery_element.height());}
self.chart_start_x=0;if(self.data.settings.orientation==='vertical'){if(self.used_label_placement==='left'){self.chart_start_x=44;}
self.chart_wrapper_w=self.w+self.chart_start_x;}else{self.chart_wrapper_w=self.w;}
self.chart_wrapper_h=self.h;self.lvl_curve=3;self.percentage_used=data.percentage_used;self.total_used_perc=0;self.total_used_value_in_pixels=0;self.used_value_in_pixels=0;self.average_value_in_pixels=0;self.percentage_average=data.percentage_average;self.tooltip_used_contents=data.tooltip_used_contents;self.border_width=1;self.used_multi=function(){return($.isArray(self.percentage_used));};self.used_multi_iterator=0;self.percentage_used_value=function(){if(self.used_multi()){return self.percentage_used[self.used_multi_iterator];}else{return self.percentage_used;}};self.tooltip_used_value=function(){if(self.used_multi()){return self.tooltip_used_contents[self.used_multi_iterator];}else{return'';}};self.horizontal_orientation=function(){return(self.data.settings.orientation==='horizontal');};},UsedComponent:function(wrapper){var self=this;self.wrapper=wrapper;if(self.wrapper.horizontal_orientation()){self.wrapper.used_value_in_pixels=(self.wrapper.w/100)*self.wrapper.percentage_used_value();self.y=0;self.x=self.wrapper.total_used_value_in_pixels;self.width=0;self.height=self.wrapper.h;self.trasition_attr='width';self.trasition_value=self.wrapper.used_value_in_pixels;}else{self.wrapper.used_value_in_pixels=(self.wrapper.h/100)*self.wrapper.percentage_used_value();self.y=self.wrapper.h;self.x=self.wrapper.chart_start_x;self.width=self.wrapper.w-self.wrapper.border_width;self.height=self.wrapper.used_value_in_pixels;self.trasition_attr='y';self.trasition_value=self.wrapper.h-self.wrapper.used_value_in_pixels;}
self.render=function(tooltip){var elem=self.wrapper.bar.append('rect').attr('class','used_component legacy-bar-chart-section').attr('y',self.y).attr('x',self.x).attr('width',self.width).attr('height',self.height).attr('d',self.wrapper.percentage_used_value()).transition().duration(500).attr(self.trasition_attr,self.trasition_value);$(elem).tooltip({placement:self.wrapper.data.settings.orientation==='horizontal'?'bottom':'left',container:'body',title:$.isArray(self.wrapper.data.percentage_used)?self.wrapper.tooltip_used_value():tooltip});if(self.wrapper.used_label_placement==='left'){var label_placement_y=self.wrapper.h-self.wrapper.used_value_in_pixels;if(label_placement_y<=6){label_placement_y=6;}else if(label_placement_y>=(self.wrapper.h-6)){label_placement_y=self.wrapper.h-6;}
self.wrapper.bar.append('text').attr('class','used_component_label').text(self.wrapper.percentage_used_value()+'%').attr('y',label_placement_y).attr('x',0).attr('dominant-baseline','middle').transition().duration(500).attr('x',function(){if(self.wrapper.percentage_used_value()>99){return 0;}
else if(self.wrapper.percentage_used_value()>9){return 4;}
else{return 8;}});var poly=[{'x':self.wrapper.chart_start_x-8,'y':label_placement_y},{'x':self.wrapper.chart_start_x-3,'y':label_placement_y+2},{'x':self.wrapper.chart_start_x-3,'y':label_placement_y-2}];self.wrapper.bar.selectAll('polygon').data([poly]).enter().append('polygon').attr('class','used_component_label_arrow').attr('points',function(d){return d.map(function(d){return[d.x,d.y].join(',');}).join(' ');}).attr('stroke-width',2);}};},AverageComponent:function(wrapper){var self=this;self.wrapper=wrapper;if(wrapper.horizontal_orientation()){self.wrapper.average_value_in_pixels=(self.wrapper.w/100)*self.wrapper.percentage_average;self.y=1;self.x=self.wrapper.average_value_in_pixels;self.width=0;self.height=self.wrapper.h;}else{self.wrapper.average_value_in_pixels=(self.wrapper.h/100)*(100-self.wrapper.percentage_average);self.y=self.wrapper.average_value_in_pixels;self.x=self.wrapper.chart_start_x;self.width=self.wrapper.w-self.wrapper.border_width;self.height=0;}
self.render=function(tooltip){if(self.wrapper.percentage_average>0){var elem=self.wrapper.bar.append('line').attr('class','average_component').attr('y1',self.y).attr('x1',self.x).attr('y2',self.y+self.height).attr('x2',self.x+self.width);$(elem).tooltip({placement:self.wrapper.data.settings.orientation==='horizontal'?'top':'right',container:'body',title:tooltip});}};},UnusedComponent:function(wrapper){var self=this;self.wrapper=wrapper;self.render=function(tooltip){var elem=self.wrapper.bar.append('rect').attr('class','unused_component legacy-bar-chart-section').attr('y',0).attr('x',self.wrapper.chart_start_x).attr('width',self.wrapper.w).attr('height',self.wrapper.h).attr('rx',self.wrapper.lvl_curve).attr('ry',self.wrapper.lvl_curve);$(elem).tooltip({placement:self.wrapper.data.settings.orientation==='horizontal'?'bottom':'left',container:'body',title:tooltip});};},init:function(selector,settings,data){var self=this;self.bars=$(selector);self.bars.each(function(){self.refresh(this,settings,data);});},refresh:function(html_element,settings,data){var chart=new this.BarChart(this,html_element,settings,data);chart.refresh();},get_size:function(html_element){var jquery_element=$(html_element);jquery_element.css('height','');jquery_element.css('width','');var svg=jquery_element.find('svg');svg.hide();var width=jquery_element.width();var height=jquery_element.height();jquery_element.css('height',height);jquery_element.css('width',width);svg.show();svg.css('height',height);svg.css('width',width);}};horizon.addInitFunction(function(){horizon.d3_bar_chart.init('div[data-chart-type="bar_chart"]',{},{});});$(document).ready(function(){'use strict';var $sidenav=$('#sidebar');var $mask=$(document.createElement('div')).prop('id','sidebar-mask').appendTo($('#content_body'));$(document).on('click','#sidebar-toggle',function(){$mask.toggleClass('on-screen');$sidenav.toggleClass('on-screen');});});horizon.extensible_header={populate:function(){var $path=$(location).attr('pathname');var $url=$(location).attr('href');$url=$url.replace($path,$(window).attr('WEBROOT')+'header/');horizon.ajax.queue({url:$url,success:function(data){$('#extensible-header').replaceWith($(data));selected=horizon.cookies.get('selected_header');if(selected&&$('#header-list #'+selected).length){$old_primary=$('#primary-extensible-header > a');$new_primary=$('#header-list #'+selected);$old_primary.insertAfter($new_primary);$new_primary.first().appendTo($('#primary-extensible-header'));}
function swap(){$old_primary=$('#primary-extensible-header > a');$new_primary=$(this);horizon.cookies.put("selected_header",$new_primary.attr('id'),{path:'/'});$old_primary.insertAfter($new_primary);$new_primary.appendTo($('#primary-extensible-header'));$new_primary.off('click',swap);$old_primary.on('click',swap);}
$('#header-list .extensible-header-section').on('click',swap);},error:function(jqXHR){if(jqXHR.status!==401&&jqXHR.status!==403){if(jqXHR.status!==0){horizon.alert("info",gettext("Failed to populate extensible header."));}}}});return true;}};horizon.addInitFunction(function(){horizon.extensible_header.populate();});horizon.instances={user_volume_size:false,workflow_init:function(){horizon.lists.generate_html("network");}};horizon.addInitFunction(horizon.instances.init=function(){var $document=$(document);$document.on('submit','#tail_length',function(evt){horizon.lists.get_console_log(true,true);evt.preventDefault();});function update_launch_source_displayed_fields(field){var $this=$(field);var base_type=$this.val();var elements_list;$this.closest(".form-group").nextAll().hide();if(base_type!="image_id"){$("#id_image_id").val('');$('#id_image_id').change();}
switch(base_type){case"image_id":elements_list="#id_image_id";break;case"instance_snapshot_id":elements_list="#id_instance_snapshot_id";break;case"volume_id":elements_list="#id_volume_id, #id_device_name, #id_vol_delete_on_instance_delete";break;case"volume_image_id":elements_list="#id_image_id, #id_volume_size, #id_device_name, #id_vol_delete_on_instance_delete";break;case"volume_snapshot_id":elements_list="#id_volume_snapshot_id, #id_device_name, #id_vol_delete_on_instance_delete";break;}
var elements_list_group=$(elements_list).closest(".form-group");elements_list_group.addClass("required");$("#id_device_name").closest(".form-group").removeClass("required");elements_list_group.show();}
$document.on('change','.workflow #id_source_type',function(){update_launch_source_displayed_fields(this);});$('.workflow #id_source_type').change();horizon.modals.addModalInitFunction(function(modal){$(modal).find("#id_source_type").change();});function update_device_size(source_type){var volume_size;var selected_flavor=horizon.Quota.getSelectedFlavor();if(selected_flavor){volume_size=selected_flavor.disk;}
var size_field=$("#id_volume_size");if(source_type==='image'){var image=horizon.Quota.getSelectedImageOrSnapshot(source_type);if(image!==undefined&&image.min_disk>volume_size){volume_size=image.min_disk;}
if(image!==undefined&&image.size>volume_size){volume_size=image.size;}}
if(horizon.instances.user_volume_size){var user_value=size_field.val();if(user_value>volume_size){volume_size=user_value;}}
if(volume_size<1){volume_size=1;}
size_field.val(volume_size);}
$document.on('change','.workflow #id_flavor',function(){update_device_size();});$document.on('change','.workflow #id_image_id',function(){update_device_size('image');});$document.on('input','.workflow #id_volume_size',function(){horizon.instances.user_volume_size=true;$document.off('input','.workflow #id_volume_size');});horizon.instances.decrypt_password=function(encrypted_password,private_key){var crypt=new JSEncrypt();crypt.setKey(private_key);return crypt.decrypt(encrypted_password);};$document.on('change','#id_private_key_file',function(evt){var file=evt.target.files[0];var reader=new FileReader();if(file){reader.onloadend=function(event){$("#id_private_key").val(event.target.result);};reader.onerror=function(){horizon.clearErrorMessages();horizon.toast.add('error',gettext('Could not read the file'));};reader.readAsText(file);}
else{horizon.clearErrorMessages();horizon.toast.add('error',gettext('Could not decrypt the password'));}});$document.on('show.bs.modal','#password_instance_modal',function(){$("#id_decrypted_password").css({"font-family":"monospace","cursor":"text"});$("#id_encrypted_password").css("cursor","text");$("#id_keypair_name").css("cursor","text");});$document.on('click','#decryptpassword_button',function(evt){var encrypted_password=$("#id_encrypted_password").val();var private_key=$('#id_private_key').val();if(!private_key){evt.preventDefault();$(this).closest('.modal').modal('hide');}
else{if(private_key.length>0){evt.preventDefault();var decrypted_password=horizon.instances.decrypt_password(encrypted_password,private_key);if(decrypted_password===false||decrypted_password===null){horizon.clearErrorMessages();horizon.toast.add('error',gettext('Could not decrypt the password'));}
else{$("#id_decrypted_password").val(decrypted_password);$("#decryptpassword_button").hide();}}}});});horizon.Quota={is_flavor_quota:false,user_value_progress_bars:[],auto_value_progress_bars:[],flavor_progress_bars:[],user_value_form_inputs:[],selected_flavor:null,flavors:[],init:function(){this.user_value_progress_bars=$('div[data-progress-indicator-for]');this.auto_value_progress_bars=$('div[data-progress-indicator-step-by]');this.user_value_form_inputs=$($.map(this.user_value_progress_bars,function(elm){return('#'+$(elm).attr('data-progress-indicator-for'));}));this._attachInputHandlers();},belowMinimum:function(minimum,actual){return parseInt(minimum,10)>parseInt(actual,10);},imageFitsFlavor:function(image,flavor){if(image===undefined){return true;}else{var overDisk=horizon.Quota.belowMinimum(image.min_disk,flavor.disk);var overRAM=horizon.Quota.belowMinimum(image.min_ram,flavor.ram);return!(overDisk||overRAM);}},noteDisabledFlavors:function(allDisabled){if($('#some_flavors_disabled').length===0){var message=allDisabled?horizon.Quota.allFlavorsDisabledMessage:horizon.Quota.disabledFlavorMessage;$('#id_flavor').parent().append("<span id='some_flavors_disabled'>"+
message+'</span>');}},resetFlavors:function(){if($('#some_flavors_disabled')){$('#some_flavors_disabled').remove();$('#id_flavor option').each(function(){$(this).attr('disabled',false);});}},findImageById:function(id){var _image;$.each(horizon.Quota.images,function(i,image){if(image.id===id){_image=image;}});return _image;},getSelectedImageOrSnapshot:function(source_type){var selected=$('#id_'+source_type+'_id option:selected').val();return horizon.Quota.findImageById(selected);},disableFlavorsForImage:function(source_type){var source=horizon.Quota.getSelectedImageOrSnapshot(source_type);var to_disable=[];horizon.Quota.resetFlavors();$.each(horizon.Quota.flavors,function(i,flavor){if(!horizon.Quota.imageFitsFlavor(source,flavor)){to_disable.push(flavor.name);}});var flavors=$('#id_flavor option');$.each(to_disable,function(i,flavor_name){flavors.each(function(){if($(this).text()===flavor_name){$(this).attr('disabled','disabled');}});});if(to_disable.length>0){var selected=($('#id_flavor option').filter(':selected'))[0];if(to_disable.length<flavors.length&&selected.disabled){flavors.each(function(index,element){if(!element.disabled){$('#id_flavor').val(element.value);$('#id_flavor').change();return false;}});}
horizon.Quota.noteDisabledFlavors(to_disable.length===flavors.length);}},initWithImages:function(images,disabledMessage,allDisabledMessage){this.images=images;this.disabledFlavorMessage=disabledMessage;this.allFlavorsDisabledMessage=allDisabledMessage;horizon.Quota.disableFlavorsForImage('image');},initWithFlavors:function(flavors){this.is_flavor_quota=true;this.flavor_progress_bars=$('div[data-progress-indicator-flavor]');this.flavors=flavors;this.init();this.showFlavorDetails();this.updateFlavorUsage();},getSelectedFlavor:function(){if(this.is_flavor_quota){this.selected_flavor=$.grep(this.flavors,function(flavor){return flavor.id===$("#id_flavor").children(":selected").val();})[0];this.old_flavor=$.grep(this.flavors,function(flavor){return flavor.name===$('#id_old_flavor_name').val();})[0];}else{this.old_flavor=null;this.selected_flavor=null;}
return this.selected_flavor;},showFlavorDetails:function(){this.getSelectedFlavor();if(this.selected_flavor){var vcpus=horizon.Quota.humanizeNumbers(this.selected_flavor.vcpus);var disk=horizon.Quota.humanizeNumbers(this.selected_flavor.disk);var ephemeral=horizon.Quota.humanizeNumbers(this.selected_flavor["OS-FLV-EXT-DATA:ephemeral"]);var disk_total=this.selected_flavor.disk+this.selected_flavor["OS-FLV-EXT-DATA:ephemeral"];var disk_total_display=horizon.Quota.humanizeNumbers(disk_total);var ram=horizon.Quota.humanizeNumbers(this.selected_flavor.ram);$("#flavor_name").text(this.selected_flavor.name);$("#flavor_vcpus").text(vcpus);$("#flavor_disk").text(disk);$("#flavor_ephemeral").text(ephemeral);$("#flavor_disk_total").text(disk_total_display);$("#flavor_ram").text(ram);}
else{$("#flavor_name").html('');$("#flavor_vcpus").text('');$("#flavor_disk").text('');$("#flavor_ephemeral").text('');$("#flavor_disk_total").text('');$("#flavor_ram").text('');}},humanizeNumbers:function(number){return number.toString().replace(/\d+(?:\.\d+)?/g,function(match){var lang=horizon.cookies.get('horizon_language');try{return new Intl.NumberFormat(lang).format(match);}catch(e){return match;}});},updateFlavorUsage:function(){if(!this.is_flavor_quota){return;}
var scope=this;var instance_count=(parseInt($("#id_count").val(),10)||1);var update_amount=0;this.getSelectedFlavor();$(this.flavor_progress_bars).each(function(index,element){var element_id=$(element).attr('id');var progress_stat=element_id.match(/^quota_(.+)/)[1];var sourceType=$("#id_source_type").val();var createVolume=(sourceType==="volume_snapshot_id"||sourceType==="volume_image_id");if(!progress_stat){return;}else if(progress_stat==='resize_instance'){update_amount=0;}else if(progress_stat==='instances'){update_amount=instance_count;}else if(progress_stat==='vcpus'&&scope.old_flavor&&scope.selected_flavor){var old_vcpus=scope.old_flavor.vcpus;var new_vcpus=scope.selected_flavor.vcpus;update_amount=(new_vcpus-old_vcpus<0)?0:(new_vcpus-old_vcpus);}else if(progress_stat==='ram'&&scope.old_flavor&&scope.selected_flavor){var old_ram=scope.old_flavor.ram;var new_ram=scope.selected_flavor.ram;update_amount=(new_ram-old_ram<0)?0:(new_ram-old_ram);}else if(progress_stat==="volume"){update_amount=createVolume?instance_count:0;}else if(progress_stat==="volume_storage"){var volumeSize=0;if(sourceType==="volume_snapshot_id"){var volumeSizeMatches=$("#id_volume_snapshot_id").children(":selected").html().match(/\s(\d+)\s/g);volumeSize=horizon.Quota.getSelectedFlavor().disk;if(volumeSizeMatches){volumeSize=Math.max(volumeSize,volumeSizeMatches[volumeSizeMatches.length-1]);}}else if(sourceType==="volume_image_id"){volumeSize=$("#id_volume_size").val();}
update_amount=volumeSize*instance_count;}else if(scope.selected_flavor){update_amount=(scope.selected_flavor[progress_stat]*instance_count);}
scope.updateUsageFor(element,update_amount);});},updateUsageFor:function(progress_element,increment_by){var $progress_element=$(progress_element);var quota_limit=parseInt($progress_element.attr('data-quota-limit'),10);var percentage_to_update=((increment_by/quota_limit)*100);this.update($progress_element.attr('id'),percentage_to_update);},update:function(element,value){var bars=$('#'+element).find('.progress-bar');var used_val=+$(bars[0]).attr('aria-valuenow');var total=used_val+value;if(total>100){value=100-used_val;}
var percent_str=value+'%';var $bar=$(bars[1]);$bar.css('width',percent_str).attr('aria-valuenow',value).find('.sr-only').html(percent_str);if(total>99){$bar.removeClass('progress-bar-warning').addClass('progress-bar-danger');}else{$bar.removeClass('progress-bar-danger');total>89?$bar.addClass('progress-bar-warning'):$bar.removeClass('progress-bar-warning');}},_attachInputHandlers:function(){var scope=this;if(this.is_flavor_quota){var eventCallback=function(){scope.showFlavorDetails();scope.updateFlavorUsage();};var imageChangeCallback=function(){scope.disableFlavorsForImage('image');};var snapshotChangeCallback=function(){scope.disableFlavorsForImage('instance_snapshot');};var volumeChangeCallback=function(){scope.updateFlavorUsage();};$('#id_flavor').on('keyup change',eventCallback);$('#id_count').on('input',eventCallback);$('#id_image_id').on('change',imageChangeCallback);$('#id_instance_snapshot_id').on('change',snapshotChangeCallback);$('#id_source_type').on('change',volumeChangeCallback);$('#id_volume_snapshot_id').on('change',volumeChangeCallback);$('#id_image_id').on('change',volumeChangeCallback);$('#id_volume_size').on('keyup change',volumeChangeCallback);}
$(this.user_value_form_inputs).each(function(index,element){$(element).on('input',function(){var $this=$(this);var $progress_element=$('div[data-progress-indicator-for='+$this.attr('id')+']');var integers_in_input=$this.val().match(/\d+/g);var user_integer;if(integers_in_input===null){user_integer=0;}else if(integers_in_input.length>1){user_integer=integers_in_input.join('');}else if(integers_in_input.length===1){user_integer=integers_in_input[0];}
var progress_amount=parseInt(user_integer,10);scope.updateUsageFor($progress_element,progress_amount);});});}};horizon.metering={init_create_usage_report_form:function(){horizon.datepickers.add('input[data-date-picker]');horizon.metering.add_change_event_to_period_dropdown();horizon.metering.show_or_hide_date_fields();},init_stats_page:function(){if(typeof horizon.d3_line_chart!=='undefined'){horizon.d3_line_chart.init("div[data-chart-type='line_chart']",{'auto_resize':true});}
horizon.metering.add_change_event_to_period_dropdown();horizon.metering.show_or_hide_date_fields();},show_or_hide_date_fields:function(){$("#date_from .controls input, #date_to .controls input").val('');if($("#id_period").find("option:selected").val()==="other"){$("#id_date_from, #id_date_to").parent().parent().show();return true;}else{$("#id_date_from, #id_date_to").parent().parent().hide();return false;}},add_change_event_to_period_dropdown:function(){$("#id_period").change(function(evt){if(horizon.metering.show_or_hide_date_fields()){evt.stopPropagation();}});}};horizon.networktopologycommon={init:function(){horizon.networktopologyloader.init();horizon.networktopologymessager.init();}};horizon.networktopologyloader={model:null,reload_duration:10000,update_timer:null,init:function(){var self=this;if($('#networktopology').length===0){return;}
self.update();},update:function(){var self=this;angular.element.getJSON(angular.element('#networktopology').data('networktopology')+'?'+angular.element.now(),function(data){self.model=data;$('#networktopology').trigger('change');self.update_timer=setTimeout(function(){self.update();},self.reload_duration);});},stop_update:function(){var self=this;clearTimeout(self.update_timer);},setup_loader:function($container){return horizon.loader.inline(gettext('Loading')).hide().prependTo($container);}};horizon.networktopologymessager={previous_message:null,post_messages:'#topologyMessages',messaging_functions:[],delete_data:{},init:function(){var self=this;angular.element(window).on('message',function(e){var message=angular.element.parseJSON(e.originalEvent.data);if(self.previous_message!==message.message){horizon.toast.add(message.type,message.message);self.previous_message=message.message;self.delete_post_message(message.iframe_id);self.messageNotify(message);horizon.networktopologyloader.update();setTimeout(function(){self.previous_message=null;self.delete_data={};},self.reload_duration);}});},addMessageHandler:function(fn,fnObj){var self=this;self.messaging_functions.push({obj:fnObj,func:fn});},messageNotify:function(message){var self=this;for(var i=0;i<self.messaging_functions.length;i+=1){func=self.messaging_functions[i].func;fnObj=self.messaging_functions[i].obj;func.call(fnObj,message);}},post_message:function(id,url,message,type,action,data){var self=this;if(action=="delete"){self.delete_data.device_id=id;self.delete_data.device_type=type;self.delete_data.device_data=data;}
horizon.networktopologyloader.stop_update();var iframeID='ifr_'+id;var iframe=$('<iframe width="500" height="300" />').attr('id',iframeID).attr('src',url).appendTo('#topologyMessages');iframe.on('load',function(){angular.element(this).get(0).contentWindow.postMessage(JSON.stringify(message,null,2),'*');});},delete_post_message:function(id){angular.element('#'+id).remove();}};horizon.flat_network_topology={model:null,fa_globe_glyph:'\uf0ac',fa_globe_glyph_width:15,svg:'#topology_canvas',svg_container:'#flatTopologyCanvasContainer',network_tmpl:{small:'#topology_template > .network_container_small',normal:'#topology_template > .network_container_normal'},router_tmpl:{small:'#topology_template > .router_small',normal:'#topology_template > .router_normal'},instance_tmpl:{small:'#topology_template > .instance_small',normal:'#topology_template > .instance_normal'},balloon_tmpl:null,balloon_device_tmpl:null,balloon_port_tmpl:null,network_index:{},balloon_id:null,reload_duration:10000,draw_mode:'normal',network_height:0,previous_message:null,element_properties:{normal:{network_width:270,network_min_height:500,top_margin:80,default_height:50,margin:20,device_x:98.5,device_width:90,port_margin:16,port_height:6,port_width:82,port_text_margin:{x:6,y:-4},texts_bg_y:32,type_y:46,balloon_margin:{x:12,y:-12}},small:{network_width:100,network_min_height:400,top_margin:50,default_height:20,margin:30,device_x:47.5,device_width:20,port_margin:5,port_height:3,port_width:32.5,port_text_margin:{x:0,y:0},texts_bg_y:0,type_y:0,balloon_margin:{x:12,y:-30}},cidr_margin:5,device_name_max_size:9,device_name_suffix:'..'},init:function(){var self=this;self.$container=$(self.svg_container);self.$loading_template=horizon.networktopologyloader.setup_loader($(self.$container));if($('#networktopology').length===0){return;}
self.color=d3.scale.category10();self.balloon_tmpl=Hogan.compile($('#balloon_container').html());self.balloon_device_tmpl=Hogan.compile($('#balloon_device').html());self.balloon_port_tmpl=Hogan.compile($('#balloon_port').html());$(document).on('click','a.closeTopologyBalloon',function(e){e.preventDefault();self.delete_balloon();}).on('click','.topologyBalloon',function(e){e.stopPropagation();}).on('click','a.vnc_window',function(e){e.preventDefault();e.stopImmediatePropagation();var vnc_window=window.open($(this).attr('href'),vnc_window,'width=760,height=560');self.delete_balloon();}).click(function(){self.delete_balloon();});$('.toggle-view > .btn').click(function(){self.draw_mode=$(this).data('value');$('g.network').remove();horizon.cookies.put('ntp_draw_mode',self.draw_mode);self.data_convert();});self.$loading_template.show();$('#networktopology').on('change',function(){self.load_network_info();});},load_network_info:function(){var self=this;self.model=horizon.networktopologyloader.model;self.data_convert();},select_draw_mode:function(){var self=this;var draw_mode='normal';try{draw_mode=horizon.cookies.get('ntp_draw_mode');}
catch(e){}
if(draw_mode&&(draw_mode==='normal'||draw_mode==='small')){self.draw_mode=draw_mode;}else{if(self.model.networks.length*self.element_properties.normal.network_width>$('#topologyCanvas').width()){self.draw_mode='small';}else{self.draw_mode='normal';}
horizon.cookies.put('ntp_draw_mode',self.draw_mode);}
$('.toggle-view > .btn').each(function(){var $this=$(this);if($this.data('value')===self.draw_mode){$this.addClass('active');}else{$this.removeClass('active');}});},data_convert:function(){var self=this;var model=self.model;$.each(model.networks,function(index,network){self.network_index[network.id]=index;});self.select_draw_mode();var element_properties=self.element_properties[self.draw_mode];self.network_height=element_properties.top_margin;$.each([{model:model.routers,type:'router'},{model:model.servers,type:'instance'}],function(index,devices){var type=devices.type;var model=devices.model;$.each(model,function(index,device){device.type=type;device.ports=self.select_port(device.id);var hasports=device.ports.length>0;device.parent_network=(hasports)?self.select_main_port(device.ports).network_id:self.model.networks[0].id;var height=element_properties.port_margin*(device.ports.length-1);device.height=(self.draw_mode==='normal'&&height>element_properties.default_height)?height:element_properties.default_height;device.pos_y=self.network_height;device.port_height=(self.draw_mode==='small'&&height>device.height)?1:element_properties.port_height;device.port_margin=(self.draw_mode==='small'&&height>device.height)?device.height/device.ports.length:element_properties.port_margin;self.network_height+=device.height+element_properties.margin;});});$.each(model.networks,function(index,network){network.devices=[];$.each([model.routers,model.servers],function(index,devices){$.each(devices,function(index,device){if(network.id===device.parent_network){network.devices.push(device);}});});});self.network_height+=element_properties.top_margin;self.network_height=(self.network_height>element_properties.network_min_height)?self.network_height:element_properties.network_min_height;self.draw_topology();self.$loading_template.hide();},draw_topology:function(){var self=this;$(self.svg_container).removeClass('noinfo');if(self.model.networks.length<=0){$('g.network').remove();$(self.svg_container).addClass('noinfo');return;}
var svg=d3.select(self.svg);var element_properties=self.element_properties[self.draw_mode];svg.attr('width',self.model.networks.length*element_properties.network_width).attr('height',self.network_height);var network=svg.selectAll('g.network').data(self.model.networks);network.enter().append('g').attr('class','network').each(function(d){this.appendChild(d3.select(self.network_tmpl[self.draw_mode]).node().cloneNode(true));var $this=d3.select(this).select('.network-rect');if(d.url){$this.on('mouseover',function(){$this.transition().style('fill',function(){return d3.rgb(self.get_network_color(d.id)).brighter(0.5);});}).on('mouseout',function(){$this.transition().style('fill',function(){return self.get_network_color(d.id);});}).on('click',function(){window.location.href=d.url;});}else{$this.classed('nourl',true);}});network.attr('id',function(d){return'id_'+d.id;}).attr('transform',function(d,i){return'translate('+element_properties.network_width*i+','+0+')';}).select('.network-rect').attr('height',function(){return self.network_height;}).style('fill',function(d){return self.get_network_color(d.id);});network.select('.network-name').attr('x',function(){return self.network_height/2;}).text(function(d){return d.name;});network.select('.network-cidr').attr('x',function(d){var padding=isExternalNetwork(d)?self.fa_globe_glyph_width:0;return self.network_height-self.element_properties.cidr_margin-
padding;}).text(function(d){var cidr=$.map(d.subnets,function(n){return n.cidr;});return cidr.join(', ');});function isExternalNetwork(d){return d['router:external'];}
network.select('.network-type').text(function(d){return isExternalNetwork(d)?self.fa_globe_glyph:'';}).attr('x',function(){return self.network_height-self.element_properties.cidr_margin;});$('[data-toggle="tooltip"]').tooltip({container:'body'});network.exit().remove();var device=network.selectAll('g.device').data(function(d){return d.devices;});var device_enter=device.enter().append("g").attr('class','device').each(function(d){var device_template=self[d.type+'_tmpl'][self.draw_mode];this.appendChild(d3.select(device_template).node().cloneNode(true));});device_enter.on('mouseenter',function(d){var $this=$(this);self.show_balloon(d,$this);}).on('click',function(){d3.event.stopPropagation();});device.attr('id',function(d){return'id_'+d.id;}).attr('transform',function(d){return'translate('+element_properties.device_x+','+d.pos_y+')';}).select('.frame').attr('height',function(d){return d.height;});device.select('.texts_bg').attr('y',function(d){return element_properties.texts_bg_y+d.height-element_properties.default_height;});device.select('.type').attr('y',function(d){return element_properties.type_y+d.height-element_properties.default_height;});device.select('.name').text(function(d){return self.string_truncate(d.name);});device.each(function(d){if(d.status==='BUILD'){d3.select(this).classed('loading',true);}else if(d.task==='deleting'){d3.select(this).classed('loading',true);if('bl_'+d.id===self.balloon_id){self.delete_balloon();}}else{d3.select(this).classed('loading',false);if('bl_'+d.id===self.balloon_id){var $this=$(this);self.show_balloon(d,$this);}}});device.exit().each(function(d){if('bl_'+d.id===self.balloon_id){self.delete_balloon();}}).remove();var port=device.select('g.ports').selectAll('g.port').data(function(d){return d.ports;});var port_enter=port.enter().append('g').attr('class','port').attr('id',function(d){return'id_'+d.id;});port_enter.append('line').attr('class','port_line');port_enter.append('text').attr('class','port_text');device.select('g.ports').each(function(d){this._portdata={};this._portdata.ports_length=d.ports.length;this._portdata.parent_network=d.parent_network;this._portdata.device_height=d.height;this._portdata.port_height=d.port_height;this._portdata.port_margin=d.port_margin;this._portdata.left=0;this._portdata.right=0;$(this).mouseenter(function(e){e.stopPropagation();});});port.each(function(d){var index_diff=self.get_network_index(this.parentNode._portdata.parent_network)-
self.get_network_index(d.network_id);this._index_diff=index_diff=(index_diff>=0)?++index_diff:index_diff;this._direction=(this._index_diff<0)?'right':'left';this._index=this.parentNode._portdata[this._direction]++;});port.attr('transform',function(){var x=(this._direction==='left')?0:element_properties.device_width;var ports_length=this.parentNode._portdata[this._direction];var distance=this.parentNode._portdata.port_margin;var y=(this.parentNode._portdata.device_height-
(ports_length-1)*distance)/2+this._index*distance;return'translate('+x+','+y+')';});port.select('.port_line').attr('stroke-width',function(){return this.parentNode.parentNode._portdata.port_height;}).attr('stroke',function(d){return self.get_network_color(d.network_id);}).attr('x1',0).attr('y1',0).attr('y2',0).attr('x2',function(){var parent=this.parentNode;var width=(Math.abs(parent._index_diff)-1)*element_properties.network_width+
element_properties.port_width;return(parent._direction==='left')?-1*width:width;});port.select('.port_text').attr('x',function(){var parent=this.parentNode;if(parent._direction==='left'){d3.select(this).classed('left',true);return element_properties.port_text_margin.x*-1;}else{d3.select(this).classed('left',false);return element_properties.port_text_margin.x;}}).attr('y',function(){return element_properties.port_text_margin.y;}).text(function(d){var ip_label=[];$.each(d.fixed_ips,function(){ip_label.push(this.ip_address);});return ip_label.join(',');});port.exit().remove();},get_network_color:function(network_id){return this.color(this.get_network_index(network_id));},get_network_index:function(network_id){return this.network_index[network_id];},select_port:function(device_id){return $.map(this.model.ports,function(port){if(port.device_id===device_id){return port;}});},select_main_port:function(ports){var _self=this;var main_port_index=0;var MAX_INT=4294967295;var min_port_length=MAX_INT;$.each(ports,function(index,port){var port_length=_self.sum_port_length(port.network_id,ports);if(port_length<min_port_length){min_port_length=port_length;main_port_index=index;}});return ports[main_port_index];},sum_port_length:function(network_id,ports){var self=this;var sum_port_length=0;var base_index=self.get_network_index(network_id);$.each(ports,function(index,port){sum_port_length+=base_index-self.get_network_index(port.network_id);});return sum_port_length;},string_truncate:function(string){var self=this;var str=string;var max_size=self.element_properties.device_name_max_size;var suffix=self.element_properties.device_name_suffix;var bytes=0;for(var i=0;i<str.length;i++){bytes+=str.charCodeAt(i)<=255?1:2;if(bytes>max_size){str=str.substr(0,i)+suffix;break;}}
return str;},delete_device:function(device_type,device_id){var message={id:device_id};var target=device_type==='instance'?'instance?id='+device_id:device_type;horizon.networktopologymessager.post_message(device_id,target,message,device_type,'delete',data={});},delete_port:function(router_id,port_id,network_id){var message={id:port_id};var data={router_id:router_id,network_id:network_id};horizon.networktopologymessager.post_message(port_id,'router/'+router_id+'/',message,'port','delete',data);},show_balloon:function(d,element){var self=this;var element_properties=self.element_properties[self.draw_mode];if(self.balloon_id){self.delete_balloon();}
var balloon_tmpl=self.balloon_tmpl;var device_tmpl=self.balloon_device_tmpl;var port_tmpl=self.balloon_port_tmpl;var balloon_id='bl_'+d.id;var ports=[];$.each(d.ports,function(i,port){var object={};object.id=port.id;object.router_id=port.device_id;object.url=port.url;object.port_status=port.status;object.port_status_class=(port.original_status==="ACTIVE")?'active':'down';var ip_address='';try{ip_address=port.fixed_ips[0].ip_address;}catch(e){ip_address=gettext('None');}
var device_owner='';try{device_owner=port.device_owner.replace('network:','');}catch(e){device_owner=gettext('None');}
var network_id='';try{network_id=port.network_id;}catch(e){network_id=gettext('None');}
object.network_id=network_id;object.ip_address=ip_address;object.device_owner=device_owner;object.is_interface=(device_owner==='router_interface'||device_owner==='router_gateway'||device_owner==='ha_router_replicated_interface');ports.push(object);});var html;var html_data={balloon_id:balloon_id,id:d.id,url:d.url,name:d.name,type:d.type,delete_label:gettext("Delete"),status:d.status,status_class:(d.original_status==="ACTIVE")?'active':'down',status_label:gettext("STATUS"),id_label:gettext("ID"),interfaces_label:gettext("Interfaces"),delete_interface_label:gettext("Delete Interface"),open_console_label:gettext("Open Console"),view_details_label:gettext("View Details")};if(d.type==='router'){html_data.delete_label=gettext("Delete Router");html_data.view_details_label=gettext("View Router Details");html_data.port=ports;html_data.add_interface_url=d.url+'addinterface';html_data.add_interface_label=gettext("Add Interface");html=balloon_tmpl.render(html_data,{table1:device_tmpl,table2:(ports.length>0)?port_tmpl:null});}else if(d.type==='instance'){html_data.delete_label=gettext("Delete Instance");html_data.view_details_label=gettext("View Instance Details");html_data.console_id=d.id;html_data.console=d.console;html=balloon_tmpl.render(html_data,{table1:device_tmpl});}else{return;}
$(self.svg_container).append(html);var device_position=element.find('.frame');var sidebar_width=$("#sidebar").width();var navbar_height=$(".navbar").height();var breadcrumb_height=$(".breadcrumb").outerHeight(true);var pageheader_height=$(".page-header").outerHeight(true);var launchbuttons_height=$(".launchButtons").height();var height_offset=navbar_height+breadcrumb_height+pageheader_height+launchbuttons_height;var device_offset=device_position.offset();var x=Math.round(device_offset.left+element_properties.device_width+element_properties.balloon_margin.x-sidebar_width);var y=Math.round(device_offset.top+element_properties.balloon_margin.y-height_offset+15);var $balloon=$('#'+balloon_id);$balloon.css({'left':'0px','top':y+'px'});var balloon_width=$balloon.outerWidth();var left_x=device_offset.left-balloon_width-element_properties.balloon_margin.x-sidebar_width;var right_x=x+balloon_width+element_properties.balloon_margin.x+sidebar_width;if(left_x>0&&right_x>$(window).outerWidth()){x=left_x;$balloon.addClass('leftPosition');}
$balloon.css({'left':x+'px'}).show();$balloon.find('.delete-device').click(function(){var $this=$(this);var delete_modal=horizon.datatables.confirm($this);delete_modal.find('.btn.btn-danger').click(function(){$this.prop('disabled',true);d3.select('#id_'+$this.data('device-id')).classed('loading',true);self.delete_device($this.data('type'),$this.data('device-id'));horizon.modals.spinner.modal('hide');});});$balloon.find('.delete-port').click(function(){var $this=$(this);var delete_modal=horizon.datatables.confirm($this);delete_modal.find('.btn.btn-danger').click(function(){$this.prop('disabled',true);self.delete_port($this.data('router-id'),$this.data('port-id'),$this.data('network-id'));horizon.modals.spinner.modal('hide');});});self.balloon_id=balloon_id;},delete_balloon:function(){var self=this;if(self.balloon_id){$('#'+self.balloon_id).remove();self.balloon_id=null;}}};function Network(data){for(var key in data){if({}.hasOwnProperty.call(data,key)){this[key]=data[key];}}
this.iconType='text';this.icon='\uf0c2';this.collapsed=false;this.type='network';this.instances=0;}
function ExternalNetwork(data){for(var key in data){if({}.hasOwnProperty.call(data,key)){this[key]=data[key];}}
this.collapsed=false;this.iconType='text';this.icon='\uf0ac';this.instances=0;}
function Router(data){for(var key in data){if({}.hasOwnProperty.call(data,key)){this[key]=data[key];}}
this.iconType='path';this.svg='router';this.networks=[];this.ports=[];this.type='router';}
function Server(data){for(var key in data){if({}.hasOwnProperty.call(data,key)){this[key]=data[key];}}
this.iconType='text';this.icon='\uf108';this.networks=[];this.type='instance';this.ip_addresses=[];}
function listContains(obj,list){for(var i=0;i<list.length;i++){if(angular.equals(list[i],obj)){return true;}}
return false;}
horizon.network_topology={fa_globe_glyph:'\uf0ac',fa_globe_glyph_width:15,svg:'#topology_canvas',nodes:[],links:[],data:[],zoom:d3.behavior.zoom(),data_loaded:false,svg_container:'#topologyCanvasContainer',balloonTmpl:null,balloon_deviceTmpl:null,balloon_portTmpl:null,balloon_netTmpl:null,balloon_instanceTmpl:null,network_index:{},balloonID:null,network_height:0,init:function(){var self=this;self.$loading_template=horizon.networktopologyloader.setup_loader($(self.svg_container));if(angular.element('#networktopology').length===0){return;}
self.data={};self.data.networks={};self.data.routers={};self.data.servers={};self.data.ports={};self.balloonTmpl=Hogan.compile(angular.element('#balloon_container').html());self.balloon_deviceTmpl=Hogan.compile(angular.element('#balloon_device').html());self.balloon_portTmpl=Hogan.compile(angular.element('#balloon_port').html());self.balloon_netTmpl=Hogan.compile(angular.element('#balloon_net').html());self.balloon_instanceTmpl=Hogan.compile(angular.element('#balloon_instance').html());angular.element(document).on('click','a.closeTopologyBalloon',function(e){e.preventDefault();self.delete_balloon();}).on('click','.topologyBalloon',function(e){e.stopPropagation();}).on('click','a.vnc_window',function(e){e.preventDefault();var vncWindow=window.open(angular.element(this).attr('href'),vncWindow,'width=760,height=560');self.delete_balloon();});angular.element('#toggle_labels').change(function(){horizon.cookies.put('show_labels',this.checked);self.refresh_labels();});angular.element('#toggle_networks').change(function(){horizon.cookies.put('are_networks_collapsed',this.checked);self.refresh_networks();self.refresh_labels();});self.$loading_template.show();self.create_vis();self.force_direction(0.05,70,-700);if(horizon.networktopologyloader.model!==null){self.retrieve_network_info(true);}
d3.select(window).on('resize',function(){var width=angular.element('#topologyCanvasContainer').width();var height=angular.element('#topologyCanvasContainer').height();self.force.size([width,height]).resume();});angular.element('#networktopology').on('change',function(){self.retrieve_network_info(true);if(angular.equals(self.data.networks,{})&&angular.equals(self.data.routers,{})&&angular.equals(self.data.servers,{})){$('.loader-inline').remove();angular.element('#topologyCanvasContainer').find('svg').remove();$(self.svg_container).addClass('noinfo');return;}});horizon.networktopologymessager.addMessageHandler(this.handleMessage,this);},refresh_labels:function(){var show_labels=horizon.cookies.get('show_labels')=='true';angular.element('.nodeLabel').toggle(show_labels);},refresh_networks:function(){var self=this;var are_collapsed=horizon.cookies.get('are_networks_collapsed')=='true';for(var n in self.nodes){if({}.hasOwnProperty.call(self.nodes,n)){if(self.nodes[n].data instanceof Network||self.nodes[n].data instanceof ExternalNetwork){self.collapse_network(self.nodes[n],are_collapsed);}}}},load_config:function(){var self=this;var labels=horizon.cookies.get('show_labels')=='true';var networks=horizon.cookies.get('are_networks_collapsed')=='true';if(networks){angular.element('#toggle_networks_label').addClass('active');angular.element('#toggle_networks').prop('checked',networks);self.refresh_networks();}
if(labels){angular.element('#toggle_labels_label').addClass('active');angular.element('#toggle_labels').prop('checked',labels);self.refresh_labels();}},handleMessage:function(message){var self=this;var deleteData=horizon.networktopologymessager.delete_data;horizon.modals.spinner.modal('hide');if(message.type=='success'){self.remove_node_on_delete(deleteData);}},retrieve_network_info:function(force_start){var self=this;self.data_loaded=true;self.load_topology(horizon.networktopologyloader.model);if(force_start){var i=0;self.force.start();while(i<=100){self.force.tick();i++;}}},getScreenCoords:function(x,y){var self=this;if(self.translate){var xn=self.translate[0]+x*self.zoom.scale();var yn=self.translate[1]+y*self.zoom.scale();return{x:xn,y:yn};}else{return{x:x,y:y};}},create_vis:function(){var self=this;angular.element('#topologyCanvasContainer').find('svg').remove();self.outer_group=d3.select('#topologyCanvasContainer').append('svg').attr('width','100%').attr('height',angular.element(document).height()-270+"px").attr('pointer-events','all').append('g').call(self.zoom.scaleExtent([0.1,1.5]).on('zoom',function(){self.delete_balloon();self.vis.attr('transform','translate('+d3.event.translate+')scale('+
self.zoom.scale()+')');self.translate=d3.event.translate;})).on('dblclick.zoom',null);self.outer_group.append('rect').attr('width','100%').attr('height','100%').attr('fill','white').on('click',function(){self.delete_balloon();});self.vis=self.outer_group.append('g');},convex_hulls:function(nodes){var net,_i,_len,_ref,_h,i;var hulls={};var networkids={};var k=0;var offset=40;while(k<nodes.length){var n=nodes[k];if(n.data!==undefined){if(n.data instanceof Server){_ref=n.data.networks;for(_i=0,_len=_ref.length;_i<_len;_i++){net=_ref[_i];if(net instanceof Network){_h=hulls[net.id]||(hulls[net.id]=[]);_h.push([n.x-offset,n.y-offset]);_h.push([n.x-offset,n.y+offset]);_h.push([n.x+offset,n.y-offset]);_h.push([n.x+offset,n.y+offset]);}}}else if(n.data instanceof Network){net=n.data;networkids[net.id]=n;_h=hulls[net.id]||(hulls[net.id]=[]);_h.push([n.x-offset,n.y-offset]);_h.push([n.x-offset,n.y+offset]);_h.push([n.x+offset,n.y-offset]);_h.push([n.x+offset,n.y+offset]);}}
++k;}
var hullset=[];for(i in hulls){if({}.hasOwnProperty.call(hulls,i)){hullset.push({group:i,network:networkids[i],path:d3.geom.hull(hulls[i])});}}
return hullset;},force_direction:function(grav,dist,ch){var self=this;angular.element('[data-toggle="tooltip"]').tooltip({container:'body'});self.curve=d3.svg.line().interpolate('cardinal-closed').tension(0.85);self.fill=d3.scale.category10();self.force=d3.layout.force().gravity(grav).linkDistance(function(d){if(d.source.data instanceof Server||d.target.data instanceof Server){if(d.source.data.networks){return(dist*d.source.data.networks.length)+(5*d.target.data.instances)+20;}else if(d.target.data.networks){return(dist*d.target.data.networks.length)+(5*d.source.data.instances)+20;}}else if(d.source.data instanceof Router||d.target.data instanceof Router){if(d.source.data.networks){if(d.source.data.networks.length===0){return dist+20;}else if(d.target.data.instances){return dist*d.source.data.networks.length+(10*d.target.data.instances)+20;}
return dist*d.source.data.networks.length+20;}else if(d.target.data.networks){if(d.target.data.networks.length===0){return dist+20;}else if(d.source.data.instances){return dist*d.target.data.networks.length+(10*d.source.data.instances)+20;}
return dist*d.source.data.networks.length+20;}}else{return dist;}}).charge(ch).size([angular.element('#topologyCanvasContainer').width(),angular.element('#topologyCanvasContainer').height()]).nodes(self.nodes).links(self.links).on('tick',function(){self.vis.selectAll('g.node').attr('transform',function(d){return'translate('+d.x+','+d.y+')';});self.vis.selectAll('line.link').attr('x1',function(d){return d.source.x;}).attr('y1',function(d){return d.source.y;}).attr('x2',function(d){return d.target.x;}).attr('y2',function(d){return d.target.y;});self.vis.selectAll('path.hulls').data(self.convex_hulls(self.vis.selectAll('g.node').data())).attr('d',function(d){return self.curve(d.path);}).enter().insert('path','g').attr('class','hulls').style('fill',function(d){return self.fill(d.group);}).style('stroke',function(d){return self.fill(d.group);}).style('stroke-linejoin','round').style('stroke-width',10).style('opacity',0.2);});},new_node:function(data,x,y){var self=this;data={data:data};if(x&&y){data.x=x;data.y=y;}
self.nodes.push(data);var node=self.vis.selectAll('g.node').data(self.nodes);var nodeEnter=node.enter().append('g').attr('class','node').style('fill','white').call(self.force.drag);nodeEnter.append('circle').attr('class','frame').attr('r',function(d){switch(Object.getPrototypeOf(d.data)){case ExternalNetwork.prototype:return 35;case Network.prototype:return 30;case Router.prototype:return 25;case Server.prototype:return 20;}}).style('fill','white').style('stroke','black').style('stroke-width',3);switch(data.data.iconType){case'text':nodeEnter.append('text').style('fill','black').style('font','20px FontAwesome').attr('text-anchor','middle').attr('dominant-baseline','central').text(function(d){return d.data.icon;}).attr('transform',function(d){switch(Object.getPrototypeOf(d.data)){case ExternalNetwork.prototype:return'scale(2.5)';case Network.prototype:return'scale(1.5)';case Server.prototype:return'scale(1)';}});break;case'path':nodeEnter.append('path').attr('class','svgpath').style('fill','black').attr('d',function(d){return self.svgs(d.data.svg);}).attr('transform',function(){return'scale(1.2)translate(-16,-15)';});break;}
nodeEnter.append('text').attr('class','nodeLabel').style('display',function(){var labels=horizon.cookies.get('topology_labels');if(labels){return'inline';}else{return'none';}}).style('fill','black').text(function(d){return d.data.name;}).attr('transform',function(d){switch(Object.getPrototypeOf(d.data)){case ExternalNetwork.prototype:return'translate(40,3)';case Network.prototype:return'translate(35,3)';case Router.prototype:return'translate(30,3)';case Server.prototype:return'translate(25,3)';}});if(data.data instanceof Network||data.data instanceof ExternalNetwork){nodeEnter.append('svg:text').attr('class','vmCount').style('fill','black').style('font-size','20').text('').attr('transform','translate(26,38)');}
nodeEnter.on('click',function(d){self.show_balloon(d.data,d,angular.element(this));});nodeEnter.on('mouseover',function(d){self.vis.selectAll('line.link').filter(function(z){if(z.source===d||z.target===d){return true;}else{return false;}}).style('stroke-width','3px');});nodeEnter.on('mouseout',function(){self.vis.selectAll('line.link').style('stroke-width','1px');});},collapse_network:function(d,only_collapse){var self=this;var server,vm;var filterNode=function(obj){return function(d){return obj==d.data;};};if(!d.data.collapsed){var vmCount=0;for(vm in self.data.servers){if(self.data.servers[vm]!==undefined){if(self.data.servers[vm].networks.length==1){if(self.data.servers[vm].networks[0].id==d.data.id){vmCount+=1;self.removeNode(self.data.servers[vm]);}}}}
d.data.collapsed=true;if(vmCount>0){self.vis.selectAll('.vmCount').filter(filterNode(d.data))[0][0].textContent=vmCount;}}else if(!only_collapse){for(server in self.data.servers){if({}.hasOwnProperty.call(self.data.servers,server)){var _vm=self.data.servers[server];if(_vm!==undefined){if(_vm.networks.length===1){if(_vm.networks[0].id==d.data.id){self.new_node(_vm,d.x,d.y);self.new_link(self.find_by_id(_vm.id),self.find_by_id(d.data.id));self.force.start();}}}}}
d.data.collapsed=false;self.vis.selectAll('.vmCount').filter(filterNode(d.data))[0][0].textContent='';var i=0;while(i<=100){self.force.tick();i++;}}},new_link:function(source,target){var self=this;self.links.push({source:source,target:target});var line=self.vis.selectAll('line.link').data(self.links);line.enter().insert('line','g.node').attr('class','link').attr('x1',function(d){return d.source.x;}).attr('y1',function(d){return d.source.y;}).attr('x2',function(d){return d.target.x;}).attr('y2',function(d){return d.target.y;}).style('stroke','black').style('stroke-width',2);},find_by_id:function(id){var self=this;var obj,_i,_len,_ref;_ref=self.vis.selectAll('g.node').data();for(_i=0,_len=_ref.length;_i<_len;_i++){obj=_ref[_i];if(obj.data.id==id){return obj;}}
return undefined;},already_in_graph:function(data,node){if(data==this.data.ports){for(var p in data){if(JSON.stringify(data[p])==JSON.stringify(node)){return true;}}
return false;}
for(var n in data){if(n==node.id){return true;}}
return false;},load_topology:function(data){var self=this;var net,_i,_netlen,_netref,rou,_j,_roulen,_rouref,port,_l,_portlen,_portref,ser,_k,_serlen,_serref,obj,vmCount;var change=false;var filterNode=function(obj){return function(d){return obj==d.data;};};_netref=data.networks;for(_i=0,_netlen=_netref.length;_i<_netlen;_i++){net=_netref[_i];var network=null;if(net['router:external']===true){network=new ExternalNetwork(net);}else{network=new Network(net);}
if(!self.already_in_graph(self.data.networks,network)){self.new_node(network);change=true;}else{obj=self.find_by_id(network.id);if(obj){network.collapsed=obj.data.collapsed;network.instances=obj.data.instances;obj.data=network;}}
self.data.networks[network.id]=network;}
_rouref=data.routers;for(_j=0,_roulen=_rouref.length;_j<_roulen;_j++){rou=_rouref[_j];var router=new Router(rou);if(!self.already_in_graph(self.data.routers,router)){self.new_node(router);change=true;}else{obj=self.find_by_id(router.id);if(obj){router.networks=obj.data.networks;router.ports=obj.data.ports;obj.data=router;}}
self.data.routers[router.id]=router;}
_serref=data.servers;for(_k=0,_serlen=_serref.length;_k<_serlen;_k++){ser=_serref[_k];var server=new Server(ser);if(!self.already_in_graph(self.data.servers,server)){self.new_node(server);change=true;}else{obj=self.find_by_id(server.id);if(obj){server.networks=obj.data.networks;server.ip_addresses=obj.data.ip_addresses;obj.data=server;}else if(self.data.servers[server.id]!==undefined){server.networks=self.data.servers[server.id].networks;server.ip_addresses=self.data.servers[server.id].ip_addresses;}}
self.data.servers[server.id]=server;}
_portref=data.ports;for(_l=0,_portlen=_portref.length;_l<_portlen;_l++){port=_portref[_l];if(!self.already_in_graph(self.data.ports,port)){var device=self.find_by_id(port.device_id);var _network=self.find_by_id(port.network_id);if(angular.isDefined(device)&&angular.isDefined(_network)){if(port.device_owner&&port.device_owner.startsWith('compute:')){_network.data.instances++;device.data.networks.push(_network.data);if(port.fixed_ips){for(var ip in port.fixed_ips){if(!listContains(port.fixed_ips[ip],device.data.ip_addresses)){device.data.ip_addresses.push(port.fixed_ips[ip]);}}}
if(_network.data.collapsed){if(device.data.networks.length==1){self.data.servers[device.data.id].networks=device.data.networks;self.data.servers[device.data.id].ip_addresses=device.data.ip_addresses;self.removeNode(self.data.servers[port.device_id]);vmCount=Number(self.vis.selectAll('.vmCount').filter(filterNode(_network.data))[0][0].textContent);self.vis.selectAll('.vmCount').filter(filterNode(_network.data))[0][0].textContent=vmCount+1;continue;}}}else if(port.device_owner=='network:router_interface'){device.data.networks.push(_network.data);device.data.ports.push(port);}else if(device.data.ports){device.data.ports.push(port);}
self.new_link(self.find_by_id(port.device_id),self.find_by_id(port.network_id));change=true;}else if(angular.isDefined(_network)&&port.device_owner&&port.device_owner.startsWith('compute:')){if(_network.data.collapsed){server=self.data.servers[port.device_id];server.networks.push(_network.data);if(port.fixed_ips){for(var ip in port.fixed_ips){server.ip_addresses.push(port.fixed_ips[ip]);}}
self.new_node(server);vmCount=Number(self.vis.selectAll('.vmCount').filter(filterNode(server.networks[0]))[0][0].textContent);if(vmCount==1){self.vis.selectAll('.vmCount').filter(filterNode(server.networks[0]))[0][0].textContent='';}else{self.vis.selectAll('.vmCount').filter(filterNode(server.networks[0]))[0][0].textContent=vmCount-1;}
self.new_link(self.find_by_id(port.device_id),self.find_by_id(server.networks[0].id));self.new_link(self.find_by_id(port.device_id),self.find_by_id(port.network_id));change=true;}}}
self.data.ports[port.id+port.device_id+port.network_id]=port;}
if(change){self.force.start();}
self.load_config();self.$loading_template.hide();},removeNode:function(obj){var filterNetwork,filterNode,n,node,_i,_len,_ref;_ref=this.nodes;for(_i=0,_len=_ref.length;_i<_len;_i++){n=_ref[_i];if(n.data===obj){node=n;break;}}
if(node){this.nodes.splice(this.nodes.indexOf(node),1);filterNode=function(obj){return function(d){return obj===d.data;};};filterNetwork=function(obj){return function(d){return obj===d.network.data;};};if(obj instanceof Network){this.vis.selectAll('.hulls').filter(filterNetwork(obj)).remove();}
this.vis.selectAll('g.node').filter(filterNode(obj)).remove();return this.removeNodesLinks(obj);}},removeNodesLinks:function(node){var l,linksToRemove,_i,_j,_len,_len1,_ref;linksToRemove=[];_ref=this.links;for(_i=0,_len=_ref.length;_i<_len;_i++){l=_ref[_i];if(l.source.data===node){linksToRemove.push(l);}else if(l.target.data===node){linksToRemove.push(l);}}
for(_j=0,_len1=linksToRemove.length;_j<_len1;_j++){l=linksToRemove[_j];this.removeLink(l);}
return this.force.resume();},removeLink:function(link){var i,index,l,_i,_len,_ref;index=-1;_ref=this.links;for(i=_i=0,_len=_ref.length;_i<_len;i=++_i){l=_ref[i];if(l===link){index=i;break;}}
if(index!==-1){this.links.splice(index,1);}
return this.vis.selectAll('line.link').data(this.links).exit().remove();},delete_device:function(device_type,deviceId){var message={id:deviceId};var target=device_type==='instance'?'instance?id='+deviceId:device_type;horizon.networktopologymessager.post_message(deviceId,target,message,device_type,'delete',data={});},remove_node_on_delete:function(deleteData){var self=this;var deviceId=deleteData.device_id;switch(deleteData.device_type){case'router':self.removeNode(self.data.routers[deviceId]);break;case'instance':self.removeNode(self.data.servers[deviceId]);this.data.servers[deviceId]=undefined;break;case'network':self.removeNode(self.data.networks[deviceId]);break;case'port':self.removePortOrSubnet(deviceId,deleteData.device_data);break;}
self.delete_balloon();},removePortOrSubnet:function(portId,deviceData){var self=this;var routerId=deviceData.router_id;var networkId=deviceData.network_id;if(routerId){for(var l in self.links){var data=null;if(self.links[l].source.data.id==routerId&&self.links[l].target.data.id==networkId){data=self.links[l].source.data;}else if(self.links[l].target.data.id==routerId&&self.links[l].source.data.id==networkId){data=self.links[l].target.data;}
if(data){for(var p in data.ports){if((data.ports[p].id==portId)&&(data.ports[p].network_id==networkId)){self.removeLink(self.links[l]);var router=self.find_by_id(routerId);router.data.ports.splice(router.data.ports.indexOf(data.ports[p]),1);self.force.start();return;}}}}}else{var networkData=self.find_by_id(networkId).data;var subnets=networkData.subnets;for(var subnet in subnets){if(subnets[subnet].id===portId){if(subnets.length==1){delete(networkData.subnets);}else{subnets.splice(subnet,1);}
self.force.start();break;}}}},delete_port:function(routerId,portId,networkId){var message={id:portId};var data={network_id:networkId,router_id:routerId};if(routerId){horizon.networktopologymessager.post_message(portId,'router/'+routerId+'/',message,'port','delete',data);}else{horizon.networktopologymessager.post_message(portId,'network/'+networkId+'/?tab=network_tabs__subnets_tab',message,'port','delete',data);}},show_balloon:function(d,d2,element){var self=this;var balloonTmpl=self.balloonTmpl;var deviceTmpl=self.balloon_deviceTmpl;var portTmpl=self.balloon_portTmpl;var netTmpl=self.balloon_netTmpl;var instanceTmpl=self.balloon_instanceTmpl;var balloonID='bl_'+d.id;var ports=[];var subnets=[];if(self.balloonID){if(self.balloonID==balloonID){self.delete_balloon();return;}
self.delete_balloon();}
self.force.stop();if(d.hasOwnProperty('ports')){angular.element.each(d.ports,function(i,port){var object={};object.id=port.id;object.router_id=port.device_id;object.url=port.url;object.port_status=port.status;object.port_status_class=(port.original_status==='ACTIVE')?'active':'down';var ipAddress='';try{for(var ip in port.fixed_ips){ipAddress+=port.fixed_ips[ip].ip_address+' ';}}catch(e){ipAddress=gettext('None');}
var deviceOwner='';try{deviceOwner=port.device_owner.replace('network:','');}catch(e){deviceOwner=gettext('None');}
var networkId='';try{networkId=port.network_id;}catch(e){networkId=gettext('None');}
object.ip_address=ipAddress;object.device_owner=deviceOwner;object.network_id=networkId;object.is_interface=(deviceOwner==='router_interface'||deviceOwner==='router_gateway'||deviceOwner==='ha_router_replicated_interface');ports.push(object);});}else if(d.hasOwnProperty('subnets')){angular.element.each(d.subnets,function(i,snet){var object={};object.id=snet.id;object.cidr=snet.cidr;object.url=snet.url;subnets.push(object);});}
var htmlData={balloon_id:balloonID,id:d.id,url:d.url,name:d.name,type:d.type,delete_label:gettext('Delete'),status:d.status,status_class:(d.original_status==='ACTIVE')?'active':'down',status_label:gettext('STATUS'),id_label:gettext('ID'),interfaces_label:gettext('Interfaces'),subnets_label:gettext('Subnets'),delete_interface_label:gettext('Delete Interface'),delete_subnet_label:gettext('Delete Subnet'),open_console_label:gettext('Open Console'),view_details_label:gettext('View Details'),ips_label:gettext('IP Addresses')};var html;if(d instanceof Router){htmlData.delete_label=gettext('Delete Router');htmlData.view_details_label=gettext('View Router Details');htmlData.port=ports;htmlData.add_interface_url='router/'+d.id+'/addinterface';htmlData.add_interface_label=gettext('Add Interface');html=balloonTmpl.render(htmlData,{table1:deviceTmpl,table2:portTmpl});}else if(d instanceof Server){htmlData.delete_label=gettext('Delete Instance');htmlData.view_details_label=gettext('View Instance Details');htmlData.console_id=d.id;htmlData.ips=d.ip_addresses;htmlData.console=d.console;html=balloonTmpl.render(htmlData,{table1:deviceTmpl,table2:instanceTmpl});}else if(d instanceof Network||d instanceof ExternalNetwork){for(var s in subnets){subnets[s].network_id=d.id;}
htmlData.subnet=subnets;if(d instanceof Network){htmlData.delete_label=gettext('Delete Network');}
htmlData.add_subnet_url='network/'+d.id+'/subnet/create';htmlData.add_subnet_label=gettext('Create Subnet');html=balloonTmpl.render(htmlData,{table1:deviceTmpl,table2:netTmpl});}else{return;}
angular.element(self.svg_container).append(html);var devicePosition=self.getScreenCoords(d2.x,d2.y);var x=devicePosition.x;var y=devicePosition.y;var xoffset=100;var yoffset=95;angular.element('#'+balloonID).css({'left':x+xoffset+'px','top':y+yoffset+'px'}).show();var _balloon=angular.element('#'+balloonID);if(element.x+_balloon.outerWidth()>angular.element(window).outerWidth()){_balloon.css({'left':0+'px'}).css({'left':(x-_balloon.outerWidth()+'px')}).addClass('leftPosition');}
_balloon.find('.delete-device').click(function(){var _this=angular.element(this);var delete_modal=horizon.datatables.confirm(_this);delete_modal.find('.btn.btn-danger').click(function(){_this.prop('disabled',true);d3.select('#id_'+_this.data('device-id')).classed('loading',true);self.delete_device(_this.data('type'),_this.data('device-id'));});});_balloon.find('.delete-port').click(function(){var _this=angular.element(this);var delete_modal=horizon.datatables.confirm(_this);delete_modal.find('.btn.btn-danger').click(function(){_this.prop('disabled',true);self.delete_port(_this.data('router-id'),_this.data('port-id'),_this.data('network-id'));});});self.balloonID=balloonID;},delete_balloon:function(){var self=this;if(self.balloonID){angular.element('#'+self.balloonID).remove();self.balloonID=null;self.force.start();}},svgs:function(name){switch(name){case'router':return'm 26.628571,16.08 -8.548572,0 0,8.548571 2.08,-2.079998 6.308572,6.30857 4.38857,-4.388572 -6.308571,-6.30857 z m -21.2571429,-4.159999 8.5485709,0 0,-8.5485723 -2.08,2.08 L 5.5314281,-0.85714307 1.1428571,3.5314287 7.4514281,9.84 z m -3.108571,7.268571 0,8.548571 8.5485709,0 L 8.7314281,25.657144 15.039999,19.325715 10.674285,14.96 4.3428571,21.268573 z M 29.737142,8.8114288 l 0,-8.54857147 -8.548572,0 2.08,2.07999987 -6.308571,6.3085716 4.388572,4.3885722 6.308571,-6.3085723 z';default:return'';}}};horizon.Volumes={selected_volume_type:null,volume_types:[],initWithTypes:function(volume_types){this.volume_types=volume_types;this._attachInputHandlers();this.getSelectedType();this.showTypeDescription();$("#id_volume_source_type").change(this._toggleTypeSelector);},getSelectedType:function(){this.selected_volume_type=$.grep(this.volume_types,function(type){var selected_name=$("#id_type").children(":selected").val();return type.name===selected_name;})[0];return this.selected_volume_type;},showTypeDescription:function(){this.getSelectedType();if(this.selected_volume_type){var description=this.selected_volume_type.description;var name=this.selected_volume_type.name;$("#id_show_volume_type_name").html(name);if(description){$("#id_show_volume_type_desc").html(description);}else{$("#id_show_volume_type_desc").html(gettext('No description available.'));}}else{this.toggleTypeDescription(true);}},toggleTypeDescription:function(hide){var selected_volume_source=$("#id_volume_source_type").children(":selected").val();if(hide||selected_volume_source==='volume_source'||selected_volume_source==='snapshot_source'){$("#id_show_volume_type_desc_div").hide();}
else{$("#id_show_volume_type_desc_div").show();}},_attachInputHandlers:function(){var scope=this;var eventCallback_type=function(){scope.showTypeDescription();};$('#id_type').on('change',eventCallback_type);var eventCallback_volume_source_type=function(){scope.toggleTypeDescription();};$('#id_volume_source_type').on('change',eventCallback_volume_source_type);},_toggleTypeSelector:function(){var createFromSnapshot=$("#id_volume_source_type").children(":selected").val()==='snapshot_source';$("#id_type").closest(".form-group").toggleClass("hidden",createFromSnapshot);}};(function(){'use strict';angular.module('horizon.auth',['horizon.auth.login']);})();(function(){'use strict';angular.module('horizon.auth.login',[],config);config.$inject=['$provide','$windowProvider'];function config($provide,$windowProvider){var path=$windowProvider.$get().STATIC_URL+'auth/login/';$provide.constant('horizon.auth.login.basePath',path);}})();(function(){'use strict';angular.module('horizon.framework',['horizon.framework.conf','horizon.framework.util','horizon.framework.widgets']).config(config).run(run).factory('horizon.framework.redirect',httpRedirectLogin).constant('horizon.framework.events',{FORCE_LOGOUT:'FORCE_LOGOUT'});config.$inject=['$injector','$provide','$interpolateProvider','$httpProvider','$windowProvider'];function config($injector,$provide,$interpolateProvider,$httpProvider,$windowProvider){var path=$windowProvider.$get().STATIC_URL+'framework/';$provide.constant('horizon.framework.basePath',path);$interpolateProvider.startSymbol('{$');$interpolateProvider.endSymbol('$}');$httpProvider.defaults.xsrfHeaderName='X-CSRFToken';$httpProvider.defaults.xsrfCookieName='csrftoken';$httpProvider.defaults.headers.common['X-Requested-With']='XMLHttpRequest';$httpProvider.defaults.headers.common['Content-Type']='application/json;charset=utf-8';if($injector.has('dropdownToggleDirective')){$provide.decorator('dropdownToggleDirective',patchDropdowns);}
patchDropdowns.$inject=['$delegate'];function patchDropdowns($delegate){var directive=$delegate[0];directive.restrict='A';return $delegate;}
$httpProvider.interceptors.push(httpRedirectLogin);$httpProvider.interceptors.push(stripAjaxHeaderForCORS);stripAjaxHeaderForCORS.$inject=[];function stripAjaxHeaderForCORS(){return{request:function(config){if('X-Auth-Token'in config.headers){delete config.headers['X-Requested-With'];}
return config;}};}}
run.$inject=['$window','$rootScope'];function run($window,$rootScope){$window.recompileAngularContent=recompileAngularContent;function recompileAngularContent($element){function explicit($compile){$element.find('[ng-click]').off('click');$compile($element)($rootScope);}
explicit.$inject=['$compile'];$element.injector().invoke(explicit);}}
httpRedirectLogin.$inject=['$q','$rootScope','$window','horizon.framework.events','horizon.framework.widgets.toast.service'];function httpRedirectLogin($q,$rootScope,$window,frameworkEvents,toastService){return{responseError:function(error){if(error.status===401){var msg=gettext('Unauthorized. Redirecting to login');handleRedirectMessage(msg,$rootScope,$window,frameworkEvents,toastService);}
if(error.status===403){var msg2=gettext('Forbidden. Redirecting to login');handleRedirectMessage(msg2,$rootScope,$window,frameworkEvents,toastService);}
return $q.reject(error);}};}
function handleRedirectMessage(msg,$rootScope,$window,frameworkEvents,toastService){var toast=toastService.find('error',msg);if(!toast){toastService.add('error',msg);$rootScope.$broadcast(frameworkEvents.FORCE_LOGOUT,msg);}
$window.location.replace($window.WEBROOT+'auth/logout');}})();(function(){'use strict';angular.module('horizon.framework.util.actions',[]);})();(function(){'use strict';angular.module('horizon.framework.util.bind-scope',[]);})();(function(){'use strict';angular.module('horizon.framework.util.extensible',[]);})();(function(){'use strict';angular.module('horizon.framework.util.file',[]);})();(function(){'use strict';angular.module('horizon.framework.util.filters',['horizon.framework.util.i18n']);})();(function(){'use strict';angular.module('horizon.framework.util.promise-toggle',[]);})();(function(){'use strict';angular.module('horizon.framework.util.q',[]);})();(function(){'use strict';angular.module('horizon.framework.util.tech-debt',[]);})();(function(){'use strict';angular.module('horizon.framework.util',['horizon.framework.util.actions','horizon.framework.util.bind-scope','horizon.framework.util.file','horizon.framework.util.filters','horizon.framework.util.http','horizon.framework.util.i18n','horizon.framework.util.promise-toggle','horizon.framework.util.q','horizon.framework.util.tech-debt','horizon.framework.util.uuid','horizon.framework.util.workflow','horizon.framework.util.validators','horizon.framework.util.extensible']).config(config);config.$inject=['$provide','$windowProvider'];function config($provide,$windowProvider){var path=$windowProvider.$get().STATIC_URL+'framework/util/';$provide.constant('horizon.framework.util.basePath',path);}})();(function(){'use strict';angular.module('horizon.framework.util.validators',[]);})();(function(){'use strict';angular.module('horizon.framework.util.workflow',[]);})();(function(){'use strict';angular.module('horizon.framework.widgets.action-list',[]).constant('horizon.framework.widgets.action-list.tooltipConfig',{defaultTemplate:'<div>{$ ::message $}</div>',defaultMessage:{message:gettext('The action cannot be performed. The contents of this row have errors or are missing information.')}});})();(function(){'use strict';angular.module('horizon.framework.widgets.charts',[]).constant('horizon.framework.widgets.charts.donutChartSettings',{innerRadius:24,outerRadius:36,titleClass:'pie-chart-title-medium',showTitle:true,showLabel:true,showLegend:true,tooltipIcon:'fa-square'}).constant('horizon.framework.widgets.charts.pieChartSettings',{innerRadius:0,outerRadius:30,titleClass:'pie-chart-title-medium',showTitle:true,showLabel:true,showLegend:true,tooltipIcon:'fa-square'}).constant('horizon.framework.widgets.charts.quotaChartDefaults',{usageLabel:gettext('Current Usage'),usageColorClass:'usage',addedLabel:gettext('Added'),addedColorClass:'added',remainingLabel:gettext('Remaining'),remainingColorClass:'remaining'}).filter('showKeyFilter',showKeyFilter);function showKeyFilter(){return function(items){return items.filter(function(item){return!item.hideKey;});};}})();(function(){'use strict';angular.module('horizon.framework.widgets.contenteditable',[]);})();(function(){'use strict';angular.module('horizon.framework.widgets.details',[]);})();(function(){'use strict';angular.module('horizon.framework.widgets.form',[]);})();(function(){'use strict';angular.module('horizon.framework.widgets.headers',[]).config(config);config.$inject=['$provide','$windowProvider'];function config($provide,$windowProvider){var path=$windowProvider.$get().STATIC_URL+'framework/widgets/headers/';$provide.constant('horizon.framework.widgets.headers.basePath',path);}})();(function(){'use strict';angular.module('horizon.framework.widgets.help-panel',[]);})();(function(){'use strict';angular.module('horizon.framework.widgets.load-edit',[]).config(config);config.$inject=['$provide','$windowProvider'];function config($provide,$windowProvider){var path=$windowProvider.$get().STATIC_URL+'framework/widgets/load-edit/';$provide.constant('horizon.framework.widgets.load-edit.basePath',path);}})();(function(){'use strict';angular.module('horizon.framework.widgets.magic-search',['ui.bootstrap']).constant('horizon.framework.widgets.magic-search.events',{TEXT_SEARCH:'textSearch',SEARCH_UPDATED:'searchUpdated',CHECK_FACETS:'checkFacets',FACETS_CHANGED:'facetsChanged',SERVER_SEARCH_UPDATED:'serverSearchUpdated',INIT_SEARCH:'initSearch'});})();(function(){'use strict';angular.module('horizon.framework.widgets.metadata.display',[],config);config.$inject=['$provide','$windowProvider'];function config($provide,$windowProvider){var path=$windowProvider.$get().STATIC_URL+'framework/widgets/metadata/display/';$provide.constant('horizon.framework.widgets.metadata.display.basePath',path);}})();(function(){'use strict';angular.module('horizon.framework.widgets.metadata',['horizon.framework.widgets.metadata.tree','horizon.framework.widgets.metadata.display'],config);config.$inject=['$provide','$windowProvider'];function config($provide,$windowProvider){var path=$windowProvider.$get().STATIC_URL+'framework/widgets/metadata/';$provide.constant('horizon.framework.widgets.metadata.basePath',path);}})();(function(){'use strict';angular.module('horizon.framework.widgets.metadata.tree',[],config).constant('horizon.framework.widgets.metadata.tree.defaults',{text:{help:gettext('You can specify resource metadata by moving items from the left column to the right column. In the left column there are metadata definitions from the Glance Metadata Catalog. Use the "Custom" option to add metadata with the key of your choice.'),item_help:gettext('Click each item to get its description here.'),min:gettext('Min'),max:gettext('Max'),minLength:gettext('Min length'),maxLength:gettext('Max length'),patternMismatch:gettext('Pattern mismatch'),integerRequired:gettext('Integer required'),decimalRequired:gettext('Decimal required'),required:gettext('Required'),duplicate:gettext('Duplicate keys are not allowed'),filter:gettext('Filter'),available:gettext('Available Metadata'),existing:gettext('Existing Metadata'),custom:gettext('Custom'),noAvailable:gettext('No available metadata'),noExisting:gettext('No existing metadata')}});config.$inject=['$provide','$windowProvider'];function config($provide,$windowProvider){var path=$windowProvider.$get().STATIC_URL+'framework/widgets/metadata/tree/';$provide.constant('horizon.framework.widgets.metadata.tree.basePath',path);}})();(function(){'use strict';angular.module('horizon.framework.widgets.modal-wait-spinner',[]);})();(function(){'use strict';angular.module('horizon.framework.widgets.modal',[]);})();(function(){'use strict';angular.module('horizon.framework.widgets.panel',[]);})();(function(){'use strict';angular.module('horizon.framework.widgets.property',[]);})();(function(){'use strict';angular.module('horizon.framework.widgets.table',['smart-table']).constant('horizon.framework.widgets.table.expandSettings',{expandIconClasses:'fa-chevron-right fa-chevron-down',duration:100}).constant('horizon.framework.widgets.table.filterPlaceholderText',gettext('Filter')).constant('horizon.framework.widgets.table.events',{CLEAR_SELECTIONS:'hzTable:clearSelections',ROW_SELECTED:'hzTable:rowSelected',ROW_EXPANDED:'hzTable:rowExpanded'}).config(['stConfig','$windowProvider',function(stConfig,$windowProvider){var path=$windowProvider.$get().STATIC_URL+'framework/widgets/table/';stConfig.pagination.template=path+'pagination.html';}]);})();(function(){'use strict';angular.module('horizon.framework.widgets.toast',[]);})();(function(){'use strict';angular.module('horizon.framework.widgets.transfer-table',[]).constant('horizon.framework.widgets.transfer-table.helpText',{allocTitle:gettext('Allocated'),availTitle:gettext('Available'),availHelpText:gettext('Select one'),noneAllocText:gettext('Select an item from Available items below'),noneAvailText:gettext('No available items'),allocHiddenText:gettext('Expand to see allocated items'),availHiddenText:gettext('Expand to see available items'),sectionToggleText:gettext('Click to show or hide'),orderText:gettext('Re-order items using drag and drop'),expandDetailsText:gettext('Click to see more details')}).constant('horizon.framework.widgets.transfer-table.limits',{maxAllocation:1}).constant('horizon.framework.widgets.transfer-table.events',events());function events(){return{TABLES_CHANGED:'horizon.framework.widgets.transfer-table.TABLES_CHANGED'};}})();(function(){'use strict';angular.module('horizon.framework.widgets',['horizon.framework.widgets.headers','horizon.framework.widgets.contenteditable','horizon.framework.widgets.details','horizon.framework.widgets.form','horizon.framework.widgets.help-panel','horizon.framework.widgets.wizard','horizon.framework.widgets.property','horizon.framework.widgets.table','horizon.framework.widgets.modal','horizon.framework.widgets.modal-wait-spinner','horizon.framework.widgets.panel','horizon.framework.widgets.transfer-table','horizon.framework.widgets.charts','horizon.framework.widgets.action-list','horizon.framework.widgets.metadata','horizon.framework.widgets.toast','horizon.framework.widgets.magic-search','horizon.framework.widgets.load-edit']).config(config);config.$inject=['$provide','$windowProvider'];function config($provide,$windowProvider){var path=$windowProvider.$get().STATIC_URL+'framework/widgets/';$provide.constant('horizon.framework.widgets.basePath',path);}})();(function(){'use strict';angular.module('horizon.framework.widgets.wizard',[]).constant('horizon.framework.widgets.wizard.labels',{cancel:gettext('Cancel'),back:gettext('Back'),next:gettext('Next'),finish:gettext('Finish')}).constant('horizon.framework.widgets.wizard.events',{ON_INIT_SUCCESS:'ON_INIT_SUCCESS',ON_INIT_ERROR:'ON_INIT_ERROR',ON_SWITCH:'ON_SWITCH',BEFORE_SUBMIT:'BEFORE_SUBMIT',AFTER_SUBMIT:'AFTER_SUBMIT'});})();(function(){'use strict';angular.module('horizon.auth.login').directive('hzLoginFinder',hzLoginFinder);hzLoginFinder.$inject=['$timeout'];function hzLoginFinder($timeout){return{restrict:'A',controller:'hzLoginController',link:function(scope,element,attrs,ctrl){var authType=element.find('#id_auth_type');var userInput=element.find("#id_username").parents('.form-group');var passwordInput=element.find("#id_password").parents('.form-group');var domainInput=element.find('#id_domain').parents('.form-group');var regionInput=element.find('#id_region').parents('.form-group');var helpText=element.parent().find('.help_text');helpText.hide();function onChange(){$timeout(function(){ctrl.auth_type=authType.val();switch(ctrl.auth_type){case'credentials':userInput.show();passwordInput.show();domainInput.show();regionInput.show();break;default:userInput.hide();passwordInput.hide();domainInput.hide();regionInput.hide();}});}
if(authType.length>0){authType.after(helpText);helpText.show();onChange();authType.change(onChange);}}};}})();(function(){'use strict';angular.module('horizon.auth.login').controller('hzLoginController',function(){var ctrl=this;ctrl.auth_type='credentials';});})();(function(){'use strict';angular.module('horizon.framework.conf',[]).value('horizon.framework.conf.toastOptions',{'delay':3000,'dimissible':['alert-success','alert-info']}).value('horizon.framework.conf.tableOptions',{'pageSize':20});})();(function(){'use strict';angular.module('horizon.framework.conf').service('horizon.framework.conf.permissions.service',Permissions);Permissions.$inject=['$q'];function Permissions($q){var service={checkAllowed:checkAllowed,checkAll:checkAll,extendedPermissions:extendedPermissions};return service;function checkAllowed(configItem){if(angular.isFunction(configItem.allowed)){return configItem.allowed();}else{return $q.when(true);}}
function checkAll(configItem){var promises=[];promises=promises.concat(getConfigurationPromises(configItem));promises.push(checkAllowed(configItem));return $q.all(promises);}
function extendedPermissions(){return{};}
function getConfigurationPromises(configItem){var promises=[];angular.forEach(service.extendedPermissions,checkPermissions);function checkPermissions(permissionResolver,permissionName){var permissionInput=configItem[permissionName];if(angular.isArray(permissionInput)){angular.forEach(permissionInput,function addPermissionCheck(singlePermissionInput){promises.push(permissionResolver(singlePermissionInput));});}else if(angular.isDefined(permissionInput)){promises.push(permissionResolver(permissionInput));}}
return promises;}}})();(function(){'use strict';angular.module('horizon.framework.conf').factory('horizon.framework.conf.resource-type-registry.service',registryService);registryService.$inject=['horizon.framework.util.extensible.service','$log'];function registryService(extensibleService,$log){function ResourceType(typeCode){var self=this;var names=[];var properties={};self.type=typeCode;self.initActions=initActions;self.setProperty=setProperty;self.setProperties=setProperties;self.getProperties=getProperties;self.getName=getName;self.setNames=setNames;self.label=label;self.load=defaultLoadFunction;self.setLoadFunction=setLoadFunction;self.isLoadFunctionSet=isLoadFunctionSet;self.list=defaultListFunction;self.setListFunction=setListFunction;self.isListFunctionSet=isListFunctionSet;self.itemInTransitionFunction=defaultItemInTransitionFunction;self.setItemInTransitionFunction=setItemInTransitionFunction;self.itemName=itemName;self.setItemNameFunction=setItemNameFunction;self.setPathParser=setPathParser;self.parsePath=parsePath;self.setPathGenerator=setPathGenerator;self.path=path;self.needsFilterFirstFunction=defaultNeedsFilterFirstFunction;self.setNeedsFilterFirstFunction=setNeedsFilterFirstFunction;self.itemActions=[];extensibleService(self.itemActions,self.itemActions);self.batchActions=[];extensibleService(self.batchActions,self.batchActions);self.globalActions=[];extensibleService(self.globalActions,self.globalActions);self.detailsViews=[];extensibleService(self.detailsViews,self.detailsViews);self.tableColumns=[];extensibleService(self.tableColumns,self.tableColumns);self.getTableColumns=getTableColumns;self.filterFacets=[];extensibleService(self.filterFacets,self.filterFacets);self.summaryTemplateUrl=false;self.setSummaryTemplateUrl=setSummaryTemplateUrl;function initActions(){angular.forEach(self.itemActions,setActionScope);angular.forEach(self.batchActions,setActionScope);angular.forEach(self.globalActions,setActionScope);function setActionScope(action){if(action.service.initAction){action.service.initAction();}}}
function setProperty(name,prop){properties[name]=prop;return self;}
function setProperties(properties){angular.forEach(properties,function(value,key){var prop=angular.isString(value)?{label:value}:value;setProperty(key,prop);});return this;}
function getProperties(){return angular.copy(properties);}
function setListFunction(func){self.list=func;return self;}
function isListFunctionSet(){return self.list!==defaultListFunction;}
function defaultListFunction(){$log.error('No list function defined for',typeCode);return Promise.reject({data:{items:[]}});}
function defaultItemInTransitionFunction(){return false;}
function setItemInTransitionFunction(func){self.itemInTransitionFunction=func;return self;}
function getTableColumns(){return self.tableColumns.map(mapTableInfo);function mapTableInfo(x){var tableInfo=x;tableInfo.title=x.title||label(x.id);if(properties[x.id]&&properties[x.id].values){tableInfo.values=properties[x.id].values;}
if(properties[x.id]&&properties[x.id].filters){tableInfo.filters=properties[x.id].filters;}
return tableInfo;}}
function setPathParser(func){self.parsePath=func;return self;}
function parsePath(subpath){return subpath;}
function setLoadFunction(func){self.load=func;return self;}
function isLoadFunctionSet(){return self.load!==defaultLoadFunction;}
function defaultLoadFunction(spec){$log.error('No load function defined for',typeCode,'with spec',spec);return Promise.reject({data:{}});}
function setPathGenerator(func){self.path=func;return self;}
function path(item){return''+item.id;}
function setSummaryTemplateUrl(url){self.summaryTemplateUrl=url;return self;}
function setItemNameFunction(func){self.itemName=func;return self;}
function itemName(item){return item.name;}
function getName(count){if(names){return ngettext.apply(null,names.concat([count]));}}
function setNames(singular,plural){names=[singular,plural];return self;}
function label(name){var prop=properties[name];if(angular.isDefined(prop)&&angular.isDefined(prop.label)){return prop.label;}
return name;}
function defaultNeedsFilterFirstFunction(){return Promise.resolve(false);}
function setNeedsFilterFirstFunction(func){self.needsFilterFirstFunction=func;return self;}}
var registry={resourceTypes:{},defaultSummaryTemplateUrl:false,defaultDetailsTemplateUrl:false,getResourceType:getResourceType,getGlobalActions:getGlobalActions,setDefaultSummaryTemplateUrl:setDefaultSummaryTemplateUrl,getDefaultSummaryTemplateUrl:getDefaultSummaryTemplateUrl,setDefaultDetailsTemplateUrl:setDefaultDetailsTemplateUrl,getDefaultDetailsTemplateUrl:getDefaultDetailsTemplateUrl};function getDefaultSummaryTemplateUrl(){return registry.defaultSummaryTemplateUrl;}
function setDefaultSummaryTemplateUrl(url){registry.defaultSummaryTemplateUrl=url;return registry;}
function getDefaultDetailsTemplateUrl(){return registry.defaultDetailsTemplateUrl;}
function setDefaultDetailsTemplateUrl(url){registry.defaultDetailsTemplateUrl=url;return registry;}
function getGlobalActions(){var actions=[];angular.forEach(registry.resourceTypes,appendActions);return actions;function appendActions(type){actions=actions.concat(type.globalActions);}}
function getResourceType(typeCode){if(!registry.resourceTypes.hasOwnProperty(typeCode)){registry.resourceTypes[typeCode]=new ResourceType(typeCode);}
return registry.resourceTypes[typeCode];}
return registry;}})();(function(){'use strict';angular.module('horizon.framework.util.actions').factory('horizon.framework.util.actions.action-result.service',factory);function factory(){return{getActionResult:getActionResult,getIdsOfType:getIdsOfType};function getIdsOfType(items,type){return items?items.reduce(typeIdReduce,[]):[];function typeIdReduce(accumulator,item){if(angular.isUndefined(type)||item.type===type){accumulator.push(item.id);}
return accumulator;}}
function getActionResult(){return new ActionResult();}
function ActionResult(){this.result={created:[],updated:[],deleted:[],failed:[]};this.created=created;this.updated=updated;this.deleted=deleted;this.failed=failed;function created(type,id){this.result.created.push({type:type,id:id});return this;}
function updated(type,id){this.result.updated.push({type:type,id:id});return this;}
function deleted(type,id){this.result.deleted.push({type:type,id:id});return this;}
function failed(type,id){this.result.failed.push({type:type,id:id});return this;}}}})();(function(){'use strict';angular.module('horizon.framework.util.bind-scope').directive('bindScope',bindScope);function bindScope(){var directive={restrict:'A',link:link};return directive;function link(scope,element,attrs,ctrl,transclude){if(transclude){transclude(scope,function(clone){var detailElt=element.find('[bind-scope-target]');if(detailElt.length){detailElt.append(clone);}});}}}})();(function(){'use strict';var $controller;angular.module('horizon.framework.util.extensible').factory('horizon.framework.util.extensible.service',extensibleService);extensibleService.$inject=['$controller'];function extensibleService(_$controller_){$controller=_$controller_;return makeExtensible;}
function makeExtensible(container,items){container.append=function(item,priority){if(!angular.isNumber(priority)){priority=Infinity;}
var itemsByPosition=getItemsByPosition(items,'last').reverse();var index=items.length;for(var i=0;i<itemsByPosition.length;i++){if(priority>itemsByPosition[i]._ext.priority){index=getItemIndex(items,itemsByPosition[i].id);break;}}
item._ext={position:'last',priority:priority};items.splice(index,0,item);return container;};container.prepend=function(item,priority){if(!angular.isNumber(priority)){priority=Infinity;}
var itemsByPosition=getItemsByPosition(items,'first');var index=itemsByPosition.length;for(var i=0;i<itemsByPosition.length;i++){if(priority<=itemsByPosition[i]._ext.priority){index=getItemIndex(items,itemsByPosition[i].id);break;}}
item._ext={position:'first',priority:priority};items.splice(index,0,item);return container;};container.after=function(id,item,priority){if(!angular.isNumber(priority)){priority=Infinity;}
var itemsByPosition=getItemsByPosition(items,'after-'+id);var index=getItemIndex(items,id)+itemsByPosition.length+1;for(var i=0;i<itemsByPosition.length;i++){if(priority<=itemsByPosition[i]._ext.priority){index=getItemIndex(items,itemsByPosition[i].id);break;}}
item._ext={position:'after-'+id,priority:priority};items.splice(index,0,item);return container;};container.remove=function(id){var index=getItemIndex(items,id);items.splice(index,1);return container;};container.replace=function(id,item){var index=getItemIndex(items,id);container.remove(id);items.splice(index,0,item);return container;};container.controllers=[];container.initControllers=function($scope){angular.forEach(container.controllers,function(ctrl){$controller(ctrl,{$scope:$scope});});};container.addController=function(ctrl){container.controllers.push(ctrl);return container;};}
function getItemsByPosition(items,position){return items.filter(function filterItems(item){return item._ext&&item._ext.position===position;}).sort(function sortItems(a,b){return a._ext.priority-b._ext.priority||1;});}
function getItemIndex(items,id){for(var i=0;i<items.length;i++){if(items[i].id===id){return i;}}
throw new Error(interpolate('Item with id %(id)s not found.',{id:id},true));}})();(function(){'use strict';angular.module('horizon.framework.util.file').factory('horizon.framework.util.file.file-reader',fileReaderService);fileReaderService.$inject=['$q'];function fileReaderService($q){var service={readTextFile:readTextFile};return service;function readTextFile(file,fileReader){var reader=fileReader||new FileReader();var deferred=$q.defer();reader.onloadend=loadEnd;reader.readAsArrayBuffer(file.slice(0,file.size));return deferred.promise;function loadEnd(e){var charArray=new Uint8Array(e.target.result);var textContent=[].map.call(charArray,strFromCharCode).join('');deferred.resolve(textContent);function strFromCharCode(char){return String.fromCharCode(char);}}}}})();(function(){'use strict';angular.module('horizon.framework.util.file').factory('horizon.framework.util.file.text-download',textDownloadService);textDownloadService.$inject=['$q','$timeout'];function textDownloadService($q,$timeout){var service={downloadTextFile:downloadTextFile};return service;function downloadTextFile(text,filename){var blob=new Blob([text],{"type":"text/plain"});window.URL=window.URL||window.webkitURL;var fileUrl=window.URL.createObjectURL(blob);var a=angular.element('<a></a>');a.attr("href",fileUrl);a.attr("download",filename);a.attr("target","_blank");angular.element(document.body).append(a);var deferred=$q.defer();$timeout(startDownload,0);return deferred.promise;function startDownload(){a[0].click();a.remove();deferred.resolve(filename);}}}})();(function(){'use strict';angular.module('horizon.framework.util.filters').filter('yesno',yesNoFilter).filter('simpleDate',simpleDateFilter).filter('mediumDate',mediumDateFilter).filter('gb',gbFilter).filter('mb',mbFilter).filter('title',titleFilter).filter('noUnderscore',noUnderscoreFilter).filter('noValue',noValueFilter).filter('noName',noNameFilter).filter('decode',decodeFilter).filter('bytes',bytesFilter).filter('itemCount',itemCountFilter).filter('toIsoDate',toIsoDateFilter).filter('limit',limitFilter);yesNoFilter.$inject=['horizon.framework.util.i18n.gettext'];function yesNoFilter(gettext){return function(input){return input?gettext("Yes"):gettext("No");};}
simpleDateFilter.$inject=['$filter'];function simpleDateFilter($filter){return function(input){return $filter('noValue')($filter('date')(input,'short'));};}
mediumDateFilter.$inject=['$filter'];function mediumDateFilter($filter){return function(input){return $filter('noValue')($filter('date')(input,'medium'));};}
function gbFilter(){return function(input){var tb=1024;if(isNaN(input)||null===input){return'';}else if(input>=tb){return interpolate(gettext("%s TB"),[parseFloat(Number(input/tb).toFixed(2))]);}else if(input===''){return interpolate(gettext("0 GB"));}else{return interpolate(gettext("%s GB"),[input.toString()]);}};}
function mbFilter(){return function(input){var gb=1024;if(isNaN(input)||null===input){return'';}else if(input>=gb){return interpolate(gettext("%s GB"),[parseFloat(Number(input/gb).toFixed(2))]);}else if(input===''){return interpolate(gettext("0 MB"));}else{return interpolate(gettext("%s MB"),[input.toString()]);}};}
function titleFilter(){return function(input){if(!angular.isString(input)){return input;}
return input.replace(/(?:^|\s)\S/g,function(a){return a.toUpperCase();});};}
function noUnderscoreFilter(){return function(input){if(!angular.isString(input)){return input;}
return input.replace(/_/g,' ');};}
function noValueFilter(){return function(input,def){if(input===null||angular.isUndefined(input)||angular.isString(input)&&''===input.trim()){return def||gettext('-');}else{return input;}};}
function noNameFilter(){return function(input){return input&&angular.isString(input)?input:gettext('None');};}
function decodeFilter(){return function(input,mapping){var val=mapping[input];return angular.isDefined(val)?val:input;};}
function bytesFilter(){return function(input){var kb=1024;var mb=kb*1024;var gb=mb*1024;var tb=gb*1024;if(isNaN(input)||null===input||input<0){return'';}else if(input>=tb){return interpolate(gettext("%s TB"),[Number(input/tb).toFixed(2)]);}else if(input>=gb){return interpolate(gettext("%s GB"),[Number(input/gb).toFixed(2)]);}else if(input>=mb){return interpolate(gettext("%s MB"),[Number(input/mb).toFixed(2)]);}else if(input>=kb){return interpolate(gettext("%s KB"),[Number(input/kb).toFixed(2)]);}else{return interpolate(gettext("%s bytes"),[Math.floor(input)]);}};}
function itemCountFilter(){function ensureNonNegative(input){var isNumeric=input!==null&&isFinite(input);var number=isNumeric?Math.round(input):0;return number>0?number:0;}
return function(input,totalInput){var format;var count=ensureNonNegative(input);if(angular.isUndefined(totalInput)){format=ngettext('Displaying %s item','Displaying %s items',count);return interpolate(format,[count]);}else{var total=ensureNonNegative(totalInput);format=gettext('Displaying %(count)s of %(total)s items');return interpolate(format,{count:count,total:total},true);}};}
function toIsoDateFilter(){return function(input){return new Date(input).toISOString();};}
limitFilter.$inject=['horizon.framework.util.i18n.gettext'];function limitFilter(gettext){return function(input,value){return angular.isNumber(input)&&input>=0?input:value||gettext('Unlimited');};}})();(function(){'use strict';angular.module('horizon.framework.util.filters').factory('horizon.framework.util.filters.$memoize',$memoize);function $memoize(){return function(func,hasher){var memoize=function(key){var cache=memoize.cache;var address=''+(hasher?hasher.apply(this,arguments):key);if(!cache.hasOwnProperty(address)){cache[address]=func.apply(this,arguments);}
return cache[address];};memoize.cache={};return memoize;};}}());(function(){'use strict';angular.module('horizon.framework.util.http',['ngFileUpload']).service('horizon.framework.util.http.service',ApiService);ApiService.$inject=['$http','$window','Upload'];function ApiService($http,$window,uploadService){var httpCall=function(method,url,data,config){var backend=$http;var external=pop(config,'external');if(!external){url=$window.WEBROOT+url;url=url.replace(/\/+/g,'/');}
if(angular.isUndefined(config)){config={};}
config.method=method;config.url=url;if(angular.isDefined(data)){config.data=data;}
if(uploadService.isFile(config.data)){backend=uploadService.http;}else if(angular.isObject(config.data)){for(var key in config.data){if(config.data.hasOwnProperty(key)&&uploadService.isFile(config.data[key])){backend=uploadService.upload;config.data.$$originalJSON=JSON.stringify(config.data);break;}}}
return backend(config);};this.get=function(url,config){return httpCall('GET',url,null,config);};this.post=function(url,data,config){return httpCall('POST',url,data,config);};this.patch=function(url,data,config){return httpCall('PATCH',url,data,config);};this.put=function(url,data,config){return httpCall('PUT',url,data,config);};this.delete=function(url,data,config){return httpCall('DELETE',url,data,config);};}
function pop(obj,key){if(!angular.isObject(obj)){return undefined;}
var value=obj[key];delete obj[key];return value;}}());(function(){'use strict';angular.module('horizon.framework.util.i18n',[]).factory('horizon.framework.util.i18n.gettext',getText).factory('horizon.framework.util.i18n.ngettext',nGetText);getText.$inject=['$window'];function getText($window){var gettextFunc=$window.gettext||function(x){return x;};return function(){return gettextFunc.apply(this,arguments);};}
nGetText.$inject=['$window'];function nGetText($window){var nGettextFunc=$window.ngettext||function(x){return x;};return function(){return nGettextFunc.apply(this,arguments);};}})();(function(){'use strict';angular.module('horizon.framework.util.promise-toggle').directive('hzPromiseToggleTemplate',hzPromiseToggleTemplate);hzPromiseToggleTemplate.$inject=['$q','$parse'];function hzPromiseToggleTemplate($q,$parse){var directive={name:null,singlePromiseResolver:null,transclude:'element',priority:2000,terminal:true,restrict:'A',compile:compile,$$tlb:true};return directive;function compile(element,attrs,linker){var input=$parse(attrs[this.name]);var singlePromiseResolver=this.singlePromiseResolver;return resolvePromises;function resolvePromises(scope,iterStartElement){var resolvedInput=input(scope);var promiseResolver=angular.isArray(resolvedInput)?multiPromiseResolver(singlePromiseResolver,resolvedInput):singlePromiseResolver(resolvedInput);promiseResolver.then(linkContent,removeContent);function linkContent(){linker(scope,function(clone){iterStartElement.after(clone);});}
function removeContent(){element.remove();}
function multiPromiseResolver(resolver,arrayInput){return $q.all(arrayInput.map(function(singleInput){return resolver(singleInput);}));}}}}})();(function(){'use strict';angular.module('horizon.framework.util.q').factory('horizon.framework.util.q.extensions',qExtensions);qExtensions.$inject=['$q'];function qExtensions($q){var service={allSettled:allSettled,booleanAsPromise:booleanAsPromise};return service;function allSettled(promiseList){var deferred=$q.defer();var passList=[];var failList=[];var promises=promiseList.map(resolveSingle);$q.all(promises).then(onComplete);return deferred.promise;function resolveSingle(singlePromise,index){var deferredInner=$q.defer();singlePromise.promise.then(onResolve,onReject);return deferredInner.promise;function onResolve(response){passList[index]=formatResponse(response,singlePromise.context);deferredInner.resolve();}
function onReject(response){failList[index]=formatResponse(response,singlePromise.context);deferredInner.resolve();}
function formatResponse(response,context){return{data:response,context:context};}}
function onComplete(){deferred.resolve({pass:condense(passList),fail:condense(failList)});}
function condense(promiseList){return promiseList.filter(function removeEmpty(promise){return!!promise;});}}
function booleanAsPromise(value){var deferred=$q.defer();if(value===true){deferred.resolve();}else{deferred.reject();}
return deferred.promise;}}})();(function(){'use strict';angular.module('horizon.framework.util.tech-debt').controller('DummyController',angular.noop);})();(function(){'use strict';angular.module('horizon.framework.util.tech-debt').factory('horizon.framework.util.tech-debt.helper-functions',helperFunctionsService);helperFunctionsService.$inject=['$rootScope','$compile'];function helperFunctionsService($rootScope,$compile){var service={loadAngular:loadAngular};return service;function loadAngular(element){$compile(element)($rootScope);$rootScope.$apply();}}})();(function(){'use strict';angular.module('horizon.framework.util.tech-debt').directive('imageFileOnChange',imageFileOnChange);function imageFileOnChange(){var directive={require:'ngModel',restrict:'A',link:link};return directive;function link($scope,element,attrs,ngModel){element.bind('change',function(event){var files=event.target.files;var file=files[0];ngModel.$setViewValue(file);$scope.$apply();});}}})();(function(){'use strict';angular.module('horizon.framework.util.uuid',[]).factory('horizon.framework.util.uuid.service',uuidService);function uuidService(){var service={generate:generate};return service;function generate(){var d=new Date().getTime();var uuid='xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=(d+Math.random()*16)%16|0;d=Math.floor(d/16);return(c==='x'?r:(r&0x3|0x8)).toString(16);});return uuid;}}})();(function(){'use strict';angular.module('horizon.framework.util.validators').directive('hzPasswordMatch',hzPasswordMatch);function hzPasswordMatch(){return{restrict:'A',require:'ngModel',link:link};function link(scope,element,attr,ngModelCtrl){scope.$watch(attr.hzPasswordMatch,function(value){scope.passwordConfirm=value;ngModelCtrl.$validate();});ngModelCtrl.$validators.check=function(modelValue,viewValue){var value=modelValue||viewValue;return value===scope.passwordConfirm;};}}})();(function(){'use strict';angular.module('horizon.framework.util.validators').directive('validateNumberMax',validateNumberMax);function validateNumberMax(){var directive={require:'ngModel',restrict:'A',link:link};return directive;function link(scope,element,attrs,ctrl){if(!ctrl){return;}
ctrl.$parsers.push(maxValidator);ctrl.$formatters.push(maxValidator);attrs.$observe('validateNumberMax',function(){maxValidator(ctrl.$modelValue);});function maxValidator(value){var max=scope.$eval(attrs.validateNumberMax);if(angular.isDefined(max)&&!ctrl.$isEmpty(value)&&value>max){ctrl.$setValidity('validateNumberMax',false);}else{ctrl.$setValidity('validateNumberMax',true);}
return value;}}}})();(function(){'use strict';angular.module('horizon.framework.util.validators').directive('validateNumberMin',validateNumberMin);function validateNumberMin(){var directive={require:'ngModel',restrict:'A',link:link};return directive;function link(scope,element,attrs,ctrl){if(!ctrl){return;}
ctrl.$parsers.push(minValidator);ctrl.$formatters.push(minValidator);attrs.$observe('validateNumberMin',function(){minValidator(ctrl.$modelValue);});function minValidator(value){var min=scope.$eval(attrs.validateNumberMin);if(angular.isDefined(min)&&!ctrl.$isEmpty(value)&&value<min){ctrl.$setValidity('validateNumberMin',false);}else{ctrl.$setValidity('validateNumberMin',true);}
return value;}}}})();(function(){'use strict';angular.module('horizon.framework.util.validators').directive('validateUnique',validateUnique);function validateUnique(){var directive={require:'ngModel',restrict:'A',link:link};return directive;function link(scope,element,attrs,ctrl){ctrl.$parsers.push(validate);ctrl.$formatters.push(validate);attrs.$observe('validateUnique',function(){validate(ctrl.$modelValue);});function validate(value){var param=scope.$eval(attrs.validateUnique);var unique=true;if(angular.isArray(param)&&param.length>0){unique=param.indexOf(value)<0;}else if(angular.isFunction(param)){unique=param(value);}
ctrl.$setValidity('unique',unique);return value;}}}})();(function(){'use strict';angular.module('horizon.framework.util.workflow').factory('horizon.framework.util.workflow.service',workflowService);workflowService.$inject=['horizon.framework.util.extensible.service'];function workflowService(extensibleService){return function createWorkflow(spec,decorators){angular.forEach(decorators,function decorate(decorator){decorator(spec);});extensibleService(spec,spec.steps);return spec;};}})();(function(){'use strict';angular.module('horizon.framework.widgets.action-list').directive('actionList',actionList);function actionList(){var directive={link:link,restrict:'E'};return directive;function link(scope,element){element.addClass('btn-group');}}})();(function(){'use strict';angular.module('horizon.framework.widgets.action-list').directive('action',action);action.$inject=['horizon.framework.widgets.basePath'];function action(path){var directive={link:link,restrict:'E',scope:{actionClasses:'=?',callback:'=?',disabled:'=?',item:'=?'},templateUrl:templateUrl,transclude:true};return directive;function link(scope,element){element.children().first().unwrap();}
function templateUrl(element,attrs){var buttonType=attrs.buttonType||'action';return path+'action-list/'+buttonType+'.html';}}})();(function(){'use strict';angular.module('horizon.framework.widgets.action-list').controller('horizon.framework.widgets.action-list.ActionsController',ActionsController);ActionsController.$inject=['$q','$scope'];function ActionsController($q,$scope){var ctrl=this;ctrl.disabled=false;ctrl.passThroughCallbacks={};ctrl.generateDynamicCallback=generateDynamicCallback;function generateDynamicCallback(service,index,resultHandler){var dynCallbackName="callback"+index;ctrl.passThroughCallbacks[dynCallbackName]=function genPassThroughCallback(item){if(ctrl.disabled){return undefined;}
preAction();var result=service.perform(item,$scope.$new());$q.when(result).then(postAction,postAction);return resultHandler?resultHandler(result):result;};return'actionsCtrl.passThroughCallbacks.'+dynCallbackName;}
function preAction(){ctrl.disabled=true;}
function postAction(){ctrl.disabled=false;}}})();(function(){'use strict';angular.module('horizon.framework.widgets.action-list').directive('actions',actions);actions.$inject=['$parse','horizon.framework.widgets.action-list.actions.service'];function actions($parse,actionsService){var directive={link:link,restrict:'E',scope:true,controller:'horizon.framework.widgets.action-list.ActionsController as actionsCtrl'};return directive;function link(scope,element,attrs,actionsController){var listType=attrs.type;var item=attrs.item;var allowedActions;var resultHandler=$parse(attrs.resultHandler)(scope);var actionsParam=$parse(attrs.allowed)(scope);if(angular.isFunction(actionsParam)){allowedActions=actionsParam();}else{allowedActions=actionsParam;}
var service=actionsService({scope:scope,element:element,ctrl:actionsController,listType:listType,item:item,resultHandler:resultHandler});service.renderActions(allowedActions);}}})();(function(){'use strict';var dangerTypes={'delete':1,'danger':1,'delete-selected':1};angular.module('horizon.framework.widgets.action-list').factory('horizon.framework.widgets.action-list.actions.service',actionsService);actionsService.$inject=['$compile','$http','$parse','$q','$templateCache','horizon.framework.widgets.basePath','horizon.framework.util.q.extensions'];function actionsService($compile,$http,$parse,$q,$templateCache,basePath,$qExtensions){return function(spec){return createService(spec.scope,spec.element,spec.ctrl,spec.listType,spec.item,spec.resultHandler);};function createService(scope,element,ctrl,listType,item,resultHandler){var service={renderActions:renderActions};return service;function renderActions(allowedActions){allowedActions.forEach(function(allowedAction){allowedAction.promise=getPermissions(allowedAction);allowedAction.context=allowedAction;});$qExtensions.allSettled(allowedActions).then(renderPermittedActions);function getPermissions(allowedAction){if(listType==='batch'){return allowedAction.service.allowed();}else{var itemVal=$parse(item)(scope);return allowedAction.service.allowed(itemVal);}}}
function renderPermittedActions(permittedActions){if(permittedActions.pass.length>0){var templateFetch=$q.all(permittedActions.pass.map(getTemplate));if(listType==='detail'){templateFetch.then(addDetailActions);}else if(listType==='batch'||permittedActions.pass.length===1){element.addClass('btn-addon');templateFetch.then(addButtons);}else{templateFetch.then(addDropdown);}}}
function addDetailActions(templates){var row=angular.element('<div class="row"></div>');element.append(row);templates.forEach(function renderDetailAction(template){var templateElement=angular.element(template.template);templateElement.find('action').attr('callback',template.callback);row.append($compile(templateElement)(scope));});}
function addButtons(templates){templates.forEach(addTemplate);}
function addTemplate(template){element.append(renderButton(template,scope));}
function addDropdown(templates){var splitButton=getSplitButton(templates[0]);var actionList=[];for(var iCnt=1;iCnt<templates.length;iCnt++){actionList.push(getMenuButton(templates[iCnt]));}
var actionListElem=renderList(actionList,splitButton,scope);element.append($compile(actionListElem)(scope));}
function renderButton(actionTemplate,scope){var actionElement=angular.element(actionTemplate.template);actionElement.attr('callback',actionTemplate.callback);var actionListElem=angular.element('<action-list>');actionListElem.addClass('btn-addon');actionListElem.append(actionElement);return $compile(actionListElem)(scope);}
function renderList(actionList,splitButton,scope){var actionListElem=angular.element('<action-list uib-dropdown>');actionListElem.attr('dropdown','true');actionListElem.append(splitButton);actionListElem.append(getMenu(actionList,scope));return actionListElem;}
function getSplitButton(actionTemplate){var actionElement=angular.element(actionTemplate.template);actionElement.attr('button-type','split-button');actionElement.attr('action-classes',actionElement.attr('action-classes'));actionElement.attr('callback',actionTemplate.callback);return actionElement;}
function getMenu(actionList){var menuElem=angular.element('<menu>');menuElem.append(actionList);return menuElem;}
function getMenuButton(actionTemplate){var actionElement=angular.element(actionTemplate.template);actionElement.attr('button-type','menu-item');actionElement.attr('callback',actionTemplate.callback);return actionElement;}
function getTemplate(permittedAction,index,permittedActions){var defered=$q.defer();var action=permittedAction.context;var url=getTemplateUrl(action,permittedActions.length);$http.get(url,{cache:$templateCache}).then(onTemplateGet);return defered.promise;function onTemplateGet(response){var callback=ctrl.generateDynamicCallback(action.service,index,resultHandler);var template=response.data.replace('$action-classes$',getActionClasses(action,index,permittedActions.length)).replace('$icon$',action.template.icon).replace('$text$',action.template.text).replace('$title$',action.template.title).replace('$description$',action.template.description).replace('$panel-classes$',action.template.type in dangerTypes?'panel-danger':'panel-info').replace('$item$',item);defered.resolve({template:template,type:action.template.type||'button',callback:callback});}}
function getActionClasses(action,index,numPermittedActions){var actionClassesParam=action.template.actionClasses||"";var actionClasses='btn ';if(listType==='row'){if(numPermittedActions===1||index===0){if(action.template.type in dangerTypes){actionClasses+='btn-danger ';}else{actionClasses+='btn-default ';}
return actionClasses+actionClassesParam;}else{if(action.template.type in dangerTypes){return'text-danger'+actionClassesParam;}else{return actionClassesParam;}}}else if(listType==='detail'){if(action.template.type in dangerTypes){actionClasses+='btn-danger';}else{actionClasses+='btn-primary';}
return actionClasses;}else{return actionClassesParam;}}
function getTemplateUrl(action){if(angular.isDefined(action.template.url)){return action.template.url;}else if(angular.isDefined(action.template.type)&&listType!=='detail'){return basePath+'action-list/actions-'+action.template.type+'.template.html';}else{return basePath+'action-list/actions-'+listType+'.template.html';}}}}})();(function(){'use strict';angular.module('horizon.framework.widgets.action-list').directive('buttonTooltip',buttonTooltip);buttonTooltip.$inject=['$compile','$http','$templateCache','horizon.framework.widgets.action-list.tooltipConfig'];function buttonTooltip($compile,$http,$templateCache,tooltipConfig){var directive={link:link,restrict:'A',scope:{btDisabled:'=?',btMessage:'=buttonTooltip',btModel:'=?',btPlacement:'=?'}};return directive;function link(scope,element){var tooltip=scope.btModel||{};var template=tooltip.template||tooltipConfig.defaultTemplate;if(tooltip.templateUrl){$http.get(tooltip.templateUrl,{cache:$templateCache}).then(function(response){template=response.data;});}
element.on('blur','button',btnBlur);element.on('mousedown',btnMouseDown);element.on('mouseup',btnMouseUp);function btnBlur(){element.popover('destroy');}
function btnMouseDown(){if(!scope.btDisabled){var popoverElt=element.next('.popover');if(popoverElt.length){element.popover('destroy');}else{createTooltip();}
return false;}}
function btnMouseUp(){if(!scope.btDisabled){element.find('button').first().focus();}}
function createTooltip(){var tooltipData=angular.extend({},tooltip.data);tooltipData.message=scope.btMessage||tooltipConfig.defaultMessage.message;var tooltipScope=scope.$new(true);angular.extend(tooltipScope,tooltipData);tooltipScope.element=element;var compiledTemplate=$compile(template)(tooltipScope);tooltipScope.$apply();var options={content:compiledTemplate,html:true,placement:scope.btPlacement||'left',trigger:'manual'};element.popover(options);element.popover('show');}}}})();(function(){'use strict';angular.module('horizon.framework.widgets.action-list').factory('horizon.framework.widgets.action-list.button-tooltip.row-warning.service',tooltip);tooltip.$inject=['$timeout','horizon.framework.widgets.basePath'];function tooltip($timeout,path){var service={templateUrl:path+'action-list/warning-tooltip.html',data:{clickMessage:gettext('Click here to expand the row and view the errors.'),expandDetail:expandDetail}};return service;function expandDetail(){var row=this.element.closest('tr');if(!row.hasClass('expanded')){$timeout(function(){row.find('[hz-expand-detail]').click();},0,false);}}}})();(function(){'use strict';angular.module('horizon.framework.widgets.action-list').directive('menu',menu);menu.$inject=['horizon.framework.widgets.basePath'];function menu(path){var directive={link:link,restrict:'E',templateUrl:path+'action-list/menu.html',transclude:true};return directive;function link(scope,element,attrs,ctrl,transclude){var menu=element.find('ul');transclude(scope,function(clone){menu.append(clone);});menu.unwrap();}}})();(function(){'use strict';angular.module('horizon.framework.widgets.charts').directive('chartTooltip',chartTooltip);chartTooltip.$inject=['horizon.framework.widgets.basePath'];function chartTooltip(path){var directive={restrict:'E',scope:{tooltip:'=tooltipData'},templateUrl:path+'charts/chart-tooltip.html'};return directive;}})();(function(){'use strict';angular.module('horizon.framework.widgets.charts').directive('pieChart',pieChart);pieChart.$inject=['horizon.framework.widgets.basePath','horizon.framework.widgets.charts.donutChartSettings'];function pieChart(path,donutChartSettings){var directive={link:link,replace:true,restrict:'E',scope:{chartData:'=',chartSettings:'='},templateUrl:path+'charts/pie-chart.html'};return directive;function link(scope,element){var d3Elt,arc,pie;function updateChartVisibility(){var showChart=scope.chartData.maxLimit!==Infinity;scope.chartData.showChart=showChart;scope.chartData.chartless=showChart?'':'chartless';return showChart;}
var settings={};var showChart=updateChartVisibility();if(angular.isObject(scope.chartSettings)){settings=scope.chartSettings;}else{settings=angular.extend({},donutChartSettings,scope.chartSettings);}
settings.diameter=settings.outerRadius*2;var model={settings:settings,tooltipData:{enabled:false,icon:settings.tooltipIcon,style:angular.extend({},settings.tooltip)}};if(showChart){d3Elt=d3.select(element[0]);arc=d3.svg.arc().outerRadius(settings.outerRadius).innerRadius(settings.innerRadius);pie=d3.layout.pie().sort(null).value(function(d){return d.value;});}
var unwatch=scope.$watch('chartData',updateChart);scope.$on('$destroy',unwatch);scope.model=model;function updateChart(){var showChart=updateChartVisibility();angular.forEach(scope.chartData.data,function(item){if(item.value===Infinity){item.hideKey=true;}});function getChartLabel(type,total,unit){if(unit){var totalWithUnit=total+" "+unit;}
return interpolate(gettext('%(total)s %(type)s'),{total:totalWithUnit||total,type:type},true);}
if(!showChart){scope.model.total=null;scope.model.totalLabel=gettext('No Limit');}else if(angular.isDefined(scope.chartData.maxLimit)){scope.model.total=scope.chartData.maxLimit;scope.model.totalLabel=getChartLabel("Max",scope.model.total,scope.chartData.unit);}else{scope.model.total=d3.sum(scope.chartData.data,function(d){return d.value;});scope.model.totalLabel=getChartLabel("Total",scope.model.total,scope.chartData.unit);}
scope.model.tooltipData.enabled=false;if(showChart){var chart=d3Elt.select('.slices').selectAll('path.slice').data(pie(scope.chartData.data));chart.enter().append('path').attr('class','slice').attr('d',arc);chart.each(function(d){var slice=d3.select(this);if(d.data.color){slice.style('fill',d.data.color);}else if(d.data.colorClass){slice.classed(d.data.colorClass,true);}});chart.on('mouseenter',function(d){showTooltip(d,this);}).on('mouseleave',clearTooltip);chart.transition().duration(500).attrTween('d',function animate(d){this.lastAngle=this.lastAngle||{startAngle:0,endAngle:0};var interpolate=d3.interpolate(this.lastAngle,d);this.lastAngle=interpolate(0);return function(t){return arc(interpolate(t));};});chart.exit().remove();}}
function showTooltip(d,elt){scope.$apply(function(){var chartElt=element[0];var eltHeight=chartElt.getBoundingClientRect().height;var titleHeight=chartElt.querySelector('div.pie-chart-title').getBoundingClientRect().height;var point=d3.mouse(elt);var outerRadius=scope.model.settings.outerRadius;var x=point[0]+outerRadius;var y=eltHeight-point[1]-outerRadius-titleHeight;var newTooltipData={label:d.data.label,value:d.data.value,enabled:true,iconColor:d.data.color,iconClass:d.data.colorClass,style:{left:x+'px',bottom:y+'px'}};angular.extend(scope.model.tooltipData,newTooltipData);});}
function clearTooltip(){scope.$apply(function(){scope.model.tooltipData.enabled=false;});}}}})();(function(){'use strict';angular.module('horizon.framework.widgets.contenteditable').directive('contenteditable',contenteditable);function contenteditable(){var directive={restrict:'A',require:'?ngModel',link:link};return directive;function link(scope,element,attrs,ngModel){if(!ngModel){return;}
ngModel.$render=function(){element.html(ngModel.$viewValue||'');};element.on('blur keyup change',function(){scope.$evalAsync(read);});read();function read(){ngModel.$setViewValue(element.html());}}}})();(function(){'use strict';angular.module('horizon.framework.widgets.details').directive('hzDetails',hzDetails);hzDetails.$inject=['$window'];function hzDetails($window){var directive={restrict:'E',scope:{views:'=',context:'=',defaultTemplateUrl:'='},templateUrl:$window.STATIC_URL+'framework/widgets/details/details.html'};return directive;}})();(function(){"use strict";angular.module('horizon.framework.widgets.details').controller('RoutedDetailsViewController',controller);controller.$inject=['horizon.framework.conf.resource-type-registry.service','horizon.framework.util.actions.action-result.service','horizon.framework.widgets.modal-wait-spinner.service','$q','$routeParams'];function controller(registry,resultService,spinnerService,$q,$routeParams){var ctrl=this;ctrl.resourceType=registry.getResourceType($routeParams.type);ctrl.context={};ctrl.context.identifier=ctrl.resourceType.parsePath($routeParams.path);ctrl.context.loadPromise=ctrl.resourceType.load(ctrl.context.identifier);ctrl.context.loadPromise.then(loadData);ctrl.defaultTemplateUrl=registry.getDefaultDetailsTemplateUrl();ctrl.resultHandler=actionResultHandler;function actionResultHandler(returnValue){return $q.when(returnValue,actionSuccessHandler);}
function loadData(response){spinnerService.hideModalSpinner();ctrl.showDetails=true;ctrl.resourceType.initActions();ctrl.itemData=response.data;ctrl.itemName=ctrl.resourceType.itemName(response.data);}
function actionSuccessHandler(result){if(result){spinnerService.showModalSpinner(gettext('Please Wait'));ctrl.showDetails=false;ctrl.context.loadPromise=ctrl.resourceType.load(ctrl.context.identifier);ctrl.context.loadPromise.then(loadData);}}}})();(function(){'use strict';angular.module('schemaForm').provider('hzBuilder',provider);function provider(){var builders={tabsBuilder:tabsBuilder};this.$get=function(){return builders;};function tabsBuilder(args){if(args.form.tabs&&args.form.tabs.length>0){var tabLi=args.fieldFrag.querySelector('li');tabLi.setAttribute('ng-if','!tab.condition ? true : evalExpr(tab.condition, { model: model, "arrayIndex": $index })');var tabContent=args.fieldFrag.querySelector('.tab-content');args.form.tabs.forEach(function(tab,index){tab.items.forEach(function(item){if(item.required){tab.required=true;}});var div=document.createElement('div');div.setAttribute('ng-show','model.tabs.selected === '+index);div.setAttribute('ng-if',tab.condition||true);var childFrag=args.build(tab.items,args.path+'.tabs['+index+'].items',args.state);div.appendChild(childFrag);tabContent.appendChild(div);});}}}})();(function(){'use strict';angular.module('schemaForm').config(config);config.$inject=['schemaFormDecoratorsProvider','sfBuilderProvider','sfPathProvider','sfErrorMessageProvider','$windowProvider','hzBuilderProvider'];function config(decoratorsProvider,sfBuilderProvider,sfPathProvider,sfErrorMessageProvider,$windowProvider,hzBuilderProvider){var base=$windowProvider.$get().STATIC_URL+'framework/widgets/form/fields/';var simpleTransclusion=sfBuilderProvider.builders.simpleTransclusion;var ngModelOptions=sfBuilderProvider.builders.ngModelOptions;var ngModel=sfBuilderProvider.builders.ngModel;var sfField=sfBuilderProvider.builders.sfField;var condition=sfBuilderProvider.builders.condition;var array=sfBuilderProvider.builders.array;var tabs=hzBuilderProvider.$get().tabsBuilder;var defaults=[sfField,ngModel,ngModelOptions,condition];decoratorsProvider.defineDecorator('bootstrapDecorator',{textarea:{template:base+'textarea.html',builder:defaults},fieldset:{template:base+'fieldset.html',builder:[sfField,simpleTransclusion,condition]},array:{template:base+'array.html',builder:[sfField,ngModelOptions,ngModel,array,condition]},tabarray:{template:base+'tabarray.html',builder:[sfField,ngModelOptions,ngModel,array,condition]},tabs:{template:base+'tabs.html',builder:[sfField,ngModelOptions,tabs,condition]},section:{template:base+'section.html',builder:[sfField,simpleTransclusion,condition]},conditional:{template:base+'section.html',builder:[sfField,simpleTransclusion,condition]},select:{template:base+'select.html',builder:defaults},checkbox:{template:base+'checkbox.html',builder:defaults},checkboxes:{template:base+'checkboxes.html',builder:[sfField,ngModelOptions,ngModel,array,condition]},number:{template:base+'default.html',builder:defaults},password:{template:base+'default.html',builder:defaults},submit:{template:base+'submit.html',builder:defaults},button:{template:base+'submit.html',builder:defaults},radios:{template:base+'radios.html',builder:defaults},'radios-inline':{template:base+'radios-inline.html',builder:defaults},radiobuttons:{template:base+'radio-buttons.html',builder:defaults},'password-confirm':{template:base+'password-confirm.html',builder:defaults},help:{template:base+'help.html',builder:defaults},'default':{template:base+'default.html',builder:defaults}},[]);var defaultMessages={"default":gettext("The data in this field is invalid"),0:gettext("Invalid type, expected {$schema.type$}"),1:gettext("No enum match for: {$viewValue$}"),10:gettext("Data does not match any schemas from 'anyOf'"),11:gettext("Data does not match any schemas from 'oneOf'"),12:gettext("Data is valid against more than one schema from 'oneOf'"),13:gettext("Data matches schema from 'not'"),100:gettext("{$viewValue$} is not a multiple of {$schema.multipleOf$}"),101:gettext("{$viewValue$} is less than the allowed minimum of {$schema.minimum$}"),102:gettext("{$viewValue$} is equal to the exclusive minimum {$schema.minimum$}"),103:gettext("{$viewValue$} is greater than the allowed maximum of {$schema.maximum$}"),104:gettext("{$viewValue$} is equal to the exclusive maximum {$schema.maximum$}"),105:gettext("{$viewValue$} is not a valid number"),200:gettext("{$schema.title$} is too short ({$viewValue.length$} characters), minimum {$schema.minLength$}"),201:gettext("{$schema.title$} is too long ({$viewValue.length$} characters), maximum {$schema.maxLength$}"),202:gettext("{$schema.title$} is formatted incorrectly"),300:gettext("Too few properties defined, minimum {$schema.minProperties$}"),301:gettext("Too many properties defined, maximum {$schema.maxProperties$}"),302:gettext("{$schema.title$} is a required field"),303:gettext("Additional properties not allowed"),304:gettext("Dependency failed - key must exist"),400:gettext("Array is too short ({$value.length$} items), minimum {$schema.minItems$}"),401:gettext("Array is too long ({$value.length$} items), maximum {$schema.maxItems$}"),402:gettext("Array items must be unique"),403:gettext("Additional items not allowed"),500:gettext("Format validation failed"),501:gettext("Keyword failed: '{$title$}'"),600:gettext("Circular $refs"),1000:gettext("Unknown property (not in schema)")};sfErrorMessageProvider.setDefaultMessages(defaultMessages);}})();(function(){'use strict';angular.module('horizon.framework.widgets.form').controller('horizon.framework.widgets.form.ModalFormController',controller);controller.$inject=['$uibModalInstance','context'];function controller($uibModalInstance,context){var ctrl=this;ctrl.formTitle=context.schema.title||context.title;ctrl.form=context.form;ctrl.schema=context.schema;ctrl.model=context.model;ctrl.submit=submit;ctrl.submitText=context.submitText;ctrl.submitIcon=context.submitIcon;ctrl.cancel=cancel;function submit($event,schemaForm){$event.preventDefault();$event.stopPropagation();if(!schemaForm.$invalid){return $uibModalInstance.close(context);}}
function cancel(){return $uibModalInstance.dismiss(context);}
return ctrl;}})();(function(){'use strict';angular.module('horizon.framework.widgets.form').factory('horizon.framework.widgets.form.ModalFormService',service);service.$inject=['$uibModal','horizon.framework.widgets.basePath'];function service($uibModal,widgetsBasePath){var service={open:open};return service;function open(config){var modalConfig={backdrop:'static',size:'lg',resolve:{context:function(){return{title:config.title,submitText:config.submitText||gettext("Submit"),submitIcon:config.submitIcon||"check",schema:config.schema,form:config.form,model:config.model};}},controller:'horizon.framework.widgets.form.ModalFormController as ctrl',templateUrl:widgetsBasePath+'form/modal-form.html'};return $uibModal.open(modalConfig).result;}}})();(function(){'use strict';angular.module("horizon.framework.widgets.headers").directive('hzPageHeader',hzPageHeader);hzPageHeader.$inject=['horizon.framework.widgets.headers.basePath'];function hzPageHeader(basePath){var directive={restrict:'E',scope:{header:'@',description:'@'},templateUrl:basePath+'hz-page-header.html',transclude:true};return directive;}})();(function(){'use strict';angular.module('horizon.framework.widgets.help-panel').directive('helpPanel',helpPanel);helpPanel.$inject=['horizon.framework.widgets.basePath','horizon.framework.util.uuid.service'];function helpPanel(path,uuid){var link=function(scope){scope.uuid=uuid.generate();};var directive={templateUrl:path+'help-panel/help-panel.html',link:link,transclude:true};return directive;}})();(function(){'use strict';angular.module('horizon.framework.widgets.load-edit').directive('loadEdit',loadEdit);loadEdit.$inject=['$timeout','horizon.framework.util.file.file-reader','horizon.framework.widgets.load-edit.basePath'];function loadEdit($timeout,fileReader,basePath){var directive={restrict:'E',scope:{title:'@',model:'=',maxBytes:'@',key:'@',required:'=',rows:'@',onTextareaChange:'&'},link:link,templateUrl:basePath+'load-edit.html'};return directive;function link($scope,$element){var textarea=$element.find('textarea');var fileInput=$element.find('input[type="file"]');$scope.textContent='';$scope.fileApiSupported=!!FileReader;textarea.on('input propertychange',onTextareaChange);fileInput.on('change',onFileLoad);var textContentWatcher=$scope.$watch(function(){return $scope.textContent;},function(){if(fileInput.val()!==""){fileInput.val(null);}},true);$scope.$on('$destroy',function(){textContentWatcher();});function onTextareaChange(){$scope.$applyAsync(function(){$scope.textBytes=getStrByte(textarea.val());$scope.model=$scope.textContent;if($scope.textBytes>0){$scope.textModified=true;}else{$scope.textModified=false;}
$scope.onTextareaChange({textContent:$scope.textContent});});}
function onFileLoad(event){var file=event.originalEvent.target.files[0];if(file){fileReader.readTextFile(file).then(updateTextArea);}}
function updateTextArea(fileContents){$scope.textContent=fileContents;$timeout(function(){onTextareaChange();$scope.textModified=false;},250,false);textarea.focus();}
function getStrByte(str){return(new Blob([str],{type:"text/plain"})).size;}}}})();(function(){'use strict';angular.module('horizon.framework.widgets.magic-search').directive('hzMagicSearchBar',hzMagicSearchBar);hzMagicSearchBar.$inject=['horizon.framework.widgets.basePath'];function hzMagicSearchBar(basePath){var directive={compile:compile,restrict:'E',scope:true,templateUrl:basePath+'magic-search/hz-magic-search-bar.html'};return directive;function link(){}
function compile(element){var templateUrl=basePath+'magic-search/magic-search.html';element.find('magic-search').attr('template',templateUrl);element.addClass('hz-magic-search-bar');return link;}}})();(function(){'use strict';angular.module('horizon.framework.widgets.magic-search').directive('hzMagicSearchContext',hzMagicSearchContext);hzMagicSearchContext.$inject=['$parse','horizon.framework.widgets.magic-search.events'];function hzMagicSearchContext($parse,magicSearchEvents){var directive={link:link,restrict:'E',scope:true};return directive;function link(scope,element,attrs){var filterStrings=$parse(attrs.filterStrings)(scope);var clientFullTextSearch=$parse(attrs.clientFullTextSearch)(scope);var searchSettingsCallback=$parse(attrs.searchSettingsCallback)(scope);scope.searchSettingsCallback=searchSettingsCallback;scope.clientFullTextSearch=angular.isDefined(clientFullTextSearch)?clientFullTextSearch:true;var defaultFilterStrings={cancel:gettext('Cancel'),prompt:gettext('Click here for filters.'),remove:gettext('Remove'),text:scope.clientFullTextSearch?gettext('Search in current results'):gettext('Full Text Search')};scope.filterStrings=filterStrings||defaultFilterStrings;if(angular.isDefined(searchSettingsCallback)){scope.showSettings=true;}else{scope.showSettings=false;}
scope.$on(magicSearchEvents.SEARCH_UPDATED,resend);scope.$on(magicSearchEvents.TEXT_SEARCH,resend);scope.$on(magicSearchEvents.CHECK_FACETS,resend);scope.$on(magicSearchEvents.FACETS_CHANGED,resend);scope.$on(magicSearchEvents.SERVER_SEARCH_UPDATED,resend);if(angular.isUndefined(scope.filterFacets)){scope.$watch(attrs.filterFacets,function(newValue){scope.filterFacets=newValue;});}
function resend(event,data){scope.$broadcast(event.name+'-ms-context',data);}}}})();(function(){'use strict';angular.module('horizon.framework.widgets.magic-search').controller('MagicSearchController',magicSearchController);magicSearchController.$inject=['$scope','$element','$timeout','$window','horizon.framework.widgets.magic-search.service','horizon.framework.widgets.magic-search.events'];function magicSearchController($scope,$element,$timeout,$window,service,magicSearchEvents){var ctrl=this;var searchInput=$element.find('.search-input');ctrl.mainPromptString=$scope.strings.prompt;ctrl.currentSearch=[];ctrl.isMenuOpen=false;searchInput.on('keydown',keyDownHandler);searchInput.on('keyup',keyUpHandler);searchInput.on('keypress',keyPressHandler);$element.find('.search-main-area').on('click',searchMainClickHandler);ctrl.facetClicked=facetClickHandler;ctrl.optionClicked=optionClickHandler;ctrl.removeFacet=removeFacet;ctrl.clearSearch=clearSearch;ctrl.isMatchLabel=function(label){return angular.isArray(label);};ctrl.unusedFacetChoices=[];ctrl.facetChoices=[];initSearch(service.getSearchTermsFromQueryString($window.location.search));emitQuery();$scope.$on(magicSearchEvents.INIT_SEARCH,function(event,data){if(data){if(data.textSearch){ctrl.textSearch=data.textSearch;}else{ctrl.textSearch=undefined;searchInput.val('');}
initSearch(data.magicSearchQuery||[]);}});function initSearch(initialSearchTerms){ctrl.facetChoices=service.getFacetChoicesFromFacetsParam($scope.facets_param);initFacets(initialSearchTerms);}
function keyDownHandler($event){var key=service.getEventCode($event);if(key===9){$event.preventDefault();}else if(key===8){backspaceKeyDown();}}
function tabKeyUp(){if(angular.isUndefined(ctrl.facetSelected)){if(ctrl.filteredObj.length!==1){return;}
ctrl.facetClicked(0,'',ctrl.filteredObj[0].name);}else{if(angular.isUndefined(ctrl.filteredOptions)||ctrl.filteredOptions.length!==1){return;}
ctrl.optionClicked(0,'',ctrl.filteredOptions[0].key);resetState();}}
function escapeKeyUp(){if(angular.isDefined(ctrl.facetSelected)){setMenuOpen(true);}else{setMenuOpen(false);}
resetState();var textFilter=ctrl.textSearch;if(angular.isUndefined(textFilter)){textFilter='';}
emitTextSearch(textFilter);}
function enterKeyUp(){var searchVal=searchInput.val();if(searchVal!==''){if(ctrl.facetSelected){var curr=ctrl.facetSelected;curr.name=curr.name.split('=')[0]+'='+searchVal;curr.label[1]=searchVal;ctrl.currentSearch.push(curr);resetState();emitQuery();setMenuOpen(true);}else{ctrl.currentSearch=ctrl.currentSearch.filter(notTextSearch);ctrl.currentSearch.push(service.getTextFacet(searchVal,$scope.strings.text));$scope.$apply();setMenuOpen(true);setSearchInput('');emitTextSearch(searchVal);ctrl.textSearch=searchVal;}}else if(ctrl.isMenuOpen){setMenuOpen(false);}else{setMenuOpen(true);}
ctrl.filteredObj=ctrl.unusedFacetChoices;}
function backspaceKeyDown(){var searchVal=searchInput.val();if(searchVal===''){if(ctrl.currentSearch.length>0&&angular.isUndefined(ctrl.facetSelected)){ctrl.removeFacet(ctrl.currentSearch.length-1);setMenuOpen(true);}else{escapeKeyUp();}}}
function backspaceKeyUp(){var searchVal=searchInput.val();if(searchVal===''&&angular.isUndefined(ctrl.facetSelected)){if(ctrl.currentSearch.length===0){ctrl.clearSearch();}else{resetState();emitTextSearch(ctrl.textSearch||'');}}else{filterFacets(searchVal);}}
function deleteKeyUp(){return backspaceKeyUp();}
function notTextSearch(item){return item.name.indexOf('text')!==0;}
function defaultKeyUp(){var searchVal=searchInput.val();filterFacets(searchVal);}
function keyUpHandler($event){if($event.metaKey===true){return;}
var key=service.getEventCode($event);var handlers={8:backspaceKeyUp,9:tabKeyUp,27:escapeKeyUp,13:enterKeyUp,46:deleteKeyUp};if(handlers[key]){handlers[key]();}else{defaultKeyUp();}}
function keyPressHandler($event){var searchVal=searchInput.val();var key=service.getEventCode($event);if(key!==8&&key!==46&&key!==13&&key!==9&&key!==27){searchVal=searchVal+String.fromCharCode(key).toLowerCase();}
if(searchVal===' '){setMenuOpen(true);setSearchInput('');return;}
if(searchVal===''){return;}
if(key!==8&&key!==46&&!(key>=37&&key<=40)){filterFacets(searchVal);}}
function filterFacets(searchVal){var filtered=[];var isTextSearch=angular.isUndefined(ctrl.facetSelected);if(isTextSearch){ctrl.filteredObj=ctrl.unusedFacetChoices;filtered=service.getMatchingFacets(ctrl.filteredObj,searchVal);}else{ctrl.filteredOptions=ctrl.facetOptions;if(angular.isUndefined(ctrl.facetOptions)){return;}
filtered=service.getMatchingOptions(ctrl.filteredOptions,searchVal);}
if(filtered.length>0){setMenuOpen(true);$timeout(function(){ctrl.filteredObj=filtered;},0.1);}else if(isTextSearch){emitTextSearch(searchVal);setMenuOpen(false);}}
function searchMainClickHandler($event){var target=angular.element($event.target);if(target.is('.search-main-area')){searchInput.trigger('focus');setMenuOpen(true);}}
function facetClickHandler($index){var facet=ctrl.filteredObj[$index];var label=facet.label;if(angular.isArray(label)){label=label.join('');}
var facetParts=facet.name&&facet.name.split('=');ctrl.facetSelected=service.getFacet(facetParts[0],facetParts[1],label,'');if(angular.isDefined(facet.options)){ctrl.filteredOptions=ctrl.facetOptions=facet.options;setMenuOpen(true);}else{setMenuOpen(false);}
setSearchInput('');setPrompt('');$timeout(function(){searchInput.focus();});}
function optionClickHandler($index,$event,name){setMenuOpen(false);var curr=ctrl.facetSelected;curr.name=curr.name.split('=')[0]+'='+name;curr.label[1]=ctrl.filteredOptions[$index].label;if(angular.isArray(curr.label[1])){curr.label[1]=curr.label[1].join('');}
ctrl.currentSearch.push(curr);resetState();emitQuery();}
function emitTextSearch(val){$scope.$emit(magicSearchEvents.TEXT_SEARCH,val,$scope.filter_keys);}
function emitQuery(removed){var query=service.getQueryPattern(ctrl.currentSearch);if(angular.isDefined(removed)&&removed.indexOf('text')===0){emitTextSearch('');delete ctrl.textSearch;}else{$scope.$emit(magicSearchEvents.SEARCH_UPDATED,query);if(ctrl.currentSearch.length>0){var newFacet=ctrl.currentSearch[ctrl.currentSearch.length-1].name;var facetParts=service.getSearchTermObject(newFacet);service.removeChoice(facetParts,ctrl.facetChoices,ctrl.unusedFacetChoices);}}}
function clearSearch(){ctrl.currentSearch=[];delete ctrl.textSearch;ctrl.unusedFacetChoices=ctrl.facetChoices.map(service.getFacetChoice);resetState();$scope.$emit(magicSearchEvents.SEARCH_UPDATED,'');emitTextSearch('');}
function resetState(){setSearchInput('');ctrl.filteredObj=ctrl.unusedFacetChoices;delete ctrl.facetSelected;delete ctrl.facetOptions;delete ctrl.filteredOptions;if(ctrl.currentSearch.length===0){setPrompt(ctrl.mainPromptString);}}
function setMenuOpen(bool){$timeout(function setMenuOpenTimeout(){ctrl.isMenuOpen=bool;});}
function setSearchInput(val){$timeout(function setSearchInputTimeout(){searchInput.val(val);});}
function setPrompt(str){$timeout(function setPromptTimeout(){$scope.strings.prompt=str;});}
var facetsChangedWatcher=$scope.$on(magicSearchEvents.FACETS_CHANGED,function(event,data){$timeout(function(){if(data&&data.magicSearchQuery){initSearch(data.magicSearchQuery.split('&'));}else{initSearch(ctrl.currentSearch.map(function(x){return x.name;}));}});});$scope.$on('$destroy',function(){facetsChangedWatcher();});function initFacets(searchTerms){var tmpFacetChoices=ctrl.facetChoices.map(service.getFacetChoice);if(searchTerms.length>1||searchTerms[0]&&searchTerms[0].length>0){setPrompt('');}
ctrl.currentSearch=service.getFacetsFromSearchTerms(searchTerms,ctrl.textSearch,$scope.strings.text,tmpFacetChoices);ctrl.filteredObj=ctrl.unusedFacetChoices=service.getUnusedFacetChoices(tmpFacetChoices,searchTerms);$scope.$emit(magicSearchEvents.CHECK_FACETS,ctrl.currentSearch);}
function removeFacet(index){var removed=ctrl.currentSearch[index].name;ctrl.currentSearch.splice(index,1);if(angular.isUndefined(ctrl.facetSelected)){emitQuery(removed);}else{resetState();}
if(ctrl.currentSearch.length===0){setPrompt(ctrl.mainPromptString);}
initFacets(ctrl.currentSearch.map(service.getName));}}})();(function(){'use strict';angular.module('horizon.framework.widgets.magic-search').directive('magicSearch',magicSearch);magicSearch.$inject=[];function magicSearch(){return{restrict:'E',scope:{facets_param:'@facets',filter_keys:'=filterKeys',strings:'=strings'},templateUrl:function(scope,elem){return elem.template;},controller:'MagicSearchController',controllerAs:'ctrl'};}})();(function(){'use strict';angular.module('horizon.framework.widgets.magic-search').factory('horizon.framework.widgets.magic-search.service',magicSearchService);magicSearchService.$inject=[];function magicSearchService(){var service={getFacetChoice:getFacetChoice,removeOptionChoice:removeOptionChoice,removeFacetChoice:removeFacetChoice,removeChoice:removeChoice,getEventCode:getEventCode,getFacet:getFacet,getSearchTermsFromQueryString:getSearchTermsFromQueryString,getFacetChoicesFromFacetsParam:getFacetChoicesFromFacetsParam,getFacetsFromSearchTerms:getFacetsFromSearchTerms,getSearchTermObject:getSearchTermObject,getMatchingFacets:getMatchingFacets,getMatchingOptions:getMatchingOptions,getName:getName,getTextFacet:getTextFacet,getUnusedFacetChoices:getUnusedFacetChoices,getQueryPattern:getQueryPattern,getQueryObject:getQueryObject};return service;function objectify(obj){return Object.create(obj);}
function hasOptions(item){return angular.isDefined(item.options);}
function getTextFacet(searchVal,label){return getFacet('text',searchVal,label,searchVal);}
function getFacet(field,value,typeLabel,searchLabel){return{'name':field+'='+value,'label':[typeLabel,searchLabel]};}
function getSearchTermsFromQueryString(queryString){return queryString.replace(/^\?/,'').split('&');}
function getName(obj){return obj.name;}
function getQueryPattern(searchTermList){return searchTermList.filter(isNotTextSearch).map(getName).join('&');function isNotTextSearch(item){return item.name.indexOf('text')!==0;}}
function matchesName(name){return function(facet){return name===facet.name;};}
function matchesKey(name){return function(option){return name===option.key;};}
function hasLabel(item){return angular.isDefined(item.label);}
function getSearchTermObject(str){var parts=str.split('=');return{type:parts[0],value:parts[1]};}
function itemToLabel(item,search){var idx=item.label.toLowerCase().indexOf(search);if(idx>-1){return[item.label.substring(0,idx),item.label.substring(idx,idx+search.length),item.label.substring(idx+search.length)];}}
function execForMatchingChoice(facetChoices,name,func){facetChoices.filter(matchesName(name)).forEach(func);}
function getEventCode(evt){return evt.which||evt.keyCode||evt.charCode;}
function getFacetChoice(orig){var facetChoice=objectify(orig);if(angular.isDefined(orig.options)){facetChoice.options=orig.options.map(objectify);}
return facetChoice;}
function getMatchingOptions(list,search){return list.map(processOption).filter(hasLabel);function processOption(option){return{'key':option.key,'label':itemToLabel(option,search)};}}
function getMatchingFacets(list,search){return list.map(processFacet).filter(hasLabel);function processFacet(facet){return{'name':facet.name,'label':itemToLabel(facet,search),'options':facet.options};}}
function getFacetChoicesFromFacetsParam(param){if(angular.isString(param)){var tmp=param.replace(/__apos__/g,"\'").replace(/__dquote__/g,'\\"').replace(/__bslash__/g,"\\");return angular.fromJson(tmp);}
return param;}
function getFacetsFromSearchTerms(searchTerms,textSearch,textSearchLabel,facetChoices){var buff=[];searchTerms.map(getSearchTermObject).forEach(getFacetFromObj);if(angular.isDefined(textSearch)){var currentTextSearch=searchTerms.filter(function(searchField){return searchField.indexOf(textSearch)===0;});if(currentTextSearch.length===0){buff.push(getTextFacet(textSearch,textSearchLabel));}}
return buff;function getFacetFromObj(searchTermObj){execForMatchingChoice(facetChoices,searchTermObj.type,addFacet);function addFacet(facetChoice){if(angular.isUndefined(facetChoice.options)){buff.push(getFacet(searchTermObj.type,searchTermObj.value,facetChoice.label,searchTermObj.value));}else{facetChoice.options.filter(matchesKey(searchTermObj.value)).forEach(function(option){buff.push(getFacet(searchTermObj.type,searchTermObj.value,facetChoice.label,option.label));});}}}}
function getUnusedFacetChoices(facetChoices,facets){var unused=angular.copy(facetChoices);facets.map(getSearchTermObject).forEach(processSearchTerm);return unused;function processSearchTerm(searchTerm){execForMatchingChoice(unused,searchTerm.type,removeFoundChoice);function removeFoundChoice(choice){if(angular.isUndefined(choice.options)){removeFacetChoice(searchTerm.type,unused);}else if(choice.options.some(matchesKey(searchTerm.value))){removeSingleChoice(choice,searchTerm,unused);}}}}
function removeFacetChoice(type,target){execForMatchingChoice(target.slice(),type,removeFacet);function removeFacet(facet){target.splice(target.indexOf(facet),1);}}
function removeSingleChoice(facetChoice,searchTermObj,target){if(facetChoice.singleton===true){removeFacetChoice(searchTermObj.type,target);}else{removeOptionChoice(searchTermObj,target);}}
function removeChoice(searchTerm,src,target){execForMatchingChoice(src,searchTerm.type,removeFacetOrOption);function removeFacetOrOption(facet){removeSingleChoice(facet,searchTerm,target);}}
function removeOptionChoice(searchTermObj,target){execForMatchingChoice(target.slice().filter(hasOptions),searchTermObj.type,removeOption);function removeOption(choice){choice.options=choice.options.filter(keyNotMatch(searchTermObj.value));if(choice.options.length===0){target.splice(target.indexOf(choice),1);}
function keyNotMatch(value){return function keyNotMatchBool(option){return option.key!==value;};}}}
function getQueryObject(data){return getSearchTermsFromQueryString(data).map(getSearchTermObject).reduce(addToObject,{});function addToObject(orig,curr){orig[curr.type]=curr.value;return orig;}}}})();(function(){'use strict';angular.module('horizon.framework.widgets.magic-search').directive('stMagicSearch',stMagicSearch);stMagicSearch.$inject=['$timeout','horizon.framework.widgets.magic-search.events'];function stMagicSearch($timeout,magicSearchEvents){var directive={link:link,require:'stTable',restrict:'A',scope:true};return directive;function link(scope,element,attr,tableCtrl){scope.currentServerSearchParams={"magicSearchQuery":""};function setPredObj(predicates,predObj,input){var lastPred=predicates.pop();angular.forEach(predicates,function(pred){predObj=predObj[pred]={};});predObj[lastPred]=input;}
function setServerFacetSearch(scope,query){var currentServerSearchParams=angular.copy(scope.currentServerSearchParams);currentServerSearchParams.magicSearchQuery=query;checkAndEmit(scope,currentServerSearchParams);}
function setServerTextSearch(scope,text){var currentServerSearchParams=angular.copy(scope.currentServerSearchParams);currentServerSearchParams.queryString=text;checkAndEmit(scope,currentServerSearchParams);}
function checkAndEmit(scope,serverSearchParams){if(serverSearchParams!==scope.currentServerSearchParams){serverSearchParams.magicSearchQueryChanged=!angular.equals(scope.currentServerSearchParams.magicSearchQuery,serverSearchParams.magicSearchQuery);serverSearchParams.queryStringChanged=!angular.equals(scope.currentServerSearchParams.queryString,serverSearchParams.queryString);scope.currentServerSearchParams=serverSearchParams;if(serverSearchParams.queryStringChanged||serverSearchParams.magicSearchQueryChanged){scope.$emit(magicSearchEvents.SERVER_SEARCH_UPDATED,angular.copy(scope.currentServerSearchParams));}}}
var textSearchWatcher=scope.$on('textSearch-ms-context',function(event,text){$timeout(function(){if(scope.clientFullTextSearch){tableCtrl.search(text);}else{setServerTextSearch(scope,text);}});});var searchUpdatedWatcher=scope.$on('searchUpdated-ms-context',function(event,query){setServerFacetSearch(scope,query);tableCtrl.tableState().search={};query.split('&').forEach(function(x){$timeout(function(){var arr=x.split('=');var predString=arr[0];var predicates=predString.split('.');if(scope.filterFacets){var isServerFacet=scope.filterFacets.some(function checkIsServer(facet){return facet.name===predString&&facet.isServer;});if(isServerFacet){return;}}
if(predicates.length>1){var firstPred=predicates[0];var predicateObj={};setPredObj(predicates,predicateObj,arr[1]);tableCtrl.search(predicateObj[firstPred],firstPred);}else{tableCtrl.search(arr[1],predString);}});});});scope.$on('$destroy',function(){textSearchWatcher();searchUpdatedWatcher();});}}})();(function(){'use strict';angular.module('horizon.framework.widgets.metadata.display').controller('MetadataDisplayController',MetadataDisplayController);MetadataDisplayController.$inject=['horizon.framework.widgets.metadata.tree.service'];function MetadataDisplayController(metadataTreeService){var ctrl=this;ctrl.tree=null;ctrl.selected=null;ctrl.hide=true;ctrl.onSelect=function(item){ctrl.selected.collapse();item.expand(true);ctrl.selected=item;};ctrl.childrenFilter=function(item){return item.visible&&item.leaf&&item.added;};ctrl.listFilter=function(item){return item.addedCount>0;};init();function init(){ctrl.tree=new metadataTreeService.Tree(ctrl.available,ctrl.existing);angular.forEach(ctrl.tree.flatTree,function(item){if(item.added){if(!item.leaf){item.added=false;if(item.parent){item.parent.addedCount-=1;}}else if(!item.custom){ctrl.hide=false;}}});ctrl.tree.flatTree.some(function(item){if(ctrl.listFilter(item)){ctrl.selected=item;item.expand(true);return true;}});ctrl.count=0;ctrl.tree.flatTree.some(function(i){if(ctrl.listFilter(i)){ctrl.count+=1;}});}}})();(function(){'use strict';angular.module('horizon.framework.widgets.metadata.display').directive('metadataDisplay',metadataDisplay);metadataDisplay.$inject=['horizon.framework.widgets.metadata.display.basePath'];function metadataDisplay(path){var directive={bindToController:true,controller:'MetadataDisplayController as ctrl',restrict:'E',scope:{available:'=',existing:'=',text:'=?'},templateUrl:path+'metadata-display.html'};return directive;}})();(function(){'use strict';angular.module('horizon.framework.widgets.metadata.tree').controller('MetadataTreeItemController',MetadataTreeItemController);function MetadataTreeItemController(){var ctrl=this;ctrl.formatErrorMessage=formatErrorMessage;ctrl.opened=false;if('item'in ctrl&&'leaf'in ctrl.item&&ctrl.item.leaf.type==='array'){ctrl.values=ctrl.item.leaf.items.enum.filter(filter).sort();if(!ctrl.item.leaf.readonly){ctrl.addValue=addValue;ctrl.removeValue=removeValue;ctrl.switchOpened=switchOpened;ctrl.opened=ctrl.item.leaf.value.length===0;}}
function formatErrorMessage(item,error){if(error.min){return ctrl.text.min+' '+item.leaf.minimum;}
if(error.max){return ctrl.text.max+' '+item.leaf.maximum;}
if(error.minlength){return ctrl.text.minLength+' '+item.leaf.minLength;}
if(error.maxlength){return ctrl.text.maxLength+' '+item.leaf.maxLength;}
if(error.pattern){if(item.leaf.type==='integer'){return ctrl.text.integerRequired;}else{return ctrl.text.patternMismatch;}}
if(error.number){if(item.leaf.type==='integer'){return ctrl.text.integerRequired;}else{return ctrl.text.decimalRequired;}}
if(error.required){return ctrl.text.required;}}
function filter(i){return ctrl.item.leaf.value.indexOf(i)<0;}
function remove(array,value){var index=array.indexOf(value);if(index>-1){array.splice(index,1);}
return array;}
function addValue(val){ctrl.item.leaf.value.push(val);ctrl.item.leaf.value.sort();remove(ctrl.values,val);}
function removeValue(val){remove(ctrl.item.leaf.value,val);ctrl.values.push(val);ctrl.values.sort();if(ctrl.item.leaf.value.length===0){ctrl.opened=true;}}
function switchOpened(){ctrl.opened=!ctrl.opened;}}})();(function(){'use strict';angular.module('horizon.framework.widgets.metadata.tree').directive('metadataTreeItem',metadataTreeItem);metadataTreeItem.$inject=['horizon.framework.widgets.metadata.tree.basePath'];function metadataTreeItem(path){var directive={bindToController:true,controller:'MetadataTreeItemController as ctrl',restrict:'E',scope:{action:'&',item:'=',text:'='},templateUrl:path+'metadata-tree-item.html'};return directive;}})();(function(){'use strict';angular.module('horizon.framework.widgets.metadata.tree').controller('MetadataTreeController',MetadataTreeController);MetadataTreeController.$inject=['horizon.framework.widgets.metadata.tree.service','horizon.framework.widgets.metadata.tree.defaults'];function MetadataTreeController(metadataTreeService,defaults){var ctrl=this;ctrl.availableFilter=availableFilter;ctrl.quickFilter=quickFilter;ctrl.checkNameUnique=checkNameUnique;ctrl.text=angular.extend({},defaults.text,ctrl.text);if(!ctrl.tree){ctrl.tree=new metadataTreeService.Tree(ctrl.available,ctrl.existing);}
ctrl.customItem='';ctrl.filterText={available:'',existing:''};function availableFilter(item){return!item.added&&item.visible;}
function quickFilter(item){var text=ctrl.filterText.available;if(!text){return true;}
if(item.children.length>0){return item.children.filter(quickFilter).length>0;}
return item.label.indexOf(text)>-1||item.leaf.name.indexOf(text)>-1;}
function checkNameUnique(name){return!ctrl.tree.flatTree.some(function(item){return item.leaf&&item.leaf.name===name;});}}})();(function(){'use strict';angular.module('horizon.framework.widgets.metadata.tree').directive('metadataTree',metadataTree);metadataTree.$inject=['horizon.framework.widgets.metadata.tree.basePath'];function metadataTree(path){var directive={bindToController:true,controller:'MetadataTreeController as ctrl',restrict:'E',scope:{tree:'=*?model',available:'=?',existing:'=?',text:'=?',metadataForm:'=?form'},templateUrl:path+'metadata-tree.html'};return directive;}})();(function(){'use strict';angular.module('horizon.framework.widgets.metadata.tree').factory('horizon.framework.widgets.metadata.tree.service',metadataTreeService);function metadataTreeService(){var service={Item:Item,Property:Property,Tree:Tree};function Property(name,json){this.name=name;this.title=name;this.description='';this.value=null;this.default=null;this.type='string';this.readonly=false;this.operators=['<in>'];angular.extend(this,json);this.operator=this.operators[0];this.setValue(this.default);}
Property.prototype.setValue=function(value){if(value===null){this.value=this.type!=='array'?null:[];return;}
switch(this.type){case'integer':this.value=parseInt(value,10);break;case'number':this.value=parseFloat(value);break;case'array':var data=/^(<.*?>) (.*)$/.exec(value);if(data&&data.length>2){this.operator=data[1];this.value=data[2].split(',');}
break;case'boolean':this.value=parseBool(value);break;default:this.value=value;}};Property.prototype.getValue=function(){switch(this.type){case'array':return this.operator+' '+this.value.join(',');default:return''+this.value;}};function Item(parent){Object.defineProperty(this,'parent',{value:parent||null});this.children=[];this.visible=false;this.expanded=false;this.label='';this.description='';this.level=parent?parent.level+1:0;this.addedCount=0;this.custom=false;this.leaf=false;this.added=false;}
Item.prototype.fromNamespace=function(namespace){this.label=namespace.display_name;this.description=namespace.description;if(namespace.objects){angular.forEach(namespace.objects,function(object){this.children.push(new Item(this).fromObject(object));},this);}
if(namespace.properties){angular.forEach(namespace.properties,function(property,key){this.children.push(new Item(this).fromProperty(key,property));},this);}
this.sortChildren();return this;};Item.prototype.fromObject=function(object){this.label=object.name;this.description=object.description;if(object.properties){angular.forEach(object.properties,function(property,key){this.children.push(new Item(this).fromProperty(key,property));},this);}
this.sortChildren();return this;};Item.prototype.fromProperty=function(name,property){this.leaf=new Property(name,property);this.label=this.leaf.title;this.description=this.leaf.description;return this;};Item.prototype.customProperty=function(name,property){this.fromProperty(name,property);this.custom=true;return this;};Item.prototype.expand=function(deep){this.expanded=true;angular.forEach(this.children,function(child){if(deep){child.expand(deep);}
child.visible=true;},this);};Item.prototype.collapse=function(){this.expanded=false;angular.forEach(this.children,function(child){child.collapse();child.visible=false;},this);};Item.prototype.sortChildren=function(){this.children.sort(function(a,b){return a.label.localeCompare(b.label);});};Item.prototype.markAsAdded=function(caller){if(this.parent&&!this.added){this.parent.addedCount+=1;if(this.parent.addedCount===this.parent.children.length){this.parent.markAsAdded(this);}}
this.added=true;if(!caller){angular.forEach(this.children,function(item){item.markAsAdded();},this);}};Item.prototype.unmarkAsAdded=function(expand,caller){if(this.parent){if(expand){this.parent.expand();}
if(this.added){this.parent.addedCount-=1;this.parent.unmarkAsAdded(expand,this);}}
this.added=false;if(!caller){angular.forEach(this.children,function(item){item.unmarkAsAdded(expand);},this);}};Item.prototype.path=function(path){path=angular.isDefined(path)?path:[];if(this.parent){this.parent.path(path);}
path.push(this);return path;};Item.prototype.breadcrumb=function(){return this.path().map(function(item){return item.label;}).join(' › ');};Item.prototype.setLeafValue=function(value){if(this.leaf){this.leaf.setValue(value);}};Item.prototype.getLeafValue=function(){if(this.leaf){return this.leaf.getValue();}};function Tree(available,existing){this.tree=[];this.loadNamespaces(available);this.flatTree=this.flatten(this.tree);this.selected=null;this.loadExisting(existing);}
Tree.prototype.loadNamespaces=function(namespaces){angular.forEach(namespaces,function(namespace){var item=new Item().fromNamespace(namespace);item.visible=true;this.tree.push(item);},this);this.tree.sort(function(a,b){return a.label.localeCompare(b.label);});return this;};Tree.prototype.flatten=function(branch,items){items=angular.isDefined(items)?items:[];angular.forEach(branch,function(item){items.push(item);this.flatten(item.children,items);},this);return items;};Tree.prototype.loadExisting=function(existing){var itemsMapping={};angular.forEach(this.flatTree,function(item){if(item.leaf){angular.forEach(existing,function caseInsensitiveCompare(value,key){var caseInsensitiveLeafName=item.leaf.name.toLocaleLowerCase();if(caseInsensitiveLeafName===key.toLocaleLowerCase()){itemsMapping[caseInsensitiveLeafName]=item;}});}});angular.forEach(existing,function(value,key){var item=itemsMapping[key.toLocaleLowerCase()];if(angular.isUndefined(item)){item=new Item().customProperty(key);this.flatTree.push(item);}
item.setLeafValue(value);item.markAsAdded();},this);};Tree.prototype.getExisting=function(){var existing={};angular.forEach(this.flatTree,function(item){if(item.added&&item.leaf){if(item.leaf.type==='array'&&item.leaf.value.length===0){}else{existing[item.leaf.name]=item.getLeafValue();}}});return existing;};Tree.prototype.select=function(item){this.selected=item;if(!item.expanded){item.expand();}else{item.collapse();}};Tree.prototype.markAsAdded=function(item){this.selected=item;item.markAsAdded();};Tree.prototype.unmarkAsAdded=function(item){if(!item.custom){this.selected=item;item.unmarkAsAdded(true);}else{this.selected=null;var i=this.flatTree.indexOf(item);if(i>-1){this.flatTree.splice(i,1);}}};Tree.prototype.addCustom=function(name){var item=new Item().customProperty(name);item.markAsAdded();this.flatTree.push(item);this.selected=item;};function parseBool(value){if(value===true||value===false){return value;}else if(angular.isString(value)){value=value.toLowerCase();if(value==='true'){return true;}else if(value==='false'){return false;}}
return null;}
return service;}})();(function(){'use strict';angular.module('horizon.framework.widgets.modal-wait-spinner').directive('waitSpinner',waitSpinner);waitSpinner.$inject=['horizon.framework.widgets.basePath'];function waitSpinner(basePath){var directive={scope:{text:'@text'},templateUrl:basePath+'modal-wait-spinner/modal-wait-spinner.template.html',restrict:'A'};return directive;}})();(function(){'use strict';angular.module('horizon.framework.widgets.modal-wait-spinner').factory('horizon.framework.widgets.modal-wait-spinner.service',WaitSpinnerService);WaitSpinnerService.$inject=['$interpolate','$templateCache','horizon.framework.widgets.basePath','$uibModal'];function WaitSpinnerService($interpolate,$templateCache,basePath,$uibModal){var spinner=this;var service={showModalSpinner:showModalSpinner,hideModalSpinner:hideModalSpinner};return service;function showModalSpinner(spinnerText){var templateUrl=basePath+'modal-wait-spinner/modal-wait-spinner.template.html';var html=$templateCache.get(templateUrl);var modalOptions={backdrop:'static',template:$interpolate(html)({text:spinnerText}),windowClass:'modal-wait-spinner'};spinner.modalInstance=$uibModal.open(modalOptions);}
function hideModalSpinner(){if(spinner.modalInstance){spinner.modalInstance.dismiss();delete spinner.modalInstance;}}}})();(function(){'use strict';angular.module('horizon.framework.widgets.modal').factory('horizon.framework.widgets.modal.deleteModalService',deleteModalService);deleteModalService.$inject=['$q','horizon.framework.widgets.modal.simple-modal.service','horizon.framework.widgets.toast.service','horizon.framework.util.q.extensions'];function deleteModalService($q,simpleModalService,toast,$qExtensions){var service={open:open};return service;function open(scope,entities,context){var options={title:context.labels.title,body:interpolate(context.labels.message,[entities.map(getName).join("\", \"")]),submit:context.labels.submit};return simpleModalService.modal(options).result.then(onModalSubmit);function onModalSubmit(){return $qExtensions.allSettled(entities.map(deleteEntityPromise)).then(notify);}
function deleteEntityPromise(entity){return{promise:context.deleteEntity(entity.id),context:entity};}
function notify(result){if(result.pass.length>0){var passEntities=result.pass.map(getEntities);scope.$emit(context.successEvent,passEntities.map(getId));toast.add('success',getMessage(context.labels.success,passEntities));}
if(result.fail.length>0){var failEntities=result.fail.map(getEntities);scope.$emit(context.failedEvent,failEntities.map(getId));toast.add('error',getMessage(context.labels.error,failEntities));}
return result;}}
function getEntities(passResponse){return passResponse.context;}
function getMessage(message,entities){return interpolate(message,[entities.map(getName).join(", ")]);}
function getName(entity){return entity.name||entity.id;}
function getId(entity){return entity.id;}}})();(function(){'use strict';angular.module('horizon.framework.widgets.modal').controller('SimpleModalController',SimpleModalController);SimpleModalController.$inject=['$uibModalInstance','context'];function SimpleModalController($uibModalInstance,context){var ctrl=this;ctrl.context=context;ctrl.submit=function(){$uibModalInstance.close();};ctrl.cancel=function(){$uibModalInstance.dismiss('cancel');};}})();(function(){'use strict';angular.module('horizon.framework.widgets.modal').factory('horizon.framework.widgets.modal.simple-modal.service',modalService);modalService.$inject=['$uibModal','horizon.framework.widgets.basePath','horizon.framework.util.i18n.gettext'];function modalService($uibModal,path,gettext){var service={modal:modal};return service;function modal(params){if(params&&params.title&&params.body){var options={controller:'SimpleModalController as modalCtrl',templateUrl:path+'modal/simple-modal.html',resolve:{context:function(){return{title:params.title,body:params.body,submit:params.submit||gettext('Submit'),cancel:params.cancel||gettext('Cancel'),confirmCssClass:params.confirmCssClass||"btn-primary"};}}};return $uibModal.open(options);}}}})();(function(){'use strict';angular.module('horizon.framework.widgets.modal').factory('horizon.framework.widgets.modal.wizard-modal.service',WizardModalService);WizardModalService.$inject=['$log','$uibModal'];function WizardModalService($log,$uibModal){var service={modal:modal};return service;function modal(params){if(params&&params.workflow&&params.submit){var options={size:'lg',controller:'WizardModalController as modalCtrl',template:'<wizard></wizard>',backdrop:'static',windowClass:'modal-dialog-wizard',resolve:{workflow:function(){return params.workflow;},submit:function(){return params.submit;},data:function(){return params.data;}}};return $uibModal.open(options);}}}})();(function(){'use strict';angular.module('horizon.framework.widgets.modal').controller('WizardModalController',WizardModalController);WizardModalController.$inject=['$uibModalInstance','$scope','workflow','submit','data'];function WizardModalController($uibModalInstance,$scope,workflow,submit,data){$scope.close=close;$scope.cancel=cancel;$scope.submit=submit;$scope.workflow=workflow;angular.forEach(data,function copy(value,key){$scope[key]=value;});function close(args){$uibModalInstance.close(args);}
function cancel(){$uibModalInstance.dismiss('cancel');}}})();(function(){'use strict';angular.module('horizon.framework.widgets.panel').controller('horizon.framework.widgets.panel.HzResourcePanelController',controller);controller.$inject=['horizon.framework.conf.resource-type-registry.service'];function controller(registry){var ctrl=this;ctrl.resourceType=registry.getResourceType(ctrl.resourceTypeName);ctrl.pageName=ctrl.resourceType.getName();}})();(function(){'use strict';angular.module('horizon.framework.widgets.panel').directive('hzResourcePanel',directive);directive.$inject=['horizon.framework.widgets.basePath'];function directive(basePath){var directive={restrict:'E',scope:{resourceTypeName:'@'},transclude:true,bindToController:true,templateUrl:basePath+'panel/hz-resource-panel.html',controller:"horizon.framework.widgets.panel.HzResourcePanelController as ctrl"};return directive;}})();(function(){'use strict';angular.module('horizon.framework.widgets.property').directive('hzField',hzField);hzField.$inject=['$filter'];function hzField($filter){var directive={restrict:'E',scope:{config:"=",item:"="},link:link};return directive;function link(scope,element){var config=scope.config;var item=scope.item;var propValue=item[config.id];var output=applyFilters(config,propValue);if(output&&output.then){output.then(postFilterFormatting);}else{postFilterFormatting(output);}
function postFilterFormatting(output){if(config&&config.values){output=config.values[output];}
var url;if(config&&config.urlFunction){url=config.urlFunction(item);}
if(url){element.append(angular.element('<a>').attr('href',url).text(output));}else{element.text(output);}}}
function applyFilters(config,propValue){var output=propValue;if(config&&config.filters){for(var i=0;i<config.filters.length;i++){var filter=config.filters[i];if(angular.isFunction(filter)){output=filter(output);}else{output=$filter(filter)(output);}}}
return output;}}})();(function(){'use strict';angular.module('horizon.framework.widgets.property').directive('hzResourcePropertyList',directive);directive.$inject=['horizon.framework.widgets.basePath'];function directive(basePath){var directiveConf={restrict:'E',scope:{resourceTypeName:"@",propertyGroups:"=",cls:"@?",item:"="},link:link,templateUrl:basePath+'property/hz-resource-property-list.html'};return directiveConf;function link(scope){scope.getBootstrapColumnSpan=getBootstrapColumnSpan;function getBootstrapColumnSpan(columns){return Math.floor(12/columns.length);}}}})();(function(){'use strict';angular.module('horizon.framework.widgets.property').controller('horizon.framework.widgets.property.hzResourcePropertyController',controller);controller.$inject=['horizon.framework.conf.resource-type-registry.service'];function controller(registry){var ctrl=this;ctrl.config=registry.getResourceType(ctrl.resourceTypeName).getProperties()[ctrl.propName];ctrl.config.id=ctrl.propName;angular.forEach(registry.getResourceType(ctrl.resourceTypeName).getTableColumns(),function(column){if(column.id===ctrl.propName){ctrl.config.priority=column.priority;}});}})();(function(){'use strict';angular.module('horizon.framework.widgets.property').directive('hzResourceProperty',hzResourceProperty);hzResourceProperty.$inject=['$log','horizon.framework.widgets.basePath'];function hzResourceProperty($log,basePath){var directiveConf={restrict:'E',scope:{resourceTypeName:"@",propName:"@",item:"="},bindToController:true,controller:'horizon.framework.widgets.property.hzResourcePropertyController as ctrl',templateUrl:basePath+'property/hz-resource-property.html',link:link};return directiveConf;function link(scope,element){var config=scope.ctrl.config;var priority=config.priority?config.priority:1;if(!angular.isNumber(priority)||priority<1){priority=1;$log.warn("Please set an integer of 1 or more for priority of hz-resource-property. "+"Otherwise priority is set 1, 1 is the highest priority and will not be hidden "+"from table row due to window narrowing.");}
var style=priority>1?'rsp-alt-p':'rsp-p';element.addClass(style+priority);}}})();(function(){'use strict';angular.module('horizon.framework.widgets.table').directive('hzCell',hzCell);hzCell.$inject=['$compile'];function hzCell($compile){var directive={restrict:'E',scope:{table:'=',column:'=',item:'='},link:link};return directive;function link(scope,element){var column=scope.column;var html;var progressBarHtml='';if(column&&column.template){html=$compile(column.template)(scope);}else{if(column.itemInTransitionFunction&&column.itemInTransitionFunction(scope.item)){progressBarHtml='<div class="progress-text horizon-loading-bar">'+'<div class="progress progress-striped active">'+'<div class="progress-bar"></div>'+'</div>'+'</div>';}
html=$compile(progressBarHtml+'<hz-field config="column" item="item"></hz-field>')(scope);}
element.append(html);}}})();(function(){'use strict';angular.module('horizon.framework.widgets.table').directive('hzDetailRow',hzDetailRow);hzDetailRow.$inject=['horizon.framework.widgets.basePath','$http','$compile','$templateCache'];function hzDetailRow(basePath,$http,$compile,$templateCache){var directive={restrict:'E',scope:false,link:link};return directive;function link(scope,element,attrs){scope.$watch(attrs.templateUrl,function(templateUrl){if(!templateUrl){templateUrl=basePath+'table/hz-detail-row.html';}
$http.get(templateUrl,{cache:$templateCache}).then(function(response){var template=response.data;element.append($compile(template)(scope));});});}}})();(function(){'use strict';angular.module('horizon.framework.widgets.table').controller('horizon.framework.widgets.table.HzDynamicTableController',controller);controller.$inject=['$scope','horizon.framework.conf.permissions.service'];function controller($scope,permissionsService){$scope.items=[];$scope.columnAllowed=columnAllowed;var allowedColumns={};$scope.$watch("config",onConfigChange,true);function onConfigChange(newConfig){if(angular.isDefined(newConfig)){if(angular.isUndefined(newConfig.selectAll)){newConfig.selectAll=true;}
if(angular.isUndefined(newConfig.expand)){newConfig.expand=true;}
allowedColumns={};angular.forEach(newConfig.columns,checkPermissions);}}
function checkPermissions(column){permissionsService.checkAll(column).then(allow,disallow);function allow(){allowedColumns[column.id]=true;}
function disallow(){allowedColumns[column.id]=false;}}
function columnAllowed(column){return allowedColumns[column.id]||false;}}})();(function(){'use strict';angular.module('horizon.framework.widgets.table').directive('hzDynamicTable',hzDynamicTable);hzDynamicTable.$inject=['horizon.framework.widgets.basePath'];function hzDynamicTable(basePath){var directive={restrict:'E',scope:{config:'=',safeSrcItems:'=items',table:'=',batchActions:'=?',itemActions:'=?',filterFacets:'=?',resultHandler:'=?',itemInTransitionFunction:'=?'},controller:'horizon.framework.widgets.table.HzDynamicTableController',templateUrl:basePath+'table/hz-dynamic-table.html'};return directive;}})();(function(){'use strict';angular.module('horizon.framework.widgets.table').directive('hzExpandDetail',hzExpandDetail);hzExpandDetail.$inject=['horizon.framework.widgets.table.expandSettings'];function hzExpandDetail(settings){var directive={restrict:'A',require:'?^hzTable',scope:{icons:'@hzExpandDetail',duration:'@',item:'=?'},link:link};return directive;function link(scope,element,attrs,hzTableCtrl){element.on('click',onClick);function onClick(){var iconClasses=scope.icons||settings.expandIconClasses;element.toggleClass(iconClasses);var summaryRow=element.closest('tr');var detailCell=summaryRow.next('tr').find('.detail');var duration=scope.duration?parseInt(scope.duration,10):settings.duration;if(summaryRow.hasClass('expanded')){var options={duration:duration,complete:function(){summaryRow.toggleClass('expanded');}};detailCell.find('.detail-expanded').slideUp(options);}else{summaryRow.toggleClass('expanded');if(detailCell.find('.detail-expanded').length===0){detailCell.wrapInner('<div class="detail-expanded"></div>');}
if(scope.item&&hzTableCtrl){hzTableCtrl.broadcastExpansion(scope.item);}
detailCell.find('.detail-expanded').slideDown(duration);}}}}})();(function(){'use strict';angular.module('horizon.framework.widgets.table').directive('hzNoItems',hzNoItems);hzNoItems.$inject=['horizon.framework.widgets.basePath'];function hzNoItems(basePath){var directive={restrict:'A',require:'^hzTable',templateUrl:basePath+'table/hz-no-items.html',scope:{items:'=',message:'=?'}};return directive;}}());(function(){'use strict';angular.module('horizon.framework.widgets.table').controller('horizon.framework.widgets.table.ResourceTableController',controller);controller.$inject=['$q','$scope','horizon.framework.widgets.table.events','horizon.framework.widgets.magic-search.events','horizon.framework.widgets.magic-search.service','horizon.framework.util.actions.action-result.service','horizon.framework.conf.resource-type-registry.service'];function controller($q,$scope,hzTableEvents,magicSearchEvents,searchService,actionResultService,registry){var ctrl=this;var lastSearchQuery={};ctrl.actionResultHandler=actionResultHandler;ctrl.searchFacets=[];ctrl.config={};ctrl.batchActions=[];ctrl.items=[];ctrl.itemsSrc=[];ctrl.itemInTransitionFunction=itemInTransitionFunction;$scope.$on(magicSearchEvents.SERVER_SEARCH_UPDATED,handleServerSearch);$scope.$watch("ctrl.resourceTypeName",onResourceTypeNameChange);$scope.$watch("ctrl.listFunctionExtraParams",onListFunctionExtraParamsChange);function onResourceTypeNameChange(newValue){if(angular.isDefined(newValue)){ctrl.resourceType=registry.getResourceType(newValue);ctrl.resourceType.initActions($scope);ctrl.searchFacets=ctrl.resourceType.filterFacets;ctrl.config={detailsTemplateUrl:ctrl.resourceType.summaryTemplateUrl,selectAll:!!ctrl.resourceType.batchActions.length,expand:ctrl.resourceType.summaryTemplateUrl,trackId:ctrl.trackBy||'id',columns:ctrl.resourceType.getTableColumns()};ctrl.batchActions=ctrl.resourceType.globalActions.concat(ctrl.resourceType.batchActions);checkForFilterFirstAndListResources();}}
function onListFunctionExtraParamsChange(newValue){if(angular.isDefined(newValue)){checkForFilterFirstAndListResources();}}
function checkForFilterFirstAndListResources(){if(ctrl.resourceType){ctrl.resourceType.needsFilterFirstFunction().then(resolve);}
function resolve(result){ctrl.config.needsFilterFirst=false;if(result){if(checkForFiltersInSearchQuery()){listResources();}
else{ctrl.config.needsFilterFirst=true;ctrl.itemsSrc=[];}}
else{listResources();}}
function checkForFiltersInSearchQuery(){var filters=ctrl.searchFacets.filter(function(facet){var queryParams=Object.keys(lastSearchQuery);return queryParams.indexOf(facet.name)>-1;});return filters.length>0;}}
function listResources(){if(ctrl.resourceType){ctrl.resourceType.list(angular.extend({},lastSearchQuery,ctrl.listFunctionExtraParams)).then(onLoad);}}
function handleServerSearch(evt,magicSearchQueryObj){lastSearchQuery=searchService.getSearchTermsFromQueryString(magicSearchQueryObj.magicSearchQuery).reduce(queryToObject,{});checkForFilterFirstAndListResources();function queryToObject(orig,curr){var fields=searchService.getSearchTermObject(curr);orig[fields.type]=fields.value;return orig;}}
function onLoad(response){ctrl.itemsSrc=response.data.items;}
function actionResultHandler(returnValue){return $q.when(returnValue,actionSuccessHandler);}
function actionSuccessHandler(result){var deletedIds,updatedIds,createdIds,failedIds;if(result){deletedIds=actionResultService.getIdsOfType(result.deleted,ctrl.resourceType.type);updatedIds=actionResultService.getIdsOfType(result.updated,ctrl.resourceType.type);createdIds=actionResultService.getIdsOfType(result.created,ctrl.resourceType.type);failedIds=actionResultService.getIdsOfType(result.failed,ctrl.resourceType.type);if(deletedIds.length){ctrl.itemsSrc=difference(ctrl.itemsSrc,deletedIds,'id');$scope.$broadcast(hzTableEvents.CLEAR_SELECTIONS);}
if(updatedIds.length||createdIds.length){checkForFilterFirstAndListResources();}
if(failedIds.length){}}else{checkForFilterFirstAndListResources();}}
function difference(currentList,otherList,key){return currentList.filter(filter);function filter(elem){return otherList.filter(function filterDeletedItem(deletedItem){return deletedItem===elem[key];}).length===0;}}
function itemInTransitionFunction(item){return ctrl.resourceType.itemInTransitionFunction(item);}}})();(function(){'use strict';angular.module('horizon.framework.widgets.table').directive('hzResourceTable',directive);directive.$inject=['horizon.framework.widgets.basePath'];function directive(basePath){var directive={restrict:'E',scope:{resourceTypeName:'@',trackBy:'@?',listFunctionExtraParams:'=?'},bindToController:true,templateUrl:basePath+'table/hz-resource-table.html',controller:"horizon.framework.widgets.table.ResourceTableController as ctrl"};return directive;}})();(function(){'use strict';angular.module('horizon.framework.widgets.table').directive('hzSearchBar',hzSearchBar);hzSearchBar.$inject=['horizon.framework.widgets.table.filterPlaceholderText','horizon.framework.widgets.basePath'];function hzSearchBar(FILTER_PLACEHOLDER_TEXT,basePath){var directive={restrict:'E',templateUrl:basePath+'table/search-bar.html',transclude:true,link:link};return directive;function link(scope,element,attrs,ctrl,transclude){if(angular.isDefined(attrs.groupClasses)){element.find('.input-group').addClass(attrs.groupClasses);}
if(angular.isDefined(attrs.iconClasses)){element.find('.fa').addClass(attrs.iconClasses);}
var searchInput=element.find('[st-search]');if(angular.isDefined(attrs.inputClasses)){searchInput.addClass(attrs.inputClasses);}
var placeholderText=attrs.placeholder||FILTER_PLACEHOLDER_TEXT;searchInput.attr('placeholder',placeholderText);transclude(scope,function(clone){element.find('.input-group').append(clone);});}}}());(function(){'use strict';angular.module('horizon.framework.widgets.table').directive('hzSelectAll',hzSelectAll);hzSelectAll.$inject=['horizon.framework.widgets.table.events'];function hzSelectAll(events){var directive={restrict:'A',require:['^hzTable','^stTable'],scope:{rows:'=hzSelectAll'},link:link};return directive;function link(scope,element,attrs,ctrls){var hzTableCtrl=ctrls[0];var stTableCtrl=ctrls[1];element.click(clickHandler);var unWatchTableState=scope.$watch(function(){return stTableCtrl.tableState();},updateSelectAll,true);var unWatchRowsLength=scope.$watch('rows.length',updateSelectAll);var unWatchRowSelected=scope.$on(events.ROW_SELECTED,updateSelectAll);scope.$on('$destroy',function(){unWatchTableState();unWatchRowsLength();unWatchRowSelected();});function clickHandler(){scope.$apply(function(){scope.$evalAsync(function(){var checkedState=element.prop('checked');angular.forEach(scope.rows,function(row){var selected=hzTableCtrl.isSelected(row);if(selected!==checkedState){hzTableCtrl.toggleSelect(row,checkedState);}});});});}
function updateSelectAll(){var visibleRows=scope.rows;var numVisibleRows=visibleRows.length;var checkedCnt=visibleRows.filter(hzTableCtrl.isSelected).length;element.prop('checked',numVisibleRows>0&&numVisibleRows===checkedCnt);}}}})();(function(){'use strict';angular.module('horizon.framework.widgets.table').directive('hzSelect',hzSelect);function hzSelect(){var directive={restrict:'A',require:'^hzTable',scope:{row:'=hzSelect'},link:link};return directive;function link(scope,element,attrs,hzTableCtrl){element.click(clickHandler);function clickHandler(){scope.$apply(function(){scope.$evalAsync(function(){var checkedState=element.prop('checked');hzTableCtrl.toggleSelect(scope.row,checkedState,true);});});}}}})();(function(){'use strict';angular.module('horizon.framework.widgets.table').controller('HzTableFooterController',HzTableFooterController);HzTableFooterController.$inject=['horizon.framework.conf.tableOptions'];function HzTableFooterController(tableOptions){var ctrl=this;ctrl.pageSize=horizon.cookies.get('API_RESULT_PAGE_SIZE')||tableOptions.pageSize;}})();(function(){'use strict';angular.module("horizon.framework.widgets.table").directive('hzTableFooter',hzTableFooter);hzTableFooter.$inject=['horizon.framework.widgets.basePath','$compile'];function hzTableFooter(basePath,$compile){var directive={controller:'HzTableFooterController as ctrl',restrict:'A',scope:{items:'='},templateUrl:basePath+'table/hz-table-footer.html',transclude:true,link:link};return directive;function link(scope,element,attrs){if(attrs.message){element.find('.display').replaceWith($compile(attrs.message)(scope));}}}})();(function(){'use strict';angular.module('horizon.framework.widgets.table').directive('hzTable',hzTable);function hzTable(){return{restrict:'A',require:'stTable',scope:true,controller:'TableController',controllerAs:'tCtrl',link:link};function link(scope,element,attrs){scope.$watch(attrs.trackRowsBy,function(newValue){if(angular.isDefined(newValue)){scope.tCtrl.trackId=newValue;}});}}})();(function(){'use strict';angular.module('horizon.framework.widgets.table').controller('TableController',TableController);TableController.$inject=['$scope','horizon.framework.widgets.table.events'];function TableController($scope,events){var ctrl=this;ctrl.trackId='id';ctrl.isSelected=isSelected;ctrl.toggleSelect=toggleSelect;ctrl.broadcastExpansion=broadcastExpansion;clearSelected();var clearWatcher=$scope.$on(events.CLEAR_SELECTIONS,clearSelected);$scope.$on('$destroy',function(){clearWatcher();});function isSelected(row){var rowState=ctrl.selections[row[ctrl.trackId]];return angular.isDefined(rowState)&&rowState.checked;}
function clearSelected(){ctrl.selected=[];ctrl.selections={};}
function getSelected(map){return Object.keys(map).filter(function isChecked(k){return map[k].checked;}).map(function getItem(k){return map[k].item;});}
function toggleSelect(row,checkedState,broadcast){var key=row[ctrl.trackId];ctrl.selections[key]={checked:checkedState,item:row};ctrl.selected=getSelected(ctrl.selections);if(broadcast){var rowObj={row:row,checkedState:checkedState};$scope.$broadcast(events.ROW_SELECTED,rowObj);}}
function broadcastExpansion(item){$scope.$broadcast(events.ROW_EXPANDED,item);}}})();(function(){'use strict';angular.module('horizon.framework.widgets.toast').directive('toast',toast);toast.$inject=['horizon.framework.widgets.toast.service','horizon.framework.widgets.basePath'];function toast(toastService,path){var directive={restrict:'EA',templateUrl:path+'toast/toast.html',scope:{},link:link};return directive;function link(scope){scope.toast=toastService;}}})();(function(){'use strict';angular.module('horizon.framework.widgets.toast').factory('horizon.framework.widgets.toast.service',toastService);toastService.$inject=['$timeout','horizon.framework.conf.toastOptions'];function toastService($timeout,toastOptions){var toasts=[];var service={types:{},add:add,get:get,find:find,cancel:cancel,clearAll:clearAll,clearErrors:clearErrors,clearSuccesses:clearSuccesses};service.types={danger:gettext('Danger'),warning:gettext('Warning'),info:gettext('Info'),success:gettext('Success'),error:gettext('Error')};return service;function clear(type){for(var i=toasts.length-1;i>=0;i--){if(toasts[i].type===type){toasts.splice(i,1);}}}
function autoDismiss(toast){$timeout(function dismiss(){var index=toasts.indexOf(toast);var dismissible=toastOptions.dimissible.indexOf('alert-'+toast.type);if(index>-1&&dismissible>-1){toasts.splice(index,1);}},toastOptions.delay);}
function cancel(index){toasts.splice(index,1);}
function add(type,msg){var toast={type:type==='error'?'danger':type,typeMsg:this.types[type],msg:msg,cancel:cancel};autoDismiss(toast);toasts.push(toast);}
function get(){return toasts;}
function find(type,msg){return toasts.find(function(toast){var toastType=(type==='error'?'danger':type);return(toast.type===toastType&&toast.msg.localeCompare(msg)===0);});}
function clearAll(){toasts=[];}
function clearErrors(){clear('danger');}
function clearSuccesses(){clear('success');}}})();(function(){'use strict';angular.module('horizon.framework.widgets.transfer-table').filter('filterAvailable',filterAvailable);filterAvailable.$inject=['horizon.framework.util.filters.$memoize'];function filterAvailable($memoize){return $memoize($filterAvailable,$hasher);function $idKeyOrDefault(primaryKey){return primaryKey||'id';}
function arrayIsEmpty(array){return angular.isUndefined(array)||!array.length;}
function emptyObj(obj){return angular.isUndefined(obj)||!Object.keys(obj).length;}
function $hasher(available,allocatedIds,primaryKey){if(arrayIsEmpty(available)){return'';}
primaryKey=$idKeyOrDefault(primaryKey);var key=available.map(function(item){return item[primaryKey];}).sort().join('_');return key+'_'+Object.keys(allocatedIds).sort().join('_');}
function $filterAvailable(available,allocatedKeys,primaryKey){if(arrayIsEmpty(available)){return[];}else if(emptyObj(allocatedKeys)){return available;}
primaryKey=$idKeyOrDefault(primaryKey);return available.filter(function isItemAvailable(item){return!(item[primaryKey]in allocatedKeys);});}}})();(function(){'use strict';angular.module('horizon.framework.widgets.transfer-table').controller('transferTableController',TransferTableController);TransferTableController.$inject=['$scope','$timeout','$parse','$attrs','$log','horizon.framework.widgets.transfer-table.events','horizon.framework.widgets.transfer-table.helpText','horizon.framework.widgets.transfer-table.limits','horizon.framework.util.q.extensions'];function TransferTableController($scope,$timeout,$parse,$attrs,$log,events,helpText,limits,qExtensions){var trModel=$parse($attrs.trModel)($scope);var trHelpText=$parse($attrs.helpText)($scope);var trLimits=$parse($attrs.limits)($scope);var ctrl=this;ctrl.allocate=allocate;ctrl.deallocate=deallocate;ctrl.itemActions=getItemActions();ctrl.toggleView=toggleView;ctrl.updateAllocated=updateAllocated;ctrl.numAllocated=numAllocated;ctrl.helpText=angular.extend({},helpText,trHelpText);ctrl.limits=angular.extend({},limits,trLimits);ctrl.numAvailable=numAvailable;ctrl.views={allocated:true,available:true};var tablesChangedWatcher=$scope.$on(events.TABLES_CHANGED,onTablesChanged);$scope.$on('$destroy',function(){tablesChangedWatcher();});init(trModel);function getItemActions(){return[{template:{text:'',actionClasses:'fa fa-arrow-up'},service:{allowed:function allocationAllowed(item){var allocatable=item&&!ctrl.allocatedIds[item.id];return qExtensions.booleanAsPromise(allocatable);},perform:function performAllocation(item){allocate(item);return qExtensions.booleanAsPromise(true);}}},{template:{text:'',actionClasses:'fa fa-arrow-down'},service:{allowed:function deallocationAllowed(item){var deallocatable=item&&ctrl.allocatedIds[item.id];return qExtensions.booleanAsPromise(deallocatable);},perform:function performDeallocation(item){deallocate(item);return qExtensions.booleanAsPromise(true);}}}];}
function init(model){if(!angular.isArray(model.available)){$log.error('Available is not an array.');}
if(model.allocated&&!angular.isArray(model.allocated)){$log.error('Allocated is not an array.');}
ctrl.available={sourceItems:model.available,displayedItems:model.displayedAvailable?model.displayedAvailable:[]};ctrl.allocated={sourceItems:model.allocated?model.allocated:[],displayedItems:model.displayedAllocated?model.displayedAllocated:[]};ctrl.allocatedIds={};markAllocatedItems();$scope.$watchCollection(getAllocated,markAllocatedItems);}
function getAllocated(){return ctrl.allocated.sourceItems;}
function markAllocatedItems(){angular.forEach(ctrl.allocated.sourceItems,function flag(item){ctrl.allocatedIds[item.id]=true;});}
function allocate(item){if(ctrl.limits.maxAllocation<0||ctrl.limits.maxAllocation>ctrl.allocated.sourceItems.length){ctrl.allocated.sourceItems.push(item);ctrl.allocatedIds[item.id]=true;}else if(ctrl.limits.maxAllocation===1){var temp=ctrl.allocated.sourceItems.pop();delete ctrl.allocatedIds[temp.id];$timeout(function(){ctrl.allocated.sourceItems.push(item);ctrl.allocatedIds[item.id]=true;$scope.$apply();},0,false);}}
function deallocate(item){var index=ctrl.allocated.sourceItems.indexOf(item);if(index>=0){ctrl.allocated.sourceItems.splice(index,1);delete ctrl.allocatedIds[item.id];}}
function updateAllocated(event,item,orderedItems){ctrl.allocated.sourceItems.splice(0,ctrl.allocated.sourceItems.length);Array.prototype.push.apply(ctrl.allocated.sourceItems,orderedItems);}
function onTablesChanged(e,args){if(args.data.available){ctrl.available.sourceItems=args.data.available;}
if(args.data.displayedAvailable){ctrl.available.displayedItems=args.data.displayedAvailable;}
if(args.data.allocated){ctrl.allocated.sourceItems=args.data.allocated;ctrl.allocatedIds={};ctrl.allocated.sourceItems.forEach(function(item){ctrl.allocatedIds[item.id]=true;});}
if(args.data.displayedAllocated){ctrl.allocated.displayedItems=args.data.displayedAllocated;}}
function toggleView(view){ctrl.views[view]=!ctrl.views[view];}
function numAllocated(){return ctrl.allocated.sourceItems.length;}
function numAvailable(){return ctrl.available.sourceItems.length-ctrl.allocated.sourceItems.length;}}})();(function(){'use strict';angular.module('horizon.framework.widgets.transfer-table').directive('transferTable',transferTable);transferTable.$inject=['horizon.framework.widgets.basePath'];function transferTable(path){return{controller:'transferTableController',controllerAs:'trCtrl',restrict:' E',scope:true,transclude:true,templateUrl:path+'transfer-table/transfer-table.html',link:link};function link(scope,element,attrs,ctrl,transclude){var allocated=element.find('.transfer-allocated');var available=element.find('.transfer-available');if('cloneContent'in attrs){var allocatedScope=scope.$new();allocatedScope.$displayedItems=ctrl.allocated.displayedItems;allocatedScope.$sourceItems=ctrl.allocated.sourceItems;allocatedScope.$isAllocatedTable=true;transclude(allocatedScope,function(clone){allocated.append(extractClonableTable(clone));});var availableScope=scope.$new();availableScope.$displayedItems=ctrl.available.displayedItems;availableScope.$sourceItems=ctrl.available.sourceItems;availableScope.$isAvailableTable=true;transclude(availableScope,function(clone){available.append(extractClonableTable(clone));});}else{transclude(scope,function(clone){allocated.append(clone.filter('allocated'));available.append(clone.filter('available'));});}
function extractClonableTable(element){var table=element.filter('hz-dynamic-table');if(!table.length){table=element.filter('table');}
return table;}}}})();(function(){'use strict';angular.module('horizon.framework.widgets.wizard').controller('ModalContainerController',ModalContainerController);ModalContainerController.$inject=['$scope','$uibModalInstance','launchContext'];function ModalContainerController($scope,$uibModalInstance,launchContext){$scope.launchContext=launchContext;$scope.close=function(args){$uibModalInstance.close(args);};$scope.cancel=function(){$uibModalInstance.dismiss();};}})();(function(){'use strict';var extend=angular.extend;var forEach=angular.forEach;angular.module('horizon.framework.widgets.wizard').controller('WizardController',WizardController);WizardController.$inject=['$scope','$q','horizon.framework.widgets.wizard.labels','horizon.framework.widgets.wizard.events','horizon.framework.events'];function WizardController($scope,$q,wizardLabels,wizardEvents,frameworkEvents){var ctrl=this;var viewModel=$scope.viewModel={};var initTask=$q.defer();$scope.initPromise=initTask.promise;$scope.currentIndex=-1;$scope.workflow=$scope.workflow||{};if($scope.workflow.initControllers){$scope.workflow.initControllers($scope);}
var steps=$scope.steps=$scope.workflow.steps||[];$scope.wizardForm={};$scope.stepModels={};$scope.switchTo=switchTo;$scope.showError=showError;ctrl.toggleHelpBtn=toggleHelpBtn;ctrl.onInitSuccess=onInitSuccess;ctrl.onInitError=onInitError;viewModel.btnText=extend({},wizardLabels,$scope.workflow.btnText);viewModel.btnIcon=$scope.workflow.btnIcon||{};viewModel.showSpinner=false;viewModel.hasError=false;viewModel.onClickFinishBtn=onClickFinishBtn;viewModel.isSubmitting=false;$scope.initPromise.then(onInitSuccess,onInitError);checkAllReadiness().finally(function(){initTask.resolve();viewModel.ready=true;switchToFirstReadyStep();});function switchTo(index){$scope.$broadcast(wizardEvents.ON_SWITCH,{from:$scope.currentIndex,to:index});ctrl.toggleHelpBtn(index);$scope.currentIndex=index;$scope.openHelp=false;}
function showError(errorMessage){viewModel.showSpinner=false;viewModel.hasError=true;if(errorMessage&&angular.isString(errorMessage.data)){viewModel.errorMessage=errorMessage.data;}else{viewModel.errorMessage=errorMessage;}
viewModel.isSubmitting=false;}
function beforeSubmit(){$scope.$broadcast(wizardEvents.BEFORE_SUBMIT);}
function afterSubmit(args){$scope.$broadcast(wizardEvents.AFTER_SUBMIT);$scope.close(args);}
function onClickFinishBtn(){viewModel.isSubmitting=true;beforeSubmit();$scope.submit($scope.stepModels).then(afterSubmit,showError);}
function onInitSuccess(){if(viewModel.hasError){return;}
$scope.$broadcast(wizardEvents.ON_INIT_SUCCESS);if(steps.length>0){ctrl.toggleHelpBtn(0);}}
function onInitError(){$scope.$broadcast(wizardEvents.ON_INIT_ERROR);}
$scope.$on(frameworkEvents.FORCE_LOGOUT,function(evt,arg){viewModel.hasError=true;viewModel.errorMessage=arg;return;});function toggleHelpBtn(index){if(angular.isUndefined(steps[index].helpUrl)){$scope.hideHelpBtn=true;}else{$scope.hideHelpBtn=false;}}
function checkAllReadiness(){var stepReadyPromises=[];forEach(steps,function(step){step.ready=!step.checkReadiness;if(step.checkReadiness){var promise=step.checkReadiness();stepReadyPromises.push(promise);promise.then(function(){step.ready=true;});}});viewModel.ready=stepReadyPromises.length===0;return $q.all(stepReadyPromises).finally(function(){$scope.steps=$scope.steps.filter(function(step){return step.ready;});});}
function switchToFirstReadyStep(){forEach(steps,function(step,index){if($scope.currentIndex<0&&step.ready){$scope.currentIndex=index;return;}});}}})();(function(){'use strict';angular.module('horizon.framework.widgets.wizard').directive('wizard',wizard);wizard.$inject=['horizon.framework.widgets.basePath'];function wizard(basePath){var directive={controller:'WizardController',templateUrl:basePath+'wizard/wizard.html'};return directive;}})();(function(){'use strict';var libraryModules=['gettext','lrDragNDrop','ngCookies','ngSanitize','schemaForm','smart-table','ui.bootstrap'];var horizonBuiltInModules=['horizon.app.core','horizon.app.resources','horizon.app.tech-debt','horizon.auth','horizon.framework'];angular.module('horizon.app',['ngRoute'].concat(libraryModules).concat(horizonBuiltInModules).concat(horizonPlugInModules)).config(configHorizon).run(updateHorizon);configHorizon.$inject=['$locationProvider','$routeProvider'];function configHorizon($locationProvider,$routeProvider){if(angular.element('base').length===1){$locationProvider.html5Mode(true).hashPrefix('!');$routeProvider.otherwise({template:'',controller:'RedirectController'});}}
updateHorizon.$inject=['gettextCatalog','horizon.framework.util.tech-debt.helper-functions','horizon.framework.widgets.toast.service','$cookieStore','$http','$cookies','$route'];function updateHorizon(gettextCatalog,hzUtils,toastService,$cookieStore,$http,$cookies,$route){$http.defaults.headers.post['X-CSRFToken']=$cookies.csrftoken;horizon.utils=hzUtils;horizon.toast=toastService;if(angular.version.major===1&&angular.version.minor<4){horizon.cookies=angular.extend({},$cookieStore,{getObject:$cookieStore.get,put:put,putObject:put,getRaw:getRaw});}else{horizon.cookies=$cookies;}
gettextCatalog.setCurrentLanguage(horizon.languageCode);gettextCatalog.setStrings(horizon.languageCode,django.catalog);$route.reload();function put(key,value){angular.element('body').scope().$apply(function(){$cookieStore.put(key,value);});}
function getRaw(key){return $cookies[key];}}}());(function(){'use strict';angular.module('horizon.app.core.cloud-services',[]);}());(function(){'use strict';angular.module('horizon.app.core.conf',['horizon.framework.conf']).config(permissionsDecorator);permissionsDecorator.$inject=['$provide'];function permissionsDecorator($provide){$provide.decorator('horizon.framework.conf.permissions.service',['$delegate','horizon.app.core.openstack-service-api.policy','horizon.app.core.openstack-service-api.serviceCatalog','horizon.app.core.openstack-service-api.settings',decorator]);function decorator($delegate,policy,serviceCatalog,settings){var permissionsService=$delegate;permissionsService.extendedPermissions={policies:policy.ifAllowed,services:serviceCatalog.ifTypeEnabled,settings:settings.ifEnabled};return $delegate;}}})();(function(){'use strict';angular.module('horizon.app.core.constants',[]).constant('horizon.app.core.detailRoute','ngdetails/');})();(function(){'use strict';var VOLUME_RESOURCE_TYPE='OS::Cinder::Volume';angular.module('horizon.app.core',['horizon.app.core.conf','horizon.app.core.constants','horizon.app.core.cloud-services','horizon.app.core.flavors','horizon.app.core.images','horizon.app.core.keypairs','horizon.app.core.metadata','horizon.app.core.network_qos','horizon.app.core.openstack-service-api','horizon.app.core.trunks','horizon.app.core.workflow','horizon.framework.conf','horizon.framework.util','horizon.framework.widgets','horizon.dashboard.project.workflow'],config).constant('horizon.app.core.volumes.resourceType',VOLUME_RESOURCE_TYPE);config.$inject=['$provide','$windowProvider','$routeProvider','horizon.app.core.detailRoute'];function config($provide,$windowProvider,$routeProvider,detailRoute){var path=$windowProvider.$get().STATIC_URL+'app/core/';$provide.constant('horizon.app.core.basePath',path);$routeProvider.when('/'+detailRoute+':type/:path*',{templateUrl:$windowProvider.$get().STATIC_URL+'framework/widgets/details/routed-details-view.html'});}})();(function(){'use strict';angular.module('horizon.app.core.flavors.actions',['horizon.framework.conf','horizon.app.core.flavors']).run(registerFlavorActions);registerFlavorActions.$inject=['horizon.framework.conf.resource-type-registry.service','horizon.app.core.flavors.actions.delete-flavor.service','horizon.app.core.flavors.actions.update-metadata.service','horizon.app.core.flavors.resourceType'];function registerFlavorActions(registry,deleteFlavorService,updateMetadataService,flavorResourceTypeCode){var flavorResourceType=registry.getResourceType(flavorResourceTypeCode);flavorResourceType.itemActions.append({id:'updateMetadataService',service:updateMetadataService,template:{text:gettext('Update Metadata')}}).append({id:'deleteFlavorAction',service:deleteFlavorService,template:{type:'delete',text:gettext('Delete Flavor')}});flavorResourceType.batchActions.append({id:'batchDeleteFlavorAction',service:deleteFlavorService,template:{type:'delete-selected',text:gettext('Delete Flavors')}});}})();(function(){'use strict';angular.module('horizon.app.core.flavors',['ngRoute','horizon.framework.conf','horizon.app.core','horizon.app.core.flavors.actions']).constant('horizon.app.core.flavors.resourceType','OS::Nova::Flavor').run(run).config(config);run.$inject=['horizon.framework.conf.resource-type-registry.service','horizon.framework.util.i18n.gettext','horizon.app.core.flavors.basePath','horizon.app.core.flavors.service','horizon.app.core.flavors.resourceType'];function run(registry,gettext,basePath,flavorsService,flavorResourceType){registry.getResourceType(flavorResourceType).setNames(gettext('Flavor'),gettext('Flavors')).setSummaryTemplateUrl(basePath+'summary.html').setProperties(flavorProperties()).setListFunction(flavorsService.getFlavorsPromise).tableColumns.append({id:'name',priority:1}).append({id:'vcpus',priority:2}).append({id:'ram',priority:1,sortDefault:true}).append({id:'disk',priority:2}).append({id:'id',priority:1}).append({id:'os-flavor-access:is_public',priority:2});registry.getResourceType(flavorResourceType).filterFacets.append({label:gettext('Name'),name:'name',singleton:true}).append({label:gettext('VCPUs'),name:'vcpus',singleton:true}).append({label:gettext('RAM'),name:'ram',singleton:true}).append({label:gettext('Root Disk'),name:'disk',singleton:true}).append({label:gettext('Public'),name:'os-flavor-access:is_public',singleton:true,options:[{label:gettext('Yes'),key:'true'},{label:gettext('No'),key:'false'}]});function flavorProperties(){return{name:gettext('Flavor Name'),vcpus:gettext('VCPUs'),ram:{label:gettext('RAM'),filters:['mb']},disk:{label:gettext('Root Disk'),filters:['gb']},'OS-FLV-EXT-DATA:ephemeral':{label:gettext('Ephemeral Disk'),filters:['gb']},swap:{label:gettext('Swap Disk'),filters:['gb']},rxtx_factor:gettext('RX/TX Factor'),id:gettext('ID'),'os-flavor-access:is_public':{label:gettext('Public'),filters:['yesno']},metadata:gettext('Metadata')};}}
config.$inject=['$provide','$windowProvider','$routeProvider'];function config($provide,$windowProvider,$routeProvider){var path=$windowProvider.$get().STATIC_URL+'app/core/flavors/';$provide.constant('horizon.app.core.flavors.basePath',path);$routeProvider.when('/admin/flavors',{templateUrl:path+'panel.html'});}})();(function(){'use strict';angular.module('horizon.app.core.images.actions',['horizon.framework.conf','horizon.app.core.images']).run(registerImageActions);registerImageActions.$inject=['horizon.framework.conf.resource-type-registry.service','horizon.app.core.images.actions.edit.service','horizon.app.core.images.actions.create.service','horizon.app.core.images.actions.create-volume.service','horizon.app.core.images.actions.delete-image.service','horizon.app.core.images.actions.launch-instance.service','horizon.app.core.images.actions.update-metadata.service','horizon.app.core.images.resourceType'];function registerImageActions(registry,editService,createService,createVolumeService,deleteImageService,launchInstanceService,updateMetadataService,imageResourceTypeCode){var imageResourceType=registry.getResourceType(imageResourceTypeCode);imageResourceType.itemActions.append({id:'launchInstanceService',service:launchInstanceService,template:{text:gettext('Launch')}}).append({id:'createVolumeAction',service:createVolumeService,template:{text:gettext('Create Volume')}}).append({id:'editAction',service:editService,template:{text:gettext('Edit Image')}}).append({id:'updateMetadataService',service:updateMetadataService,template:{text:gettext('Update Metadata')}}).append({id:'deleteImageAction',service:deleteImageService,template:{text:gettext('Delete Image'),type:'delete'}});imageResourceType.globalActions.append({id:'createImageAction',service:createService,template:{text:gettext('Create Image'),type:'create'}});imageResourceType.batchActions.append({id:'batchDeleteImageAction',service:deleteImageService,template:{type:'delete-selected',text:gettext('Delete Images')}});}})();(function(){'use strict';angular.module('horizon.app.core.images.details',['horizon.framework.conf','horizon.app.core']).run(registerImageDetails);registerImageDetails.$inject=['horizon.app.core.images.basePath','horizon.app.core.images.resourceType','horizon.app.core.images.service','horizon.framework.conf.resource-type-registry.service'];function registerImageDetails(basePath,imageResourceType,imageService,registry){registry.getResourceType(imageResourceType).setLoadFunction(imageService.getImagePromise).detailsViews.append({id:'imageDetailsOverview',name:gettext('Overview'),template:basePath+'details/overview.html'});}})();(function(){'use strict';angular.module('horizon.app.core.images',['ngRoute','horizon.app.core.images.actions','horizon.app.core.images.details']).constant('horizon.app.core.images.events',events()).constant('horizon.app.core.images.non_bootable_image_types',['aki','ari']).constant('horizon.app.core.images.validationRules',validationRules()).constant('horizon.app.core.images.imageFormats',imageFormats()).constant('horizon.app.core.images.resourceType','OS::Glance::Image').constant('horizon.app.core.images.statuses',{'active':gettext('Active'),'saving':gettext('Saving'),'queued':gettext('Queued'),'pending_delete':gettext('Pending Delete'),'killed':gettext('Killed'),'deactivated':gettext('Deactivated'),'deleted':gettext('Deleted')}).constant('horizon.app.core.images.transitional-statuses',["saving","queued","pending_delete"]).run(run).config(config);run.$inject=['horizon.framework.conf.resource-type-registry.service','horizon.app.core.images.basePath','horizon.app.core.images.service','horizon.app.core.images.statuses','horizon.app.core.images.resourceType','horizon.framework.util.filters.$memoize','horizon.app.core.openstack-service-api.keystone'];function run(registry,basePath,imagesService,statuses,imageResourceType,$memoize,keystone){registry.getResourceType(imageResourceType).setNames(gettext('Image'),gettext('Images')).setSummaryTemplateUrl(basePath+'details/drawer.html').setItemInTransitionFunction(imagesService.isInTransition).setProperties(imageProperties(imagesService,statuses)).setListFunction(imagesService.getImagesPromise).setNeedsFilterFirstFunction(imagesService.getFilterFirstSettingPromise).tableColumns.append({id:'owner',priority:1,filters:[$memoize(keystone.getProjectName)],policies:[{rules:[['identity','identity:get_project']]}]}).append({id:'name',priority:1,sortDefault:true,urlFunction:imagesService.getDetailsPath}).append({id:'type',priority:1}).append({id:'status',priority:1,itemInTransitionFunction:imagesService.isInTransition}).append({id:'visibility',priority:1}).append({id:'protected',priority:1}).append({id:'disk_format',priority:2}).append({id:'size',priority:2});registry.getResourceType(imageResourceType).filterFacets.append({label:gettext('Name'),name:'name',isServer:true,singleton:true,persistent:true}).append({label:gettext('Status'),name:'status',isServer:true,singleton:true,options:[{label:gettext('Active'),key:'active'},{label:gettext('Saving'),key:'saving'},{label:gettext('Queued'),key:'queued'},{label:gettext('Pending Delete'),key:'pending_delete'},{label:gettext('Killed'),key:'killed'},{label:gettext('Deactivated'),key:'deactivated'},{label:gettext('Deleted'),key:'deleted'}]}).append({label:gettext('Visibility'),name:'visibility',isServer:true,singleton:true,options:[{label:gettext('Public'),key:'public'},{label:gettext('Private'),key:'private'},{label:gettext('Shared With Project'),key:'shared'},{label:gettext('Community'),key:'community'}]}).append({label:gettext('Protected'),name:'protected',isServer:true,singleton:true,options:[{label:gettext('Yes'),key:'true'},{label:gettext('No'),key:'false'}]}).append({label:gettext('Format'),name:'disk_format',isServer:true,singleton:true,options:[{label:gettext('AKI'),key:'aki'},{label:gettext('AMI'),key:'ami'},{label:gettext('ARI'),key:'ari'},{label:gettext('Docker'),key:'docker'},{label:gettext('ISO'),key:'iso'},{label:gettext('OVA'),key:'ova'},{label:gettext('PLOOP'),key:'ploop'},{label:gettext('QCOW2'),key:'qcow2'},{label:gettext('Raw'),key:'raw'},{label:gettext('VDI'),key:'vdi'},{label:gettext('VHD'),key:'vhd'},{label:gettext('VMDK'),key:'vmdk'}]}).append({label:gettext('Min. Size (bytes)'),name:'size_min',isServer:true,singleton:true}).append({label:gettext('Max. Size (bytes)'),name:'size_max',isServer:true,singleton:true});}
function validationRules(){return{integer:/^[0-9]+$/,fieldMaxLength:255};}
function imageFormats(){return{iso:gettext('ISO - Optical Disk Image'),ova:gettext('OVA - Open Virtual Appliance'),ploop:gettext('PLOOP - Virtuozzo/Parallels Loopback Disk'),qcow2:gettext('QCOW2 - QEMU Emulator'),raw:gettext('Raw'),vdi:gettext('VDI - Virtual Disk Image'),vhd:gettext('VHD - Virtual Hard Disk'),vmdk:gettext('VMDK - Virtual Machine Disk'),aki:gettext('AKI - Amazon Kernel Image'),ami:gettext('AMI - Amazon Machine Image'),ari:gettext('ARI - Amazon Ramdisk Image'),docker:gettext('Docker')};}
function imageProperties(imagesService,statuses){return{id:gettext('ID'),checksum:gettext('Checksum'),members:gettext('Members'),min_disk:gettext('Min. Disk'),min_ram:gettext('Min. RAM'),name:gettext('Name'),owner:gettext('Owner'),tags:gettext('Tags'),'updated_at':{label:gettext('Updated At'),filters:['simpleDate']},virtual_size:gettext('Virtual Size'),visibility:gettext('Visibility'),description:gettext('Description'),architecture:gettext('Architecture'),kernel_id:gettext('Kernel ID'),ramdisk_id:gettext('Ramdisk ID'),'created_at':{label:gettext('Created At'),filters:['simpleDate']},container_format:{label:gettext('Container Format'),filters:['uppercase']},disk_format:{label:gettext('Disk Format'),filters:['noValue','uppercase']},is_public:{label:gettext('Is Public'),filters:['yesno']},type:{label:gettext('Type')},'protected':{label:gettext('Protected'),filters:['yesno']},size:{label:gettext('Size'),filters:['bytes']},status:{label:gettext('Status'),values:statuses}};}
function events(){return{IMAGE_UPLOAD_PROGRESS:'horizon.app.core.images.IMAGE_UPLOAD_PROGRESS'};}
config.$inject=['$provide','$windowProvider','$routeProvider','horizon.app.core.detailRoute'];function config($provide,$windowProvider,$routeProvider,detailRoute){var path=$windowProvider.$get().STATIC_URL+'app/core/images/';$provide.constant('horizon.app.core.images.basePath',path);$routeProvider.when('/project/images/:id',{redirectTo:goToAngularDetails});$routeProvider.when('/admin/images/:id/detail',{redirectTo:goToAngularDetails});$routeProvider.when('/project/images',{templateUrl:path+'panel.html'});$routeProvider.when('/admin/images',{templateUrl:path+'admin-panel.html'});function goToAngularDetails(params){return detailRoute+'OS::Glance::Image/'+params.id;}}})();(function(){'use strict';angular.module('horizon.app.core.keypairs.actions',['horizon.framework.conf','horizon.app.core.keypairs']).run(registerKeypairActions);registerKeypairActions.$inject=['horizon.framework.conf.resource-type-registry.service','horizon.app.core.keypairs.actions.create.service','horizon.app.core.keypairs.actions.import.service','horizon.app.core.keypairs.actions.delete.service','horizon.app.core.keypairs.resourceType'];function registerKeypairActions(registry,createKeypairService,importKeypairService,deleteKeypairService,resourceType){var keypairResourceType=registry.getResourceType(resourceType);keypairResourceType.globalActions.append({id:'createKeypairService',service:createKeypairService,template:{type:'create',text:gettext('Create Key Pair')}}).append({id:'importKeypairService',service:importKeypairService,template:{text:gettext('Import Public Key'),icon:'upload'}});keypairResourceType.batchActions.append({id:'batchDeleteKeypairAction',service:deleteKeypairService,template:{type:'delete-selected',text:gettext('Delete Key Pairs')}});keypairResourceType.itemActions.append({id:'deleteKeypairAction',service:deleteKeypairService,template:{type:'delete',text:gettext('Delete Key Pair')}});}})();(function(){'use strict';angular.module('horizon.app.core.keypairs.details',['horizon.framework.conf','horizon.app.core']).run(registerKeypairDetails);registerKeypairDetails.$inject=['horizon.app.core.keypairs.basePath','horizon.app.core.keypairs.resourceType','horizon.app.core.keypairs.service','horizon.framework.conf.resource-type-registry.service'];function registerKeypairDetails(basePath,resourceType,keypairService,registry){registry.getResourceType(resourceType).setLoadFunction(keypairService.getKeypairPromise).detailsViews.append({id:'keypairDetails',name:gettext('Details'),template:basePath+'details/details.html'});}})();(function(){'use strict';angular.module('horizon.app.core.keypairs',['ngRoute','horizon.app.core.keypairs.actions','horizon.app.core.keypairs.details']).constant('horizon.app.core.keypairs.resourceType','OS::Nova::Keypair').run(run).config(config);run.$inject=['horizon.framework.conf.resource-type-registry.service','horizon.app.core.openstack-service-api.nova','horizon.app.core.keypairs.basePath','horizon.app.core.keypairs.resourceType','horizon.app.core.keypairs.service'];function run(registry,nova,basePath,resourceType,keypairsService){registry.getResourceType(resourceType).setNames(gettext('Key Pair'),gettext('Key Pairs')).setSummaryTemplateUrl(basePath+'details/drawer.html').setProperties(keypairProperties()).setListFunction(keypairsService.getKeypairsPromise).tableColumns.append({id:'name',priority:1,sortDefault:true,urlFunction:keypairsService.urlFunction}).append({id:'fingerprint',priority:2});registry.getResourceType(resourceType).filterFacets.append({'label':gettext('Name'),'name':'name','singleton':true});}
function keypairProperties(){return{'id':{},'keypair_id':{label:gettext('ID'),filters:['noValue']},'name':{label:gettext('Name'),filters:['noName']},'fingerprint':{label:gettext('Fingerprint'),filters:['noValue']},'created_at':{label:gettext('Created'),filters:['mediumDate']},'user_id':{label:gettext('User ID'),filters:['noValue']},'public_key':{label:gettext('Public Key'),filters:['noValue']}};}
config.$inject=['$provide','$windowProvider','$routeProvider','horizon.app.core.detailRoute'];function config($provide,$windowProvider,$routeProvider,detailRoute){var path=$windowProvider.$get().STATIC_URL+'app/core/keypairs/';$provide.constant('horizon.app.core.keypairs.basePath',path);$routeProvider.when('/project/key_pairs',{templateUrl:path+'panel.html'}).when('/project/key_pairs/:id',{redirectTo:goToAngularDetails});function goToAngularDetails(params){return detailRoute+'OS::Nova::Keypair/'+params.id;}}})();(function(){'use strict';angular.module('horizon.app.core.metadata',['horizon.app.core.metadata.modal']);})();(function(){'use strict';angular.module('horizon.app.core.metadata.modal',[]).constant('horizon.app.core.metadata.modal.constants',{backdrop:'static',controller:'MetadataModalController as modal',windowClass:'modal-dialog-metadata'});})();(function(){'use strict';angular.module('horizon.app.core.network_qos.details',['horizon.framework.conf','horizon.app.core']).run(registerPolicyDetails);registerPolicyDetails.$inject=['horizon.app.core.network_qos.basePath','horizon.app.core.network_qos.resourceType','horizon.app.core.network_qos.service','horizon.framework.conf.resource-type-registry.service'];function registerPolicyDetails(basePath,qosResourceType,qosService,registry){registry.getResourceType(qosResourceType).setLoadFunction(qosService.getPolicyPromise).detailsViews.append({id:'policyDetailsOverview',name:gettext('Overview'),template:basePath+'details/overview.html'});}})();(function(){'use strict';angular.module('horizon.app.core.network_qos',['ngRoute','horizon.app.core.network_qos.details']).constant('horizon.app.core.network_qos.resourceType','OS::Neutron::QoSPolicy').run(run).config(config);run.$inject=['horizon.framework.conf.resource-type-registry.service','horizon.app.core.network_qos.basePath','horizon.app.core.network_qos.service','horizon.app.core.network_qos.resourceType'];function run(registry,basePath,qosService,qosResourceType){registry.getResourceType(qosResourceType).setNames(gettext('QoS Policy'),gettext('QoS Policies')).setSummaryTemplateUrl(basePath+'details/drawer.html').setProperties(qosProperties(qosService)).setListFunction(qosService.getPoliciesPromise).tableColumns.append({id:'name',priority:1,sortDefault:true,urlFunction:qosService.getDetailsPath}).append({id:'description',priority:1}).append({id:'shared',priority:1});registry.getResourceType(qosResourceType).filterFacets.append({label:gettext('Policy Name'),name:'name',singleton:true,persistent:true}).append({label:gettext('Description'),name:'description',singleton:true}).append({label:gettext('Shared'),name:'shared',singleton:true,options:[{label:gettext('Yes'),key:'true'},{label:gettext('No'),key:'false'}]});}
function qosProperties(){return{'name':{label:gettext('Policy Name'),filters:['noName']},'id':{label:gettext('Policy ID'),filters:['noValue']},'description':{label:gettext('Description'),filters:['noName']},'shared':{label:gettext('Shared'),filters:['yesno']},'tenant_id':{label:gettext('Tenant ID'),filters:['noValue']},'project_id':{label:gettext('Project ID'),filters:['noValue']},'created_at':{label:gettext('Created At'),filters:['simpleDate']},'updated_at':{label:gettext('Updated At'),filters:['simpleDate']},'rules':{label:gettext('Rules'),filters:['noValue']},'revision_number':{label:gettext('Revision Number'),filters:['noValue']}};}
config.$inject=['$provide','$windowProvider','$routeProvider','horizon.app.core.detailRoute'];function config($provide,$windowProvider,$routeProvider,detailRoute){var path=$windowProvider.$get().STATIC_URL+'app/core/network_qos/';$provide.constant('horizon.app.core.network_qos.basePath',path);$routeProvider.when('/project/network_qos',{templateUrl:path+'panel.html'}).when('/project/network_qos/:policy_id',{redirectTo:goToAngularDetails});function goToAngularDetails(params){return detailRoute+'OS::Neutron::QoSPolicy/'+params.id;}}})();(function(){'use strict';angular.module('horizon.app.core.openstack-service-api',['ngFileUpload']);}());(function(){'use strict';angular.module('horizon.app.core.trunks.actions',['horizon.framework.conf','horizon.app.core.trunks']).run(registerTrunkActions);registerTrunkActions.$inject=['horizon.framework.conf.resource-type-registry.service','horizon.app.core.trunks.actions.create.service','horizon.app.core.trunks.actions.edit.service','horizon.app.core.trunks.actions.delete.service','horizon.app.core.trunks.resourceType'];function registerTrunkActions(registry,createService,editService,deleteService,trunkResourceTypeCode){var trunkResourceType=registry.getResourceType(trunkResourceTypeCode);trunkResourceType.globalActions.append({id:'createTrunkAction',service:createService,template:{text:gettext('Create Trunk'),type:'create'}});trunkResourceType.itemActions.append({id:'editTrunkAction',service:editService,template:{text:gettext('Edit Trunk')}}).append({id:'deleteTrunkAction',service:deleteService,template:{text:gettext('Delete Trunk'),type:'delete'}});trunkResourceType.batchActions.append({id:'batchDeleteTrunkAction',service:deleteService,template:{text:gettext('Delete Trunks'),type:'delete-selected'}});}})();(function(){'use strict';angular.module('horizon.app.core.trunks.details',['horizon.framework.conf','horizon.app.core']).run(registerTrunkDetails);registerTrunkDetails.$inject=['horizon.app.core.trunks.basePath','horizon.app.core.trunks.resourceType','horizon.app.core.trunks.service','horizon.framework.conf.resource-type-registry.service'];function registerTrunkDetails(basePath,trunkResourceType,trunkService,registry){registry.getResourceType(trunkResourceType).setLoadFunction(trunkService.getTrunkPromise).detailsViews.append({id:'trunkDetailsOverview',name:gettext('Overview'),template:basePath+'details/overview.html'});}})();(function(){'use strict';angular.module('horizon.app.core.trunks',['ngRoute','horizon.framework.conf','horizon.app.core.trunks.actions','horizon.app.core.trunks.details','horizon.app.core']).constant('horizon.app.core.trunks.resourceType','OS::Neutron::Trunk').constant('horizon.app.core.trunks.portConstants',portConstants()).run(run).config(config);run.$inject=['horizon.framework.conf.resource-type-registry.service','horizon.framework.util.i18n.gettext','horizon.app.core.trunks.basePath','horizon.app.core.trunks.service','horizon.app.core.trunks.resourceType'];function run(registry,gettext,basePath,trunksService,trunkResourceType){registry.getResourceType(trunkResourceType).setNames(gettext('Trunk'),gettext('Trunks')).setSummaryTemplateUrl(basePath+'summary.html').setProperties(trunkProperties()).setListFunction(trunksService.getTrunksPromise).tableColumns.append({id:'name_or_id',priority:1,sortDefault:true,urlFunction:trunksService.getDetailsPath}).append({id:'port_id',priority:1}).append({id:'subport_count',priority:1}).append({id:'admin_state',priority:1}).append({id:'status',priority:1});registry.getResourceType(trunkResourceType).filterFacets.append({label:gettext('Name'),name:'name',singleton:true}).append({label:gettext('Parent Port'),name:'port_id',singleton:true}).append({label:gettext('Status'),name:'status',singleton:true,options:[{label:gettext('Active'),key:'ACTIVE'},{label:gettext('Down'),key:'DOWN'},{label:gettext('Build'),key:'BUILD'},{label:gettext('Degraded'),key:'DEGRADED'},{label:gettext('Error'),key:'ERROR'}]}).append({label:gettext('Admin State'),name:'admin_state_up',singleton:true,options:[{label:gettext('Up'),key:'true'},{label:gettext('Down'),key:'false'}]});}
function trunkProperties(){return{admin_state:gettext('Admin State'),created_at:gettext('Created at'),description:gettext('Description'),id:gettext('ID'),name:gettext('Name'),name_or_id:gettext('Name/ID'),port_id:gettext('Parent Port'),project_id:gettext('Project ID'),status:gettext('Status'),subport_count:gettext('Subport Count'),updated_at:gettext('Updated at')};}
function portConstants(){return{statuses:{'ACTIVE':gettext('Active'),'DOWN':gettext('Down')},adminStates:{'UP':gettext('Up'),'DOWN':gettext('Down')},vnicTypes:{'normal':gettext('Normal'),'direct':gettext('Direct'),'direct-physical':gettext('Direct Physical'),'macvtap':gettext('MacVTap'),'baremetal':gettext('Bare Metal')}};}
config.$inject=['$provide','$windowProvider','$routeProvider'];function config($provide,$windowProvider,$routeProvider){var path=$windowProvider.$get().STATIC_URL+'app/core/trunks/';$provide.constant('horizon.app.core.trunks.basePath',path);$routeProvider.when('/project/trunks',{templateUrl:path+'panel.html'});$routeProvider.when('/project/trunks/:id',{redirectTo:goToAngularDetails});$routeProvider.when('/admin/trunks',{templateUrl:path+'panel.html'});$routeProvider.when('/admin/trunk/:id/detail',{redirectTo:goToAngularDetails});function goToAngularDetails(params){return detailRoute+'OS::Neutron::Trunk/'+params.id;}}})();(function(){'use strict';angular.module('horizon.app.core.workflow',[]);})();(function(){'use strict';angular.module('horizon.app.resources',[]).run(performRegistrations);performRegistrations.$inject=['horizon.framework.conf.resource-type-registry.service'];function performRegistrations(registry){registry.getResourceType('OS::Glance::Metadef').setNames(gettext('Metadata Definition'),gettext('Metadata Definitions'));registry.getResourceType('OS::Nova::Server').setNames(gettext('Instance'),gettext('Instances'));registry.getResourceType('OS::Nova::Flavor').setNames(gettext('Flavor'),gettext('Flavors'));registry.getResourceType('OS::Nova::Hypervisor').setNames(gettext('Hypervisor'),gettext('Hypervisors'));registry.getResourceType('OS::Nova::Keypair').setNames(gettext('Key Pair'),gettext('Key Pairs'));registry.getResourceType('OS::Designate::Zone').setNames(gettext('DNS Domain'),gettext('DNS Domains'));registry.getResourceType('OS::Designate::RecordSet').setNames(gettext('DNS Record'),gettext('DNS Records'));registry.getResourceType('OS::Cinder::Backup').setNames(gettext('Volume Backup'),gettext('Volume Backups'));registry.getResourceType('OS::Cinder::Snapshot').setNames(gettext('Volume Snapshot'),gettext('Volume Snapshots'));registry.getResourceType('OS::Cinder::Volume').setNames(gettext('Volume'),gettext('Volumes'));registry.getResourceType('OS::Neutron::HealthMonitor').setNames(gettext('Network Health Monitor'),gettext('Network Health Monitors'));registry.getResourceType('OS::Neutron::Net').setNames(gettext('Network'),gettext('Networks'));registry.getResourceType('OS::Neutron::Pool').setNames(gettext('Load Balancer Pool'),gettext('Load Balancer Pools'));registry.getResourceType('OS::Neutron::PoolMember').setNames(gettext('Load Balancer Pool Member'),gettext('Load Balancer Pool Members'));registry.getResourceType('OS::Neutron::Port').setNames(gettext('Network Port'),gettext('Network Ports'));registry.getResourceType('OS::Neutron::Router').setNames(gettext('Network Router'),gettext('Network Routers'));registry.getResourceType('OS::Neutron::Subnet').setNames(gettext('Network Subnet'),gettext('Network Subnets'));registry.getResourceType('OS::Neutron::FloatingIP').setNames(gettext('Floating IP'),gettext('Floating IPs'));registry.getResourceType('OS::Neutron::SecurityGroup').setNames(gettext('Security Group'),gettext('Security Groups'));registry.getResourceType('OS::Neutron::Trunk').setNames(gettext('Trunk'),gettext('Trunks'));registry.getResourceType('OS::Keystone::User').setNames(gettext('User'),gettext('Users'));registry.getResourceType('OS::Keystone::Group').setNames(gettext('Group'),gettext('Groups'));registry.getResourceType('OS::Keystone::Project').setNames(gettext('Project'),gettext('Projects'));registry.getResourceType('OS::Keystone::Role').setNames(gettext('Role'),gettext('Roles'));}})();(function(){'use strict';angular.module('horizon.app.tech-debt',[]);})();(function(){'use strict';angular.module('horizon.app.core.cloud-services').directive('hzIfCinderExtensions',hzCinderExtensions);hzCinderExtensions.$inject=['hzPromiseToggleTemplateDirective','horizon.app.core.openstack-service-api.cinderExtensions'];function hzCinderExtensions(hzPromiseToggleTemplateDirective,cinderExtensions){return angular.extend(hzPromiseToggleTemplateDirective[0],{singlePromiseResolver:cinderExtensions.ifNameEnabled,name:'hzIfCinderExtensions'});}})();(function(){'use strict';angular.module('horizon.app.core.cloud-services').directive('hzIfNeutronExtensions',hzNeutronExtensions);hzNeutronExtensions.$inject=['hzPromiseToggleTemplateDirective','horizon.app.core.openstack-service-api.neutronExtensions'];function hzNeutronExtensions(hzPromiseToggleTemplateDirective,neutronExtensions){return angular.extend(hzPromiseToggleTemplateDirective[0],{singlePromiseResolver:neutronExtensions.ifNameEnabled,name:'hzIfNeutronExtensions'});}})();(function(){'use strict';angular.module('horizon.app.core.cloud-services').directive('hzIfNovaExtensions',hzNovaExtensions);hzNovaExtensions.$inject=['hzPromiseToggleTemplateDirective','horizon.app.core.openstack-service-api.novaExtensions'];function hzNovaExtensions(hzPromiseToggleTemplateDirective,novaExtensions){return angular.extend(hzPromiseToggleTemplateDirective[0],{singlePromiseResolver:novaExtensions.ifNameEnabled,name:'hzIfNovaExtensions'});}})();(function(){'use strict';angular.module('horizon.app.core.cloud-services').directive('hzIfPolicies',hzIfPolicies);hzIfPolicies.$inject=['hzPromiseToggleTemplateDirective','horizon.app.core.openstack-service-api.policy'];function hzIfPolicies(hzPromiseToggle,policy){return angular.extend(hzPromiseToggle[0],{singlePromiseResolver:policy.ifAllowed,name:'hzIfPolicies'});}})();(function(){'use strict';angular.module('horizon.app.core.cloud-services').directive('hzIfServices',hzIfServices);hzIfServices.$inject=['hzPromiseToggleTemplateDirective','horizon.app.core.openstack-service-api.serviceCatalog'];function hzIfServices(hzPromiseToggleTemplateDirective,serviceCatalog){return angular.extend(hzPromiseToggleTemplateDirective[0],{singlePromiseResolver:serviceCatalog.ifTypeEnabled,name:'hzIfServices'});}})();(function(){'use strict';angular.module('horizon.app.core.cloud-services').directive('hzIfSettings',hzSettingsToggle);hzSettingsToggle.$inject=['hzPromiseToggleTemplateDirective','horizon.app.core.openstack-service-api.settings'];function hzSettingsToggle(hzPromiseToggleTemplate,settingsService){return angular.extend(hzPromiseToggleTemplate[0],{singlePromiseResolver:settingsService.ifEnabled,name:'hzIfSettings'});}})();(function(){'use strict';angular.module('horizon.app.core.cloud-services').directive('hzIfApiVersion',hzIfApiVersion);hzIfApiVersion.$inject=['$q','hzPromiseToggleTemplateDirective','horizon.app.core.openstack-service-api.glance','horizon.app.core.openstack-service-api.keystone'];function hzIfApiVersion($q,hzPromiseToggle,glance,keystone){return angular.extend(hzPromiseToggle[0],{singlePromiseResolver:ifVersionEnabled,name:'hzIfApiVersion'});function ifVersionEnabled(expected){var deferred=$q.defer();var type=Object.keys(expected)[0];var operator=expected[Object.keys(expected)[1]];switch(type){case"glance":glance.getVersion().then(onSuccess);break;case"keystone":keystone.getVersion().then(onSuccess);break;}
function onSuccess(actual){var actualVersion=actual.data.version;var expectedVersion=expected[type];var isVersion=false;if(operator){if(angular.isNumber(actualVersion)&&angular.isNumber(expectedVersion)&&["<=","<","==",">",">="].indexOf(operator)>-1){var expr=actualVersion+operator+expectedVersion;isVersion=eval(expr);}}else{if(angular.equals(actualVersion,expectedVersion)){isVersion=true;}}
if(isVersion){deferred.resolve();}else{deferred.reject();}}
return deferred.promise;}}})();(function(){'use strict';angular.module('horizon.app.core.flavors').factory('horizon.app.core.flavors.actions.delete-flavor.service',deleteFlavorService);deleteFlavorService.$inject=['horizon.app.core.openstack-service-api.nova','horizon.framework.util.actions.action-result.service','horizon.framework.util.i18n.gettext','horizon.framework.util.q.extensions','horizon.framework.widgets.modal.deleteModalService','horizon.app.core.flavors.resourceType'];function deleteFlavorService(nova,actionResultService,gettext,$qExtensions,deleteModal,flavorsResourceType){var service={allowed:allowed,perform:perform};return service;function allowed(){return $qExtensions.booleanAsPromise(true);}
function perform(items,scope){var flavors=angular.isArray(items)?items:[items];var context={labels:labelize(flavors.length),deleteEntity:deleteFlavor};return deleteModal.open(scope,flavors,context).then(deleteResult);}
function deleteResult(deleteModalResult){var actionResult=actionResultService.getActionResult();deleteModalResult.pass.forEach(function markDeleted(item){actionResult.deleted(flavorsResourceType,item.context.id);});deleteModalResult.fail.forEach(function markFailed(item){actionResult.failed(flavorsResourceType,item.context.id);});return actionResult.result;}
function labelize(count){return{title:ngettext('Confirm Delete Flavor','Confirm Delete Flavors',count),message:ngettext('You have selected "%s". Deleted flavor is not recoverable.','You have selected "%s". Deleted flavors are not recoverable.',count),submit:ngettext('Delete Flavor','Delete Flavors',count),success:ngettext('Deleted Flavor: %s.','Deleted Flavors: %s.',count),error:ngettext('Unable to delete Flavor: %s.','Unable to delete Flavors: %s.',count)};}
function deleteFlavor(flavor){return nova.deleteFlavor(flavor,true);}}})();(function(){'use strict';angular.module('horizon.app.core.flavors').factory('horizon.app.core.flavors.actions.update-metadata.service',updateMetadataService);updateMetadataService.$inject=['horizon.app.core.metadata.modal.service','horizon.framework.util.actions.action-result.service','horizon.framework.util.q.extensions','horizon.app.core.flavors.resourceType'];function updateMetadataService(metadataModalService,actionResultService,$qExtensions,flavorResourceType){var service={perform:perform,allowed:allowed};return service;function perform(flavor){return metadataModalService.open('flavor',flavor.id).result.then(onSuccess);function onSuccess(){return actionResultService.getActionResult().updated(flavorResourceType,flavor.id).result;}}
function allowed(){return $qExtensions.booleanAsPromise(true);}}})();(function(){"use strict";angular.module('horizon.app.core.flavors').factory('horizon.app.core.flavors.service',flavorsService);flavorsService.$inject=['horizon.app.core.openstack-service-api.nova'];function flavorsService(nova){return{getFlavorsPromise:getFlavorsPromise};function getFlavorsPromise(params){var fullParams=angular.extend({},params,{get_extras:true});return nova.getFlavors(fullParams);}}})();(function(){'use strict';angular.module('horizon.app.core.images').factory('horizon.app.core.images.actions.create-volume.service',createVolumeService);createVolumeService.$inject=['$q','horizon.app.core.openstack-service-api.cinder','horizon.app.core.openstack-service-api.policy','horizon.app.core.openstack-service-api.serviceCatalog','horizon.app.core.images.events','horizon.app.core.images.non_bootable_image_types','horizon.app.core.images.workflows.create-volume.service','horizon.framework.util.actions.action-result.service','horizon.framework.util.q.extensions','horizon.framework.widgets.modal.wizard-modal.service','horizon.framework.widgets.toast.service','horizon.app.core.volumes.resourceType'];function createVolumeService($q,cinder,policy,serviceCatalog,events,nonBootableImageTypes,createVolumeWorkflowService,actionResultService,$qExtensions,wizardModalService,toast,volumeResourceType){var createVolumePromise,volumeServiceEnabledPromise;var message={success:gettext('Volume %s was successfully created.')};var service={initAction:initAction,allowed:allowed,perform:perform};return service;function initAction(){createVolumePromise=policy.ifAllowed({rules:[['volume','volume:create']]});if(serviceCatalog.ifTypeEnabled('volumev2')||serviceCatalog.ifTypeEnabled('volumev3')){volumeServiceEnabledPromise=true;}else{volumeServiceEnabledPromise=false;}}
function allowed(image){return $q.all([imageBootable(image),createVolumePromise,volumeServiceEnabledPromise,imageActive(image)]);}
function perform(image){return wizardModalService.modal({data:{image:image},workflow:createVolumeWorkflowService,submit:submit}).result;}
function submit(stepModels){return cinder.createVolume(stepModels.volumeForm).then(showSuccessMessage);}
function showSuccessMessage(response){var volume=response.data;toast.add('success',interpolate(message.success,[volume.name]));return actionResultService.getActionResult().created(volumeResourceType,volume.id).result;}
function imageBootable(image){return $qExtensions.booleanAsPromise(nonBootableImageTypes.indexOf(image.container_format)<0);}
function imageActive(image){return $qExtensions.booleanAsPromise(image.status==='active');}}})();(function(){'use strict';angular.module('horizon.app.core.images').factory('horizon.app.core.images.actions.create.service',createService);createService.$inject=['$q','horizon.app.core.images.events','horizon.app.core.images.resourceType','horizon.app.core.images.actions.createWorkflow','horizon.app.core.metadata.service','horizon.app.core.openstack-service-api.glance','horizon.app.core.openstack-service-api.policy','horizon.framework.util.actions.action-result.service','horizon.framework.widgets.modal.wizard-modal.service','horizon.framework.widgets.toast.service'];function createService($q,events,resourceType,createWorkflow,metadataService,glance,policy,actionResultService,wizardModalService,toast){var message={success:gettext('Image %s was successfully created.')};var scope;var service={perform:perform,allowed:allowed};return service;function allowed(){return policy.ifAllowed({rules:[['image','add_image']]});}
function perform(selected,$scope){scope=$scope;return wizardModalService.modal({workflow:createWorkflow,submit:submit}).result;}
function submit(stepModels){var finalModel=angular.extend({},stepModels.imageForm,stepModels.updateMetadataForm);if(finalModel.source_type==='url'){delete finalModel.data;}else{delete finalModel.image_url;}
function onProgress(progress){scope.$broadcast(events.IMAGE_UPLOAD_PROGRESS,progress);}
return glance.createImage(finalModel,onProgress).then(onCreateImage);}
function onCreateImage(response){var newImage=response.data;toast.add('success',interpolate(message.success,[newImage.name]));return actionResultService.getActionResult().created(resourceType,newImage.id).result;}}})();(function(){'use strict';angular.module('horizon.app.core.images').factory('horizon.app.core.images.actions.createWorkflow',createWorkflow);createWorkflow.$inject=['horizon.app.core.images.basePath','horizon.app.core.workflow.factory','horizon.framework.util.i18n.gettext'];function createWorkflow(basePath,workflowService,gettext){var workflow=workflowService({title:gettext('Create Image'),btnText:{finish:gettext('Create Image')},steps:[{title:gettext('Image Details'),templateUrl:basePath+'steps/create-image/create-image.html',helpUrl:basePath+'steps/create-image/create-image.help.html',formName:'imageForm'},{title:gettext('Metadata'),templateUrl:basePath+'steps/update-metadata/update-metadata.html',helpUrl:basePath+'steps/update-metadata/update-metadata.help.html',formName:'updateMetadataForm'}]});return workflow;}})();(function(){'use strict';angular.module('horizon.app.core.images').factory('horizon.app.core.images.actions.delete-image.service',deleteImageService);deleteImageService.$inject=['$q','horizon.app.core.openstack-service-api.glance','horizon.app.core.openstack-service-api.policy','horizon.framework.util.actions.action-result.service','horizon.framework.util.i18n.gettext','horizon.framework.util.q.extensions','horizon.framework.widgets.modal.deleteModalService','horizon.framework.widgets.toast.service','horizon.app.core.images.resourceType'];function deleteImageService($q,glance,policy,actionResultService,gettext,$qExtensions,deleteModal,toast,imagesResourceType){var notAllowedMessage=gettext("You are not allowed to delete images: %s");var service={allowed:allowed,perform:perform};return service;function perform(items,newScope){var scope=newScope;var context={};var images=angular.isArray(items)?items:[items];context.labels=labelize(images.length);context.deleteEntity=deleteImage;return $qExtensions.allSettled(images.map(checkPermission)).then(afterCheck);function checkPermission(image){return{promise:allowed(image),context:image};}
function afterCheck(result){var outcome=$q.reject();if(result.fail.length>0){toast.add('error',getMessage(notAllowedMessage,result.fail));outcome=$q.reject(result.fail);}
if(result.pass.length>0){outcome=deleteModal.open(scope,result.pass.map(getEntity),context).then(createResult);}
return outcome;}}
function allowed(image){if(image){return $q.all([notProtected(image),policy.ifAllowed({rules:[['image','delete_image']]}),notDeleted(image)]);}else{return policy.ifAllowed({rules:[['image','delete_image']]});}}
function createResult(deleteModalResult){var actionResult=actionResultService.getActionResult();deleteModalResult.pass.forEach(function markDeleted(item){actionResult.deleted(imagesResourceType,getEntity(item).id);});deleteModalResult.fail.forEach(function markFailed(item){actionResult.failed(imagesResourceType,getEntity(item).id);});return actionResult.result;}
function labelize(count){return{title:ngettext('Confirm Delete Image','Confirm Delete Images',count),message:ngettext('You have selected "%s". Deleted image is not recoverable.','You have selected "%s". Deleted images are not recoverable.',count),submit:ngettext('Delete Image','Delete Images',count),success:ngettext('Deleted Image: %s.','Deleted Images: %s.',count),error:ngettext('Unable to delete Image: %s.','Unable to delete Images: %s.',count)};}
function notDeleted(image){return $qExtensions.booleanAsPromise(image.status!=='deleted');}
function notProtected(image){return $qExtensions.booleanAsPromise(!image.protected);}
function deleteImage(image){return glance.deleteImage(image,true);}
function getMessage(message,entities){return interpolate(message,[entities.map(getName).join(", ")]);}
function getName(result){return getEntity(result).name;}
function getEntity(result){return result.context;}}})();(function(){'use strict';angular.module('horizon.app.core.images').factory('horizon.app.core.images.actions.edit.service',editService);editService.$inject=['$q','horizon.app.core.images.events','horizon.app.core.images.resourceType','horizon.app.core.images.actions.editWorkflow','horizon.app.core.metadata.service','horizon.app.core.openstack-service-api.glance','horizon.app.core.openstack-service-api.policy','horizon.framework.util.actions.action-result.service','horizon.framework.util.q.extensions','horizon.framework.widgets.modal.wizard-modal.service','horizon.framework.widgets.toast.service'];function editService($q,events,imageResourceType,editWorkflow,metadataService,glance,policy,actionResultService,$qExtensions,wizardModalService,toast){var message={success:gettext('Image %s was successfully updated.')};var service={allowed:allowed,perform:perform};return service;function allowed(image){return $q.all([policy.ifAllowed({rules:[['image','modify_image']]}),isActive(image)]);}
function perform(image){var deferred=glance.getImage(image.id);deferred.then(onLoad);var data={};data.imagePromise=deferred;function onLoad(response){var localImage=response.data;data.image=localImage;}
return wizardModalService.modal({data:data,workflow:editWorkflow,submit:submit}).result;}
function submit(stepModels){var image=stepModels.imageForm;var metadata=stepModels.updateMetadataForm;return updateMetadata().then(updateImage,onUpdateImageFail);function updateMetadata(){return metadataService.getMetadata('image',image.id).then(onMetadataGet);function onMetadataGet(response){var updated=metadata;var removed=angular.copy(response.data);angular.forEach(updated,function(value,key){delete removed[key];});return metadataService.editMetadata('image',image.id,updated,Object.keys(removed));}}
function updateImage(){return glance.updateImage(image).then(onUpdateImageSuccess,onUpdateImageFail);}
function onUpdateImageSuccess(){toast.add('success',interpolate(message.success,[image.name]));return actionResultService.getActionResult().updated(imageResourceType,image.id).result;}
function onUpdateImageFail(){return actionResultService.getActionResult().failed(imageResourceType,image.id).result;}}
function isActive(image){return $qExtensions.booleanAsPromise(image.status==='active');}}})();(function(){'use strict';angular.module('horizon.app.core.images').factory('horizon.app.core.images.actions.editWorkflow',editWorkflow);editWorkflow.$inject=['horizon.app.core.images.basePath','horizon.app.core.workflow.factory','horizon.framework.util.i18n.gettext'];function editWorkflow(basePath,workflowService,gettext){var workflow=workflowService({title:gettext('Edit Image'),btnText:{finish:gettext('Update Image')},steps:[{title:gettext('Image Details'),templateUrl:basePath+'steps/edit-image/edit-image.html',helpUrl:basePath+'steps/edit-image/edit-image.help.html',formName:'imageForm'},{title:gettext('Metadata'),templateUrl:basePath+'steps/update-metadata/update-metadata.html',helpUrl:basePath+'steps/update-metadata/update-metadata.help.html',formName:'updateMetadataForm'}]});return workflow;}})();(function(){'use strict';angular.module('horizon.app.core.images').factory('horizon.app.core.images.actions.launch-instance.service',launchInstanceService);launchInstanceService.$inject=['$q','horizon.app.core.images.non_bootable_image_types','horizon.dashboard.project.workflow.launch-instance.modal.service','horizon.framework.util.q.extensions'];function launchInstanceService($q,nonBootableImageTypes,launchInstanceModal,$qExtensions){var service={perform:perform,allowed:allowed};return service;function perform(image){return launchInstanceModal.open({'imageId':image.id});}
function allowed(image){return $q.all([isBootable(image),isActive(image)]);}
function isActive(image){return $qExtensions.booleanAsPromise(image.status==='active');}
function isBootable(image){return $qExtensions.booleanAsPromise(nonBootableImageTypes.indexOf(image.container_format)<0);}}})();(function(){'use strict';angular.module('horizon.app.core.images').factory('horizon.app.core.images.actions.update-metadata.service',updateMetadataService);updateMetadataService.$inject=['$q','horizon.app.core.metadata.modal.service','horizon.app.core.openstack-service-api.policy','horizon.framework.util.actions.action-result.service','horizon.framework.util.q.extensions','horizon.app.core.images.resourceType'];function updateMetadataService($q,metadataModalService,policy,actionResultService,$qExtensions,imageResourceType){var service={perform:perform,allowed:allowed};return service;function perform(image){return metadataModalService.open('image',image.id).result.then(onSuccess);function onSuccess(){return actionResultService.getActionResult().updated(imageResourceType,image.id).result;}}
function allowed(image){return $q.all([policy.ifAllowed({rules:[['image','modify_metadef_object']]}),isActive(image)]);}
function isActive(image){return $qExtensions.booleanAsPromise(image.status==='active');}}})();(function(){"use strict";angular.module('horizon.app.core.images').controller('ImageOverviewController',ImageOverviewController);ImageOverviewController.$inject=['horizon.app.core.images.resourceType','horizon.framework.conf.resource-type-registry.service','horizon.app.core.openstack-service-api.userSession','$scope'];function ImageOverviewController(imageResourceTypeCode,registry,userSession,$scope){var ctrl=this;ctrl.resourceType=registry.getResourceType(imageResourceTypeCode);$scope.context.loadPromise.then(onGetImage);function onGetImage(image){ctrl.image=image.data;ctrl.image.properties=Object.keys(ctrl.image.properties).map(function mapProps(prop){var propValue=ctrl.image.properties[prop];if(angular.isArray(propValue)&&propValue.length===0){propValue='';}
return{name:prop,value:propValue};});userSession.get().then(setProject);function setProject(session){ctrl.projectId=session.project_id;}}}})();(function(){'use strict';angular.module('horizon.app.core.images').filter('imageVisibility',imageVisibilityFilter);imageVisibilityFilter.$inject=['horizon.framework.util.i18n.gettext'];function imageVisibilityFilter(gettext){var imageVisibility={'public':gettext('Public'),'private':gettext('Private'),'shared':gettext('Shared'),'community':gettext('Community'),'other':null,'unknown':gettext('Unknown')};return function getVisibility(image,currentProjectId){imageVisibility.other=gettext('Image from Other Project - Non-Public');if(null!==image&&angular.isDefined(image)){if(image.apiVersion<2){imageVisibility.other=gettext('Shared with Project');}
return evaluateImageProperties(image,currentProjectId);}else{return imageVisibility.unknown;}};function evaluateImageProperties(image,currentProjectId){var translatedVisibility;if(angular.isDefined(image.visibility)){translatedVisibility=safeTranslateVisibility(image.visibility);}else if(angular.isDefined(image.is_public)){translatedVisibility=translateIsPublic(image.is_public);}else{translatedVisibility=imageVisibility.unknown;}
return deriveSharingStatus(image,currentProjectId,translatedVisibility);}
function safeTranslateVisibility(visibility){var translation=imageVisibility[visibility];if(angular.isDefined(translation)){return translation;}else{return visibility;}}
function translateIsPublic(isPublic){if(isPublic){return imageVisibility.public;}else{return imageVisibility.private;}}
function deriveSharingStatus(image,currentProjectId,translatedVisibility){if(angular.equals(translatedVisibility,imageVisibility.public)){return translatedVisibility;}else if(angular.isDefined(currentProjectId)&&!angular.equals(image.owner,currentProjectId)){return imageVisibility.other;}else{return translatedVisibility;}}}}());(function(){"use strict";angular.module('horizon.app.core.images').factory('horizon.app.core.images.service',imageService);imageService.$inject=['$filter','$location','horizon.app.core.openstack-service-api.glance','horizon.app.core.openstack-service-api.userSession','horizon.app.core.images.transitional-statuses','horizon.app.core.openstack-service-api.settings','horizon.app.core.detailRoute'];function imageService($filter,$location,glance,userSession,transitionalStatuses,settings,detailRoute){var version;return{getDetailsPath:getDetailsPath,getImagePromise:getImagePromise,getImagesPromise:getImagesPromise,imageType:imageType,isInTransition:isInTransition,getFilterFirstSettingPromise:getFilterFirstSettingPromise};function getDetailsPath(item){return detailRoute+'OS::Glance::Image/'+item.id;}
function imageType(item){if(null!==item&&angular.isDefined(item)&&angular.isDefined(item.properties)&&(item.properties.image_type==='snapshot'||angular.isDefined(item.properties.block_device_mapping))){return gettext('Snapshot');}else{return gettext('Image');}}
function isInTransition(item){if(item&&angular.isString(item.status)){return transitionalStatuses.indexOf(item.status.toLowerCase())>-1;}
return false;}
function getImagesPromise(params){var projectId;return userSession.get().then(getImages);function getImages(userSession){glance.getVersion().then(setVersion);projectId=userSession.project_id;return glance.getImages(params).then(modifyResponse);}
function modifyResponse(response){return{data:{items:response.data.items.map(modifyImage)}};function modifyImage(image){image.trackBy=image.id+image.updated_at;image.apiVersion=version;image.visibility=$filter('imageVisibility')(image,projectId);image.name=image.name||image.id;image.type=imageType(image);return image;}}}
function getImagePromise(identifier){glance.getVersion().then(setVersion);return glance.getImage(identifier).then(modifyResponse);function modifyResponse(response){response.data.apiVersion=version;return{data:response.data};}}
function setVersion(response){version=response.data.version;}
function getFilterFirstSettingPromise(){return settings.getSetting('FILTER_DATA_FIRST',{'admin.images':false}).then(resolve);function resolve(result){if($location.url()==='/admin/images'){return result['admin.images'];}
return false;}}}})();(function(){'use strict';angular.module('horizon.app.core.images').controller('horizon.app.core.images.steps.CreateImageController',CreateImageController);CreateImageController.$inject=['$scope','horizon.app.core.openstack-service-api.glance','horizon.app.core.images.events','horizon.app.core.images.imageFormats','horizon.app.core.images.validationRules','horizon.app.core.openstack-service-api.settings','horizon.app.core.openstack-service-api.policy'];function CreateImageController($scope,glance,events,imageFormats,validationRules,settings,policyAPI){var ctrl=this;settings.getSettings().then(getConfiguredFormatsAndModes);ctrl.validationRules=validationRules;ctrl.imageFormats=imageFormats;ctrl.diskFormats=[];ctrl.prepareUpload=prepareUpload;ctrl.apiVersion=0;ctrl.allowPublicizeImage=true;$scope.stepModels.imageForm=ctrl.image={source_type:'',image_url:'',data:{},is_copying:false,protected:false,min_disk:0,min_ram:0,container_format:'',disk_format:'',visibility:'public'};ctrl.uploadProgress=-1;ctrl.imageProtectedOptions=[{label:gettext('Yes'),value:true},{label:gettext('No'),value:false}];ctrl.imageCopyOptions=[{label:gettext('Yes'),value:true},{label:gettext('No'),value:false}];ctrl.imageSourceOptions=[];ctrl.imageVisibilityOptions=[{label:gettext('Public'),value:'public'},{label:gettext('Private'),value:'private'}];ctrl.kernelImages=[];ctrl.ramdiskImages=[];ctrl.setFormats=setFormats;ctrl.isLocalFileUpload=isLocalFileUpload;init();var watchUploadProgress=$scope.$on(events.IMAGE_UPLOAD_PROGRESS,watchImageUpload);$scope.$on('$destroy',function(){watchUploadProgress();});function prepareUpload(file){ctrl.image.data=file;}
function watchImageUpload(event,progress){ctrl.uploadProgress=progress;}
function getConfiguredFormatsAndModes(response){ctrl.apiVersion=response.HORIZON_ACTIVE_IMAGE_VERSION;var settingsFormats=response.OPENSTACK_IMAGE_FORMATS;var uploadMode=response.HORIZON_IMAGES_UPLOAD_MODE;var dupe=angular.copy(imageFormats);var imageDefaults=response.CREATE_IMAGE_DEFAULTS;angular.forEach(dupe,function stripUnknown(name,key){if(settingsFormats.indexOf(key)===-1){delete dupe[key];}});if(uploadMode!=='off'){var uploadValue='file-'+uploadMode;ctrl.imageSourceOptions.push({label:gettext('File'),value:uploadValue});ctrl.image.source_type=uploadValue;}
if(ctrl.apiVersion<2||response.IMAGES_ALLOW_LOCATION){ctrl.imageSourceOptions.push({label:gettext('URL'),value:'url'});ctrl.image.source_type='url';}
ctrl.imageFormats=dupe;if(imageDefaults&&imageDefaults.image_visibility==="private"){ctrl.image.visibility="private";}}
function isLocalFileUpload(){var type=ctrl.image.source_type;return(type==='file-legacy'||type==='file-direct');}
function init(){glance.getImages({paginate:false}).success(onGetImages);policyAPI.ifAllowed({rules:[['image','publicize_image']]}).then(angular.noop,function(){ctrl.image.visibility="private";ctrl.allowPublicizeImage=false;});}
function onGetImages(response){ctrl.kernelImages=response.items.filter(function(elem){return elem.disk_format==='aki';});ctrl.ramdiskImages=response.items.filter(function(elem){return elem.disk_format==='ari';});}
function setFormats(){ctrl.image.container_format='bare';if(['aki','ami','ari'].indexOf(ctrl.image_format)>-1){ctrl.image.container_format=ctrl.image_format;}
ctrl.image.disk_format=ctrl.image_format;if(ctrl.image_format==='docker'){ctrl.image.container_format='docker';ctrl.image.disk_format='raw';}}}})();(function(){'use strict';angular.module('horizon.app.core.images').constant('BYTE_TO_GIB',9.3132e-10).controller('horizon.app.core.images.steps.CreateVolumeController',CreateVolumeController);CreateVolumeController.$inject=['$scope','$filter','horizon.app.core.openstack-service-api.cinder','horizon.app.core.openstack-service-api.nova','horizon.framework.widgets.charts.quotaChartDefaults','horizon.app.core.images.validationRules','BYTE_TO_GIB'];function CreateVolumeController($scope,$filter,cinder,nova,quotaChartDefaults,validationRules,BYTE_TO_GIB){var ctrl=this;ctrl.volumeType={};ctrl.volumeTypes=[];ctrl.availabilityZones=[];ctrl.image=$scope.image;ctrl.sourceImage=getSourceImage(ctrl.image);ctrl.validationRules=validationRules;ctrl.maxTotalVolumeGigabytes=100;ctrl.totalGigabytesUsed=0;ctrl.maxTotalVolumes=1;ctrl.totalVolumesUsed=0;var numberOfVolumesToAdd=1;$scope.stepModels.volumeForm=ctrl.volume={size:Math.ceil(Math.max(ctrl.image.min_disk,ctrl.image.size*BYTE_TO_GIB))||1,name:ctrl.image.name,description:'',volume_type:'',availability_zone:'',metadata:{},image_id:ctrl.image.id,snapshot_id:null,source_volid:null};ctrl.storageQuota={title:gettext('Volume and Snapshot Quota (GiB)'),maxLimit:ctrl.maxTotalVolumeGigabytes,label:getPercentUsed(ctrl.volume.size,ctrl.maxTotalVolumeGigabytes),data:[{label:quotaChartDefaults.usageLabel,value:ctrl.totalGigabytesUsed,colorClass:quotaChartDefaults.usageColorClass},{label:quotaChartDefaults.addedLabel,value:ctrl.volume.size,colorClass:quotaChartDefaults.addedColorClass},{label:quotaChartDefaults.remainingLabel,value:ctrl.maxTotalVolumeGigabytes-ctrl.volume.size,colorClass:quotaChartDefaults.remainingColorClass}]};ctrl.volumeQuota={title:gettext('Volume Quota'),maxLimit:ctrl.maxTotalVolumes,label:getPercentUsed(ctrl.totalVolumesUsed,ctrl.maxTotalVolumes),data:[{label:quotaChartDefaults.usageLabel,value:ctrl.totalVolumesUsed,colorClass:quotaChartDefaults.usageColorClass},{label:quotaChartDefaults.addedLabel,value:numberOfVolumesToAdd,colorClass:quotaChartDefaults.addedColorClass},{label:quotaChartDefaults.remainingLabel,value:ctrl.maxTotalVolumes-ctrl.totalVolumesUsed,colorClass:quotaChartDefaults.remainingColorClass}]};var capacityWatcher=$scope.$watch(function(){return ctrl.volume.size;},updateStorageGraph);var volumeTypeWatcher=$scope.$watch(function(){return ctrl.volumeType;},updateVolumeType,true);$scope.$on('$destroy',deregisterWatchers);init();function init(){cinder.getVolumeTypes().success(onGetVolumeTypes);cinder.getAbsoluteLimits().success(onGetAbsoluteLimits);cinder.getAvailabilityZones().success(onGetAvailabilityZones);}
function onGetVolumeTypes(response){ctrl.volumeTypes=response.items;cinder.getDefaultVolumeType().success(onGetDefaultVolumeType);}
function onGetDefaultVolumeType(response){ctrl.volumeTypes.forEach(function(volumeType){if(volumeType.name===response.name){ctrl.volumeType=volumeType;}});}
function onGetAvailabilityZones(response){ctrl.availabilityZones=response.items.map(justNames);if(ctrl.availabilityZones.length>0){ctrl.volume.availability_zone=ctrl.availabilityZones[0];}
function justNames(item){return item.zoneName;}}
function onGetAbsoluteLimits(response){ctrl.maxTotalVolumeGigabytes=response.maxTotalVolumeGigabytes;ctrl.totalGigabytesUsed=response.totalGigabytesUsed;updateStorageGraph();ctrl.totalVolumesUsed=response.totalVolumesUsed;ctrl.maxTotalVolumes=response.maxTotalVolumes;updateInstanceGraph();}
function updateStorageGraph(){if(ctrl.volume.size>=0){var totalGigabytesAllocated=ctrl.volume.size+ctrl.totalGigabytesUsed;ctrl.storageQuota.data[0].value=ctrl.totalGigabytesUsed;ctrl.storageQuota.data[1].value=ctrl.volume.size;ctrl.storageQuota.data[2].value=Math.max(ctrl.maxTotalVolumeGigabytes-totalGigabytesAllocated,0);ctrl.storageQuota.label=getPercentUsed(totalGigabytesAllocated,ctrl.maxTotalVolumeGigabytes);ctrl.storageQuota.maxLimit=ctrl.maxTotalVolumeGigabytes;ctrl.storageQuota.overMax=totalGigabytesAllocated>ctrl.storageQuota.maxLimit;ctrl.storageQuota=angular.extend({},ctrl.storageQuota);$scope.volumeForm.$setValidity('volumeSize',!ctrl.storageQuota.overMax);}}
function updateInstanceGraph(){ctrl.volumeQuota.data[0].value=ctrl.totalVolumesUsed;ctrl.volumeQuota.data[2].value=Math.max(ctrl.maxTotalVolumes-ctrl.totalVolumesUsed-numberOfVolumesToAdd,0);ctrl.volumeQuota.label=getPercentUsed(ctrl.totalVolumesUsed+numberOfVolumesToAdd,ctrl.maxTotalVolumes);ctrl.volumeQuota.maxLimit=ctrl.maxTotalVolumes;ctrl.volumeQuota.overMax=ctrl.totalVolumesUsed===ctrl.volumeQuota.maxLimit;ctrl.volumeQuota=angular.extend({},ctrl.volumeQuota);}
function getPercentUsed(used,total){return Math.round(used/total*100)+'%';}
function getSourceImage(image){return image.name+' ('+$filter('bytes')(image.size)+')';}
function updateVolumeType(){ctrl.volume.volume_type=ctrl.volumeType.name||'';}
function deregisterWatchers(){capacityWatcher();volumeTypeWatcher();}}})();(function(){'use strict';angular.module('horizon.app.core.images').controller('horizon.app.core.images.steps.EditImageController',EditImageController);EditImageController.$inject=['$scope','horizon.app.core.images.imageFormats','horizon.app.core.images.validationRules','horizon.app.core.openstack-service-api.settings'];function EditImageController($scope,imageFormats,validationRules,settings){var ctrl=this;settings.getSettings().then(getConfiguredFormats);ctrl.diskFormats=[];ctrl.validationRules=validationRules;ctrl.imageProtectedOptions=[{label:gettext('Yes'),value:true},{label:gettext('No'),value:false}];ctrl.imageVisibilityOptions=[{label:gettext('Public'),value:'public'},{label:gettext('Private'),value:'private'}];ctrl.setFormats=setFormats;ctrl.allowPublicizeImage={rules:[['image','image:publicize_image']]};$scope.imagePromise.then(init);function getConfiguredFormats(response){var settingsFormats=response.OPENSTACK_IMAGE_FORMATS;var dupe=angular.copy(imageFormats);angular.forEach(dupe,function stripUnknown(name,key){if(settingsFormats.indexOf(key)===-1){delete dupe[key];}});ctrl.imageFormats=dupe;}
function init(response){$scope.stepModels.imageForm=ctrl.image=response.data;ctrl.image.kernel=ctrl.image.properties.kernel_id;ctrl.image.ramdisk=ctrl.image.properties.ramdisk_id;ctrl.image.architecture=ctrl.image.properties.architecture;ctrl.image.visibility=ctrl.image.is_public?'public':'private';ctrl.image_format=ctrl.image.disk_format;if(ctrl.image.container_format==='docker'){ctrl.image_format='docker';ctrl.image.disk_format='raw';}
setFormats();}
function setFormats(){ctrl.image.container_format='bare';if(['aki','ami','ari'].indexOf(ctrl.image_format)>-1){ctrl.image.container_format=ctrl.image_format;}
ctrl.image.disk_format=ctrl.image_format;if(ctrl.image_format==='docker'){ctrl.image.container_format='docker';ctrl.image.disk_format='raw';}}}})();(function(){'use strict';angular.module('horizon.app.core.images').controller('horizon.app.core.images.steps.UpdateMetadataController',UpdateMetadataController);UpdateMetadataController.$inject=['$scope','$q','horizon.app.core.images.events','horizon.app.core.metadata.service','horizon.framework.widgets.metadata.tree.service'];function UpdateMetadataController($scope,$q,events,metadataService,metadataTreeService){var ctrl=this;ctrl.tree=new metadataTreeService.Tree([],[]);$scope.$watchCollection(getTree,onMetadataChanged);if($scope.imagePromise){$scope.imagePromise.then(init);}else{$q.all({available:metadataService.getNamespaces('image'),existing:getExistingMetdataPromise({})}).then(onMetadataGet);}
function init(response){var image=response.data;$q.all({available:metadataService.getNamespaces('image'),existing:getExistingMetdataPromise(image)}).then(onMetadataGet);}
function onMetadataGet(response){ctrl.tree=new metadataTreeService.Tree(response.available.data.items,response.existing.data);}
function getTree(){return ctrl.tree.getExisting();}
function getExistingMetdataPromise(image){if(angular.isDefined(image.id)){return metadataService.getMetadata('image',image.id);}else{var deferred=$q.defer();deferred.resolve({data:[]});return deferred.promise;}}
function onMetadataChanged(newValue,oldValue){if(newValue!==oldValue){$scope.stepModels.updateMetadataForm=newValue;}}}})();(function(){'use strict';angular.module('horizon.app.core.images').controller('horizon.app.core.images.DrawerController',controller);controller.$inject=['horizon.app.core.openstack-service-api.glance','horizon.app.core.images.resourceType'];var metadataDefs;function controller(glance,imageResourceType){var ctrl=this;ctrl.metadataDefs=metadataDefs;if(!ctrl.metadataDefs){applyMetadataDefinitions();}
function applyMetadataDefinitions(){glance.getNamespaces({resource_type:imageResourceType},true).then(function setMetadefs(data){ctrl.metadataDefs=data.data.items;});}}})();(function(){'use strict';angular.module('horizon.app.core.images').factory('horizon.app.core.images.workflows.create-volume.service',createVolumeService);createVolumeService.$inject=['horizon.app.core.images.basePath','horizon.app.core.workflow.factory','horizon.framework.util.i18n.gettext'];function createVolumeService(basePath,workflowService,gettext){var workflow=workflowService({title:gettext('Create Volume'),btnText:{finish:gettext('Create Volume')},steps:[{title:gettext('Volume Details'),templateUrl:basePath+'steps/create-volume/create-volume.html',helpUrl:basePath+'steps/create-volume/create-volume.help.html',formName:'volumeForm'}]});return workflow;}})();(function(){'use strict';angular.module('horizon.app.core.keypairs.actions').factory('horizon.app.core.keypairs.actions.create.service',createService);createService.$inject=['horizon.app.core.keypairs.basePath','horizon.app.core.keypairs.resourceType','horizon.app.core.openstack-service-api.nova','horizon.app.core.openstack-service-api.policy','horizon.framework.util.actions.action-result.service','horizon.framework.util.file.text-download','horizon.framework.widgets.form.ModalFormService','horizon.framework.widgets.toast.service'];function createService(basePath,resourceType,nova,policy,actionResult,download,modal,toast){var keypairs=[];var caption=gettext("Create Key Pair");var invalidMsg=gettext("Key pair already exists.");var schema={type:"object",properties:{"name":{title:gettext("Key Pair Name"),type:"string",pattern:"^[A-Za-z0-9 -]+$"}}};var form=[{type:"section",htmlClass:"row",items:[{type:"section",htmlClass:"col-sm-6",items:[{key:"name",validationMessage:{keypairExists:invalidMsg},$validators:{keypairExists:function(name){return(keypairs.indexOf(name)===-1);}},required:true}]},{type:"section",htmlClass:"col-sm-6",items:[{type:"template",templateUrl:basePath+"actions/create.description.html"}]}]}];var model;var service={perform:perform,allowed:allowed,getKeypairs:getKeypairs};return service;function allowed(){return policy.ifAllowed({rules:[['compute','os_compute_api:os-keypairs:create']]});}
function perform(){getKeypairs();model={name:""};var config={"title":caption,"submitText":caption,"schema":schema,"form":form,"model":model,"submitIcon":"plus"};return modal.open(config).then(submit);}
function submit(context){return nova.createKeypair(context.model).then(success);}
function success(response){var successMsg=gettext('Key pair %(name)s was successfully created.');toast.add('success',interpolate(successMsg,{name:response.data.name},true));download.downloadTextFile(response.data.private_key,response.data.name+'.pem');var result=actionResult.getActionResult().created(resourceType,response.data.name);return result.result;}
function getKeypairs(){nova.getKeypairs().then(function(response){keypairs=response.data.items.map(getName);});}
function getName(item){return item.keypair.name;}}})();(function(){'use strict';angular.module('horizon.app.core.keypairs').factory('horizon.app.core.keypairs.actions.delete.service',deleteService);deleteService.$inject=['$location','horizon.app.core.keypairs.resourceType','horizon.app.core.openstack-service-api.nova','horizon.app.core.openstack-service-api.policy','horizon.framework.util.actions.action-result.service','horizon.framework.util.i18n.gettext','horizon.framework.widgets.modal.deleteModalService'];function deleteService($location,resourceType,nova,policy,actionResultService,gettext,deleteModal){var service={allowed:allowed,perform:perform};return service;function allowed(){return policy.ifAllowed({rules:[['compute','os_compute_api:os-keypairs:delete']]});}
function perform(items,scope){var keypairs=angular.isArray(items)?items:[items];var context={labels:labelize(keypairs.length),deleteEntity:deleteKeypair};return deleteModal.open(scope,keypairs,context).then(deleteResult);}
function deleteResult(deleteModalResult){var actionResult=actionResultService.getActionResult();deleteModalResult.pass.forEach(function markDeleted(item){actionResult.deleted(resourceType,item.context.id);});deleteModalResult.fail.forEach(function markFailed(item){actionResult.failed(resourceType,item.context.id);});if(actionResult.result.failed.length===0&&actionResult.result.deleted.length>0){$location.path("/project/key_pairs");}else{return actionResult.result;}}
function labelize(count){return{title:ngettext('Confirm Delete Key Pair','Confirm Delete Key Pairs',count),message:ngettext('You have selected "%s". Deleted key pair is not recoverable.','You have selected "%s". Deleted key pairs are not recoverable.',count),submit:ngettext('Delete Key Pair','Delete Key Pairs',count),success:ngettext('Deleted Key Pair: %s.','Deleted Key Pairs: %s.',count),error:ngettext('Unable to delete Key Pair: %s.','Unable to delete Key Pairs: %s.',count)};}
function deleteKeypair(keypair){return nova.deleteKeypair(keypair,true);}}})();(function(){'use strict';angular.module('horizon.app.core.keypairs.actions').controller('horizon.app.core.keypairs.actions.ImportPublicKeyController',importPublicKeyController);importPublicKeyController.$inject=['$scope'];function importPublicKeyController($scope){var ctrl=this;ctrl.title=$scope.schema.properties.public_key.title;ctrl.public_key="";ctrl.onPublicKeyChange=function(publicKey){$scope.model.public_key=publicKey;};}})();(function(){'use strict';angular.module('horizon.app.core.keypairs.actions').factory('horizon.app.core.keypairs.actions.import.service',importService);importService.$inject=['horizon.app.core.keypairs.basePath','horizon.app.core.keypairs.resourceType','horizon.app.core.openstack-service-api.nova','horizon.app.core.openstack-service-api.policy','horizon.framework.util.actions.action-result.service','horizon.framework.widgets.form.ModalFormService','horizon.framework.widgets.toast.service'];function importService(basePath,resourceType,nova,policy,actionResult,modal,toast){var keypairs=[];var caption=gettext("Import Public Key");var invalidMsg=gettext("Key pair already exists.");var schema={type:"object",properties:{"name":{title:gettext("Key Pair Name"),type:"string",pattern:"^[A-Za-z0-9 -]+$"},"public_key":{title:gettext("Public Key"),type:"string"}}};var form=[{type:"section",htmlClass:"row",items:[{type:"section",htmlClass:"col-sm-6",items:[{key:"name",validationMessage:{keypairExists:invalidMsg},$validators:{keypairExists:function(name){return(keypairs.indexOf(name)===-1);}},required:true},{type:"template",templateUrl:basePath+"actions/import.public-key.html"}]},{type:"section",htmlClass:"col-sm-6",items:[{type:"template",templateUrl:basePath+"actions/import.description.html"}]}]}];var model;var service={perform:perform,allowed:allowed};return service;function allowed(){return policy.ifAllowed({rules:[['compute','os_compute_api:os-keypairs:create']]});}
function perform(){getKeypairs();model={name:"",public_key:""};var config={"title":caption,"submitText":caption,"schema":schema,"form":form,"model":model,"submitIcon":"upload"};return modal.open(config).then(submit);}
function submit(context){return nova.createKeypair(context.model).then(success);}
function success(response){var successMsg=gettext('Successfully imported key pair %(name)s.');toast.add('success',interpolate(successMsg,{name:response.data.name},true));var result=actionResult.getActionResult().created(resourceType,response.data.name);return result.result;}
function getKeypairs(){nova.getKeypairs().then(function(response){keypairs=response.data.items.map(getName);});}
function getName(item){return item.keypair.name;}}})();(function(){"use strict";angular.module('horizon.app.core.keypairs').controller('horizon.app.core.keypairs.DetailsController',KeypairDetailsController);KeypairDetailsController.$inject=['$scope'];function KeypairDetailsController($scope){var ctrl=this;ctrl.keypair={};$scope.context.loadPromise.then(onGetKeypair);function onGetKeypair(response){ctrl.keypair=response.data;ctrl.keypair.keypair_id=ctrl.keypair.id;ctrl.keypair.id=ctrl.keypair.name;}}})();(function(){'use strict';angular.module('horizon.app.core.keypairs').controller('KeypairController',KeypairController);KeypairController.$inject=['horizon.dashboard.project.workflow.launch-instance.basePath','horizon.app.core.openstack-service-api.nova','horizon.framework.widgets.modal-wait-spinner.service','$window','$uibModal'];function KeypairController(basePath,nova,spinnerService,$window,$uibModal){var ctrl=this;ctrl.createKeyPair=createKeyPair;function setKeyPairs(config){return function(response){var keyPairs=response.data.items.map(getName);$uibModal.open({templateUrl:basePath+'keypair/create-keypair.html',controller:'LaunchInstanceCreateKeyPairController as ctrl',windowClass:'modal-dialog-wizard',resolve:{existingKeypairs:getKeypairs}}).result.then(go(config.successUrl));function getName(item){return item.keypair.name;}
function getKeypairs(){return keyPairs;}};}
function createKeyPair(config){nova.getKeypairs().then(setKeyPairs(config));}
function go(url){return function changeUrl(){spinnerService.showModalSpinner(gettext('Please Wait'));$window.location.href=url;};}}})();(function(){"use strict";angular.module('horizon.app.core.keypairs').factory('horizon.app.core.keypairs.service',keypairsService);keypairsService.$inject=['horizon.app.core.detailRoute','horizon.app.core.openstack-service-api.nova'];function keypairsService(detailRoute,nova){return{getKeypairsPromise:getKeypairsPromise,getKeypairPromise:getKeypairPromise,urlFunction:urlFunction};function getKeypairsPromise(params){return nova.getKeypairs(params).then(modifyResponse);function modifyResponse(response){return{data:{items:response.data.items.map(modifyItem)}};function modifyItem(item){item=item.keypair;item.id=item.name;item.trackBy=item.name+item.fingerprint;return item;}}}
function getKeypairPromise(name){return nova.getKeypair(name);}
function urlFunction(item){return detailRoute+'OS::Nova::Keypair/'+item.name;}}})();(function(){'use strict';angular.module('horizon.app.core.metadata').factory('horizon.app.core.metadata.service',metadataService);metadataService.$inject=['horizon.app.core.openstack-service-api.nova','horizon.app.core.openstack-service-api.glance','horizon.app.core.openstack-service-api.cinder'];function metadataService(nova,glance,cinder){var service={getMetadata:getMetadata,editMetadata:editMetadata,getNamespaces:getNamespaces};return service;function getMetadata(resource,id){return{aggregate:nova.getAggregateExtraSpecs,flavor:nova.getFlavorExtraSpecs,image:glance.getImageProps,instance:nova.getInstanceMetadata,volume:cinder.getVolumeMetadata,volume_snapshot:cinder.getVolumeSnapshotMetadata,volume_type:cinder.getVolumeTypeMetadata}[resource](id);}
function editMetadata(resource,id,updated,removed){return{aggregate:nova.editAggregateExtraSpecs,flavor:nova.editFlavorExtraSpecs,image:glance.editImageProps,instance:nova.editInstanceMetadata,volume:cinder.editVolumeMetadata,volume_snapshot:cinder.editVolumeSnapshotMetadata,volume_type:cinder.editVolumeTypeMetadata}[resource](id,updated,removed);}
function getNamespaces(resource,propertiesTarget){var params={resource_type:{aggregate:'OS::Nova::Aggregate',flavor:'OS::Nova::Flavor',image:'OS::Glance::Image',instance:'OS::Nova::Server',volume:'OS::Cinder::Volume',volume_snapshot:'OS::Cinder::Snapshot',volume_type:'OS:Cinder::VolumeType'}[resource]};if(propertiesTarget){params.properties_target=propertiesTarget;}
return glance.getNamespaces(params,false);}}})();(function(){'use strict';angular.module('horizon.app.core.metadata.modal').controller('MetadataModalHelperController',MetadataModalHelperController);MetadataModalHelperController.$inject=['$window','horizon.app.core.metadata.modal.service'];function MetadataModalHelperController($window,metadataModalService){var ctrl=this;ctrl.openMetadataModal=openMetadataModal;function openMetadataModal(resource,id,requireReload,propertiesTarget){metadataModalService.open(resource,id,propertiesTarget).result.then(onOpened);function onOpened(){if(requireReload){$window.location.reload();}}}}})();(function(){'use strict';angular.module('horizon.app.core.metadata.modal').controller('MetadataModalController',MetadataModalController);MetadataModalController.$inject=['$uibModalInstance','horizon.app.core.metadata.service','horizon.framework.widgets.metadata.tree.service','horizon.framework.widgets.toast.service','available','existing','params'];function MetadataModalController($uibModalInstance,metadataService,metadataTreeService,toastService,available,existing,params){var ctrl=this;ctrl.cancel=cancel;ctrl.resourceType=params.resource;ctrl.save=save;ctrl.saving=false;ctrl.tree=new metadataTreeService.Tree(available.data.items,existing.data);function save(){ctrl.saving=true;var updated=ctrl.tree.getExisting();var removed=angular.copy(existing.data);angular.forEach(removed,function bug1606988(value,removedKey){angular.forEach(ctrl.tree.flatTree,function compareToDefinitions(item){if(item.leaf&&removedKey.toLocaleLowerCase()===item.leaf.name.toLocaleLowerCase()){delete removed[removedKey];removed[item.leaf.name]=value;}});});angular.forEach(updated,function(value,key){delete removed[key];});metadataService.editMetadata(params.resource,params.id,updated,Object.keys(removed)).then(onEditSuccess,onEditFailure);}
function cancel(){$uibModalInstance.dismiss('cancel');}
function onEditSuccess(){toastService.add('success',gettext('Metadata was successfully updated.'));$uibModalInstance.close();}
function onEditFailure(){toastService.add('error',gettext('Unable to update metadata.'));ctrl.saving=false;}}})();(function(){'use strict';angular.module('horizon.app.core.metadata.modal').factory('horizon.app.core.metadata.modal.service',modalService);modalService.$inject=['$uibModal','horizon.app.core.basePath','horizon.app.core.metadata.service','horizon.app.core.metadata.modal.constants'];function modalService($uibModal,path,metadataService,modalConstants){var service={open:open};return service;function open(resource,id,propertiesTarget){function resolveAvailable(){return metadataService.getNamespaces(resource,propertiesTarget);}
function resolveExisting(){return metadataService.getMetadata(resource,id);}
function resolveParams(){return{resource:resource,id:id};}
var resolve={available:resolveAvailable,existing:resolveExisting,params:resolveParams};var modalParams={resolve:resolve,templateUrl:path+'metadata/modal/modal.html'};return $uibModal.open(angular.extend(modalParams,modalConstants));}}})();(function(){"use strict";angular.module('horizon.app.core.network_qos').controller('NetworkQoSOverviewController',NetworkQoSOverviewController);NetworkQoSOverviewController.$inject=['horizon.app.core.network_qos.resourceType','horizon.framework.conf.resource-type-registry.service','horizon.app.core.openstack-service-api.userSession','$scope'];function NetworkQoSOverviewController(qosResourceTypeCode,registry,userSession,$scope){var ctrl=this;ctrl.resourceType=registry.getResourceType(qosResourceTypeCode);ctrl.tableConfig={selectAll:false,expand:false,trackId:'id',columns:[{id:'id',title:gettext('Rule ID'),priority:1,sortDefault:true},{id:'type',title:gettext('Type'),priority:1},{id:'direction',title:gettext('Direction'),priority:1},{id:'max_kbps',title:gettext('Max Kbps'),priority:1},{id:'max_burst_kbps',title:gettext('Max Burst Kbits'),priority:1},{id:'min_kbps',title:gettext('Min Kbps'),priority:1},{id:'dscp_mark',title:gettext('DSCP Mark'),priority:1}]};$scope.context.loadPromise.then(onGetPolicy);function onGetPolicy(response){ctrl.policy=response.data;userSession.get().then(setProject);function setProject(session){ctrl.projectId=session.project_id;}}}})();(function(){"use strict";angular.module('horizon.app.core.network_qos').factory('horizon.app.core.network_qos.service',qosService);qosService.$inject=['horizon.app.core.openstack-service-api.neutron','horizon.app.core.openstack-service-api.userSession','horizon.app.core.detailRoute'];function qosService(neutron,userSession,detailRoute){var version;return{getDetailsPath:getDetailsPath,getPoliciesPromise:getPoliciesPromise,getPolicyPromise:getPolicyPromise};function getDetailsPath(item){return detailRoute+'OS::Neutron::QoSPolicy/'+item.id;}
function getPoliciesPromise(params){return userSession.get().then(getQoSPolicies);function getQoSPolicies(){return neutron.getQoSPolicies(params).then(modifyResponse);}
function modifyResponse(response){return{data:{items:response.data.items.map(modifyQos)}};function modifyQos(policy){policy.trackBy=policy.id;policy.apiVersion=version;policy.name=policy.name||policy.id;return policy;}}}
function getPolicyPromise(identifier){return neutron.getQosPolicy(identifier);}}})();(function(){'use strict';angular.module('horizon.app.core.openstack-service-api').factory('horizon.app.core.openstack-service-api.cinderExtensions',cinderExtensionsAPI);cinderExtensionsAPI.$inject=['$cacheFactory','horizon.app.core.openstack-service-api.extensions','horizon.app.core.openstack-service-api.cinder'];function cinderExtensionsAPI($cacheFactory,extensionsAPI,cinderAPI){return extensionsAPI({cacheFactory:$cacheFactory('horizon.app.core.openstack-service-api.cinderExtensions',{capacity:1}),serviceAPI:cinderAPI});}}());(function(){'use strict';angular.module('horizon.app.core.openstack-service-api').factory('horizon.app.core.openstack-service-api.cinder',cinderAPI);cinderAPI.$inject=['horizon.framework.util.http.service','horizon.framework.widgets.toast.service'];function cinderAPI(apiService,toastService){var service={getVolumes:getVolumes,getVolume:getVolume,getVolumeTypes:getVolumeTypes,getVolumeMetadata:getVolumeMetadata,getVolumeSnapshotMetadata:getVolumeSnapshotMetadata,getVolumeTypeMetadata:getVolumeTypeMetadata,getVolumeType:getVolumeType,getDefaultVolumeType:getDefaultVolumeType,getVolumeSnapshots:getVolumeSnapshots,getExtensions:getExtensions,getQoSSpecs:getQoSSpecs,getAvailabilityZones:getAvailabilityZones,createVolume:createVolume,getAbsoluteLimits:getAbsoluteLimits,getServices:getServices,getDefaultQuotaSets:getDefaultQuotaSets,setDefaultQuotaSets:setDefaultQuotaSets,updateProjectQuota:updateProjectQuota,editVolumeMetadata:editVolumeMetadata,editVolumeSnapshotMetadata:editVolumeSnapshotMetadata,editVolumeTypeMetadata:editVolumeTypeMetadata};return service;function getVolumes(params){var config=params?{'params':params}:{};return apiService.get('/api/cinder/volumes/',config).error(function(){toastService.add('error',gettext('Unable to retrieve the volumes.'));});}
function getVolume(id){return apiService.get('/api/cinder/volumes/'+id).error(function(){toastService.add('error',gettext('Unable to retrieve the volume.'));});}
function createVolume(newVolume){return apiService.post('/api/cinder/volumes/',newVolume).error(function(){toastService.add('error',gettext('Unable to create the volume.'));});}
function getVolumeTypes(){return apiService.get('/api/cinder/volumetypes/').error(function(){toastService.add('error',gettext('Unable to retrieve the volume types.'));});}
function getVolumeMetadata(id){return apiService.get('/api/cinder/volumes/'+id+'/metadata').error(function(){toastService.add('error',gettext('Unable to retrieve the volume metadata.'));});}
function getVolumeSnapshotMetadata(id){return apiService.get('/api/cinder/volumesnapshots/'+id+'/metadata').error(function(){toastService.add('error',gettext('Unable to retrieve the snapshot metadata.'));});}
function getVolumeTypeMetadata(id){return apiService.get('/api/cinder/volumetypes/'+id+'/metadata').error(function(){toastService.add('error',gettext('Unable to retrieve the volume type metadata.'));});}
function editVolumeMetadata(id,updated,removed){return apiService.patch('/api/cinder/volumes/'+id+'/metadata',{updated:updated,removed:removed}).error(function(){toastService.add('error',gettext('Unable to edit volume metadata.'));});}
function editVolumeSnapshotMetadata(id,updated,removed){return apiService.patch('/api/cinder/volumesnapshots/'+id+'/metadata',{updated:updated,removed:removed}).error(function(){toastService.add('error',gettext('Unable to edit snapshot metadata.'));});}
function editVolumeTypeMetadata(id,updated,removed){return apiService.patch('/api/cinder/volumetypes/'+id+'/metadata',{updated:updated,removed:removed}).error(function(){toastService.add('error',gettext('Unable to edit volume type metadata.'));});}
function getVolumeType(id){return apiService.get('/api/cinder/volumetypes/'+id).error(function(){toastService.add('error',gettext('Unable to retrieve the volume type.'));});}
function getDefaultVolumeType(){return apiService.get('/api/cinder/volumetypes/default').error(function(){toastService.add('error',gettext('Unable to retrieve the default volume type.'));});}
function getVolumeSnapshots(params){var config=params?{'params':params}:{};return apiService.get('/api/cinder/volumesnapshots/',config).error(function(){toastService.add('error',gettext('Unable to retrieve the volume snapshots.'));});}
function getExtensions(config){return apiService.get('/api/cinder/extensions/',config).error(function(){toastService.add('error',gettext('Unable to retrieve the extensions.'));});}
function getServices(){return apiService.get('/api/cinder/services/').error(function(){toastService.add('error',gettext('Unable to retrieve the cinder services.'));});}
function getQoSSpecs(params){var config=params?{'params':params}:{};return apiService.get('/api/cinder/qosspecs/',config).error(function(){toastService.add('error',gettext('Unable to retrieve the QoS Specs.'));});}
function getAbsoluteLimits(){return apiService.get('/api/cinder/tenantabsolutelimits/').error(function(){toastService.add('error',gettext('Unable to retrieve the Absolute Limits.'));});}
function getDefaultQuotaSets(){return apiService.get('/api/cinder/quota-sets/defaults/').error(function(){toastService.add('error',gettext('Unable to retrieve the default quotas.'));});}
function setDefaultQuotaSets(quotas){return apiService.patch('/api/cinder/quota-sets/defaults/',quotas).error(function(){toastService.add('error',gettext('Unable to set the default quotas.'));});}
function updateProjectQuota(quota,projectId){var url='/api/cinder/quota-sets/'+projectId;return apiService.patch(url,quota).error(function(){toastService.add('error',gettext('Unable to update project quota data.'));});}
function getAvailabilityZones(){return apiService.get('/api/cinder/availzones/').error(function(){toastService.add('error',gettext('Unable to retrieve the volume availability zones.'));});}}}());(function(){'use strict';angular.module('horizon.app.core.openstack-service-api').factory('horizon.app.core.openstack-service-api.extensions',extensions);extensions.$inject=['$q'];function extensions($q){return function(spec){return createService(spec.serviceAPI,spec.cacheFactory);};function createService(serviceAPI,cacheFactory){var service={cache:cacheFactory,get:get,ifNameEnabled:ifNameEnabled};return service;function get(){return serviceAPI.getExtensions({cache:service.cache}).then(onGetExtensions);}
function onGetExtensions(data){return data.data.items;}
function ifNameEnabled(desired){var deferred=$q.defer();service.get().then(onDataLoaded,onDataFailure);function onDataLoaded(extensions){if(enabled(extensions,'name',desired)){deferred.resolve();}else{deferred.reject(interpolate(gettext('Extension is not enabled: %(extension)s.'),{extension:desired},true));}}
function onDataFailure(){deferred.reject(gettext('Cannot get the extension list.'));}
return deferred.promise;}
function enabled(resources,key,desired){if(resources){return resources.some(function matchResource(resource){return resource[key]===desired;});}else{return false;}}}}}());(function(){'use strict';angular.module('horizon.app.core.openstack-service-api').factory('horizon.app.core.openstack-service-api.glance',glanceAPI);glanceAPI.$inject=['horizon.framework.util.http.service','horizon.framework.widgets.toast.service'];function glanceAPI(apiService,toastService){var service={getVersion:getVersion,getImage:getImage,createImage:createImage,updateImage:updateImage,deleteImage:deleteImage,getImageProps:getImageProps,editImageProps:editImageProps,getImages:getImages,getNamespaces:getNamespaces,getResourceTypes:getResourceTypes};return service;function getVersion(){return apiService.get('/api/glance/version/').error(function(){toastService.add('error',gettext('Unable to get the Glance service version.'));});}
function getImage(id){return apiService.get('/api/glance/images/'+id+'/').error(function(){toastService.add('error',gettext('Unable to retrieve the image.'));});}
function createImage(image,onProgress){var localFile;var method=image.source_type==='file-legacy'?'post':'put';if(image.source_type==='file-direct'&&'data'in image){localFile=image.data;image=angular.extend({},image);image.data=localFile.name;}
function onImageQueued(response){var image=response.data;if('upload_url'in image){return apiService.put(image.upload_url,localFile,{headers:{'Content-Type':'application/octet-stream','X-Auth-Token':image.token_id},external:true}).then(function success(){return response;},onError,notify);}else{return response;}}
function notify(event){onProgress(Math.round(event.loaded/event.total*100));}
function onError(error){if(error&&error.data){throw error;}else{throw gettext('Unable to create the image.');}}
return apiService[method]('/api/glance/images/',image).then(onImageQueued,onError,notify);}
function updateImage(image){return apiService.patch('/api/glance/images/'+image.id+'/',image).error(function(){toastService.add('error',gettext('Unable to update the image.'));});}
function deleteImage(imageId,suppressError){var promise=apiService.delete('/api/glance/images/'+imageId+'/');return suppressError?promise:promise.error(function(){var msg=gettext('Unable to delete the image with id: %(id)s');toastService.add('error',interpolate(msg,{id:imageId},true));});}
function getImageProps(id){return apiService.get('/api/glance/images/'+id+'/properties/').error(function(){toastService.add('error',gettext('Unable to retrieve the image custom properties.'));});}
function editImageProps(id,updated,removed){return apiService.patch('/api/glance/images/'+id+'/properties/',{updated:updated,removed:removed}).error(function(){toastService.add('error',gettext('Unable to edit the image custom properties.'));});}
function getImages(params){var config=params?{'params':params}:{};return apiService.get('/api/glance/images/',config).error(function(){toastService.add('error',gettext('Unable to retrieve the images.'));});}
function getNamespaces(params,suppressError){var config=params?{'params':params}:{};config.cache=true;var promise=apiService.get('/api/glance/metadefs/namespaces/',config);return suppressError?promise:promise.error(function(){toastService.add('error',gettext('Unable to retrieve the namespaces.'));});}
function getResourceTypes(){var config={cache:true};return apiService.get('/api/glance/metadefs/resourcetypes/',config).error(function(){toastService.add('error',gettext('Unable to retrieve the resource types.'));});}}}());(function(){'use strict';angular.module('horizon.app.core.openstack-service-api').factory('horizon.app.core.openstack-service-api.keystone',keystoneAPI);keystoneAPI.$inject=['$q','horizon.framework.util.http.service','horizon.framework.widgets.toast.service'];function keystoneAPI($q,apiService,toastService){var service={getVersion:getVersion,getUsers:getUsers,createUser:createUser,deleteUsers:deleteUsers,getCurrentUserSession:getCurrentUserSession,getUser:getUser,editUser:editUser,deleteUser:deleteUser,getRoles:getRoles,createRole:createRole,deleteRoles:deleteRoles,getRole:getRole,editRole:editRole,deleteRole:deleteRole,getDefaultDomain:getDefaultDomain,getDomains:getDomains,createDomain:createDomain,deleteDomains:deleteDomains,getDomain:getDomain,editDomain:editDomain,deleteDomain:deleteDomain,getProjects:getProjects,createProject:createProject,deleteProjects:deleteProjects,getProject:getProject,getProjectName:getProjectName,editProject:editProject,deleteProject:deleteProject,grantRole:grantRole,serviceCatalog:serviceCatalog,getServices:getServices,getGroups:getGroups,createGroup:createGroup,getGroup:getGroup,editGroup:editGroup,deleteGroup:deleteGroup,deleteGroups:deleteGroups};return service;function getVersion(){return apiService.get('/api/keystone/version/').error(function(){toastService.add('error',gettext('Unable to get the Keystone service version.'));});}
function getUsers(params){var config=params?{'params':params}:{};return apiService.get('/api/keystone/users/',config).error(function(){toastService.add('error',gettext('Unable to retrieve the users.'));});}
function createUser(newUser){return apiService.post('/api/keystone/users/',newUser).error(function(){toastService.add('error',gettext('Unable to create the user.'));});}
function deleteUsers(userIds){return apiService.delete('/api/keystone/users/',userIds).error(function(){toastService.add('error',gettext('Unable to delete the users.'));});}
function getServices(){return apiService.get('/api/keystone/services/').error(function(){toastService.add('error',gettext('Unable to fetch the services.'));});}
function getGroups(){return apiService.get('/api/keystone/groups/').error(function(){toastService.add('error',gettext('Unable to fetch the groups.'));});}
function createGroup(newGroup){return apiService.post('/api/keystone/groups/',newGroup).error(function(){toastService.add('error',gettext('Unable to create the group.'));});}
function getGroup(groupId){return apiService.get('/api/keystone/groups/'+groupId).error(function(){toastService.add('error',gettext('Unable to retrieve the group.'));});}
function editGroup(updatedGroup){var url='/api/keystone/groups/'+updatedGroup.id;return apiService.patch(url,updatedGroup).error(function(){toastService.add('error',gettext('Unable to edit the group.'));});}
function deleteGroup(groupId){return apiService.delete('/api/keystone/groups/'+groupId).error(function(){toastService.add('error',gettext('Unable to delete the group.'));});}
function deleteGroups(groupIds){return apiService.delete('/api/keystone/groups/',groupIds).error(function(){toastService.add('error',gettext('Unable to delete the groups.'));});}
function getCurrentUserSession(config){return apiService.get('/api/keystone/user-session/',config).error(function(){toastService.add('error',gettext('Unable to retrieve the current user session.'));});}
function getUser(userId){return apiService.get('/api/keystone/users/'+userId).error(function(){toastService.add('error',gettext('Unable to retrieve the user.'));});}
function editUser(updatedUser){var url='/api/keystone/users/'+updatedUser.id;return apiService.patch(url,updatedUser).error(function(){toastService.add('error',gettext('Unable to edit the user.'));});}
function deleteUser(userId){return apiService.delete('/api/keystone/users/'+userId).error(function(){toastService.add('error',gettext('Unable to delete the user.'));});}
function getRoles(){return apiService.get('/api/keystone/roles/').error(function(){toastService.add('error',gettext('Unable to retrieve the roles.'));});}
function createRole(newRole){return apiService.post('/api/keystone/roles/',newRole).error(function(){toastService.add('error',gettext('Unable to create the role.'));});}
function deleteRoles(roleIds){return apiService.delete('/api/keystone/roles/',roleIds).error(function(){toastService.add('error',gettext('Unable to delete the roles.'));});}
function getRole(roleId){return apiService.get('/api/keystone/roles/'+roleId).error(function(){toastService.add('error',gettext('Unable to retrieve the role.'));});}
function editRole(updatedRole){var url='/api/keystone/roles/'+updatedRole.id;return apiService.patch(url,updatedRole).error(function(){toastService.add('error',gettext('Unable to edit the role.'));});}
function deleteRole(roleId){return apiService.delete('/api/keystone/roles/'+roleId).error(function(){toastService.add('error',gettext('Unable to delete the role.'));});}
function getDefaultDomain(){return apiService.get('/api/keystone/default_domain/').error(function(){toastService.add('error',gettext('Unable to retrieve the default domain.'));});}
function getDomains(){return apiService.get('/api/keystone/domains/').error(function(){toastService.add('error',gettext('Unable to retrieve the domains.'));});}
function createDomain(newDomain){return apiService.post('/api/keystone/domains/',newDomain).error(function(){toastService.add('error',gettext('Unable to create the domain.'));});}
function deleteDomains(domainIds){return apiService.delete('/api/keystone/domains/',domainIds).error(function(){toastService.add('error',gettext('Unable to delete the domains.'));});}
function getDomain(domainId){return apiService.get('/api/keystone/domains/'+domainId).error(function(){toastService.add('error',gettext('Unable to retrieve the domain.'));});}
function editDomain(updatedDomain){var url='/api/keystone/domains/'+updatedDomain.id;return apiService.patch(url,updatedDomain).error(function(){toastService.add('error',gettext('Unable to edit the domain.'));});}
function deleteDomain(domainId){return apiService.delete('/api/keystone/domains/'+domainId).error(function(){toastService.add('error',gettext('Unable to delete the domain.'));});}
function getProjects(params){var config=params?{'params':params}:{};return apiService.get('/api/keystone/projects/',config).error(function(){toastService.add('error',gettext('Unable to retrieve the projects.'));});}
function createProject(newProject){return apiService.post('/api/keystone/projects/',newProject).error(function(){toastService.add('error',gettext('Unable to create the project.'));});}
function deleteProjects(projectIds){return apiService.delete('/api/keystone/projects/',projectIds).error(function(){toastService.add('error',gettext('Unable to delete the projects.'));});}
function getProject(projectId){return apiService.get('/api/keystone/projects/'+projectId).error(function(){toastService.add('error',gettext('Unable to retrieve the project.'));});}
function getProjectName(projectId){var deferred=$q.defer();service.getProject(projectId).then(onSuccess,onFailure);function onSuccess(response){deferred.resolve(response.data.name||response.data.id);}
function onFailure(message){deferred.reject(message);}
return deferred.promise;}
function editProject(updatedProject){var url='/api/keystone/projects/'+updatedProject.id;return apiService.patch(url,updatedProject).error(function(){toastService.add('error',gettext('Unable to edit the project.'));});}
function deleteProject(projectId){return apiService.delete('/api/keystone/projects/'+projectId).error(function(){toastService.add('error',gettext('Unable to delete the project.'));});}
function grantRole(projectId,roleId,userId){return apiService.put('/api/keystone/projects/'+projectId+'/'+
roleId+'/'+userId).error(function(){toastService.add('error',gettext('Unable to grant the role.'));});}
function serviceCatalog(config){return apiService.get('/api/keystone/svc-catalog/',config).error(function(){toastService.add('error',gettext('Unable to fetch the service catalog.'));});}}}());(function(){'use strict';angular.module('horizon.app.core.openstack-service-api').factory('horizon.app.core.openstack-service-api.network',networkAPI);networkAPI.$inject=['horizon.framework.util.http.service','horizon.framework.widgets.toast.service'];function networkAPI(apiService,toastService){var service={getFloatingIps:getFloatingIps,getFloatingIpPools:getFloatingIpPools,allocateFloatingIp:allocateFloatingIp,associateFloatingIp:associateFloatingIp,disassociateFloatingIp:disassociateFloatingIp};return service;function getFloatingIps(){return apiService.get('/api/network/floatingips/').error(function(){toastService.add('error',gettext('Unable to retrieve floating IPs.'));});}
function getFloatingIpPools(){return apiService.get('/api/network/floatingippools/').error(function(){toastService.add('error',gettext('Unable to retrieve floating IP pools.'));});}
function allocateFloatingIp(poolId){return apiService.post('/api/network/floatingip/',{pool_id:poolId}).error(function(){toastService.add('error',gettext('Unable to allocate new floating IP address.'));});}
function associateFloatingIp(addressId,portId){var params={address_id:addressId,port_id:portId};return apiService.patch('/api/network/floatingip/',params).error(function(){toastService.add('error',gettext('Unable to associate floating IP address.'));});}
function disassociateFloatingIp(addressId){return apiService.patch('/api/network/floatingip/',{address_id:addressId}).error(function(){toastService.add('error',gettext('Unable to disassociate floating IP address.'));});}}}());(function(){'use strict';angular.module('horizon.app.core.openstack-service-api').factory('horizon.app.core.openstack-service-api.neutronExtensions',neutronExtensionsAPI);neutronExtensionsAPI.$inject=['$cacheFactory','horizon.app.core.openstack-service-api.extensions','horizon.app.core.openstack-service-api.neutron'];function neutronExtensionsAPI($cacheFactory,extensions,neutron){return extensions({cacheFactory:$cacheFactory('horizon.app.core.openstack-service-api.neutronExtensions',{capacity:1}),serviceAPI:neutron});}}());(function(){'use strict';angular.module('horizon.app.core.openstack-service-api').factory('horizon.app.core.openstack-service-api.neutron',neutronAPI);neutronAPI.$inject=['horizon.framework.util.http.service','horizon.framework.widgets.toast.service'];function neutronAPI(apiService,toastService){var service={createNetwork:createNetwork,createSubnet:createSubnet,createTrunk:createTrunk,deleteTrunk:deleteTrunk,getAgents:getAgents,getDefaultQuotaSets:getDefaultQuotaSets,getExtensions:getExtensions,getNetworks:getNetworks,getPorts:getPorts,getQosPolicy:getQosPolicy,getQoSPolicies:getQoSPolicies,getSubnets:getSubnets,getTrunk:getTrunk,getTrunks:getTrunks,updateProjectQuota:updateProjectQuota,updateTrunk:updateTrunk};return service;function convertDatesHumanReadable(apidict){apidict.created_at=new Date(apidict.created_at);apidict.updated_at=new Date(apidict.updated_at);}
function getAgents(){return apiService.get('/api/neutron/agents/').error(function(){toastService.add('error',gettext('Unable to retrieve the agents.'));});}
function getNetworks(){return apiService.get('/api/neutron/networks/').error(function(){toastService.add('error',gettext('Unable to retrieve the networks.'));});}
function createNetwork(newNetwork){return apiService.post('/api/neutron/networks/',newNetwork).error(function(){toastService.add('error',gettext('Unable to create the network.'));});}
function getSubnets(networkId){return apiService.get('/api/neutron/subnets/',networkId).error(function(){toastService.add('error',gettext('Unable to retrieve the subnets.'));});}
function createSubnet(newSubnet){return apiService.post('/api/neutron/subnets/',newSubnet).error(function(){toastService.add('error',gettext('Unable to create the subnet.'));});}
function getPorts(params){var config=params?{'params':params}:{};return apiService.get('/api/neutron/ports/',config).error(function(){toastService.add('error',gettext('Unable to retrieve the ports.'));});}
function getExtensions(){return apiService.get('/api/neutron/extensions/').error(function(){toastService.add('error',gettext('Unable to retrieve the extensions.'));});}
function getDefaultQuotaSets(){return apiService.get('/api/neutron/quota-sets/defaults/').error(function(){toastService.add('error',gettext('Unable to retrieve the default quotas.'));});}
function updateProjectQuota(quota,projectId){var url='/api/neutron/quotas-sets/'+projectId;return apiService.patch(url,quota).error(function(){toastService.add('error',gettext('Unable to update project quota data.'));});}
function getQosPolicy(id){return apiService.get('/api/neutron/qos_policy/'+id+'/').error(function(){toastService.add('error',gettext('Unable to retrieve the qos policy.'));});}
function getQoSPolicies(){return apiService.get('/api/neutron/qos_policies/').error(function(){toastService.add('error',gettext('Unable to retrieve the qos policies.'));});}
function getTrunk(id,suppressError){var promise=apiService.get('/api/neutron/trunks/'+id+'/').success(function(trunk){convertDatesHumanReadable(trunk);});promise=suppressError?promise:promise.error(function(){var msg=gettext('Unable to retrieve the trunk with id: %(id)s');toastService.add('error',interpolate(msg,{id:id},true));});return promise;}
function getTrunks(params){var config=params?{'params':params}:{};return apiService.get('/api/neutron/trunks/',config).success(function(trunks){trunks.items.forEach(function(trunk){convertDatesHumanReadable(trunk);});}).error(function(){toastService.add('error',gettext('Unable to retrieve the trunks.'));});}
function createTrunk(newTrunk){return apiService.post('/api/neutron/trunks/',newTrunk).error(function(){toastService.add('error',gettext('Unable to create the trunk.'));});}
function deleteTrunk(trunkId,suppressError){var promise=apiService.delete('/api/neutron/trunks/'+trunkId+'/');promise=suppressError?promise:promise.error(function(){var msg=gettext('Unable to delete trunk: %(id)s');toastService.add('error',interpolate(msg,{id:trunkId},true));});return promise;}
function updateTrunk(oldTrunk,newTrunk){return apiService.patch('/api/neutron/trunks/'+oldTrunk.id+'/',[oldTrunk,newTrunk]).error(function(){toastService.add('error',gettext('Unable to update the trunk.'));});}}}());(function(){'use strict';angular.module('horizon.app.core.openstack-service-api').factory('horizon.app.core.openstack-service-api.novaExtensions',novaExtensionsAPI);novaExtensionsAPI.$inject=['$cacheFactory','horizon.app.core.openstack-service-api.extensions','horizon.app.core.openstack-service-api.nova'];function novaExtensionsAPI($cacheFactory,extensionsAPI,novaAPI){return extensionsAPI({cacheFactory:$cacheFactory('horizon.app.core.openstack-service-api.novaExtensions',{capacity:1}),serviceAPI:novaAPI});}}());(function(){'use strict';angular.module('horizon.app.core.openstack-service-api').factory('horizon.app.core.openstack-service-api.nova',novaAPI);novaAPI.$inject=['horizon.framework.util.http.service','horizon.framework.widgets.toast.service'];function novaAPI(apiService,toastService){var service={getActionList:getActionList,getConsoleLog:getConsoleLog,getConsoleInfo:getConsoleInfo,getServerVolumes:getServerVolumes,getServerSecurityGroups:getServerSecurityGroups,isFeatureSupported:isFeatureSupported,getKeypairs:getKeypairs,createKeypair:createKeypair,getKeypair:getKeypair,deleteKeypair:deleteKeypair,getAvailabilityZones:getAvailabilityZones,getLimits:getLimits,createServer:createServer,getServer:getServer,getServers:getServers,getServerGroups:getServerGroups,deleteServer:deleteServer,pauseServer:pauseServer,unpauseServer:unpauseServer,suspendServer:suspendServer,resumeServer:resumeServer,softRebootServer:softRebootServer,hardRebootServer:hardRebootServer,startServer:startServer,stopServer:stopServer,getExtensions:getExtensions,getFlavors:getFlavors,getFlavor:getFlavor,getFlavorExtraSpecs:getFlavorExtraSpecs,editFlavorExtraSpecs:editFlavorExtraSpecs,getAggregateExtraSpecs:getAggregateExtraSpecs,editAggregateExtraSpecs:editAggregateExtraSpecs,getServices:getServices,getInstanceMetadata:getInstanceMetadata,editInstanceMetadata:editInstanceMetadata,createFlavor:createFlavor,updateFlavor:updateFlavor,deleteFlavor:deleteFlavor,getDefaultQuotaSets:getDefaultQuotaSets,setDefaultQuotaSets:setDefaultQuotaSets,getEditableQuotas:getEditableQuotas,updateProjectQuota:updateProjectQuota,createServerSnapshot:createServerSnapshot};return service;function isFeatureSupported(feature){return apiService.get('/api/nova/features/'+feature).error(function(){toastService.add('error',gettext('Unable to check the Nova service feature.'));});}
function getServices(){return apiService.get('/api/nova/services/').error(function(){toastService.add('error',gettext('Unable to retrieve the nova services.'));});}
function getKeypairs(){return apiService.get('/api/nova/keypairs/').error(function(){toastService.add('error',gettext('Unable to retrieve the keypairs.'));});}
function createKeypair(newKeypair){return apiService.post('/api/nova/keypairs/',newKeypair).error(function(){if(angular.isDefined(newKeypair.public_key)){toastService.add('error',gettext('Unable to import the keypair.'));}else{toastService.add('error',gettext('Unable to create the keypair.'));}});}
function getKeypair(name){return apiService.get('/api/nova/keypairs/'+name).error(function(){toastService.add('error',gettext('Unable to retrieve the keypair.'));});}
function deleteKeypair(name,suppressError){var promise=apiService.delete('/api/nova/keypairs/'+name);return suppressError?promise:promise.error(function(){var msg=gettext('Unable to delete the keypair with name: %(name)s');toastService.add('error',interpolate(msg,{name:name},true));});}
function getAvailabilityZones(){return apiService.get('/api/nova/availzones/').error(function(){toastService.add('error',gettext('Unable to retrieve the availability zones.'));});}
function getLimits(reserved){var params={params:{reserved:reserved}};return apiService.get('/api/nova/limits/',params).error(function(){toastService.add('error',gettext('Unable to retrieve the limits.'));});}
function createServer(newServer){return apiService.post('/api/nova/servers/',newServer).error(function(){toastService.add('error',gettext('Unable to create the server.'));});}
function getServer(id){return apiService.get('/api/nova/servers/'+id).error(function(){toastService.add('error',gettext('Unable to retrieve the server.'));});}
function getServers(){return apiService.get('/api/nova/servers/').error(function(){toastService.add('error',gettext('Unable to retrieve instances.'));});}
function getServerGroups(){return apiService.get('/api/nova/servergroups/').error(function(){toastService.add('error',gettext('Unable to retrieve server groups.'));});}
function deleteServer(serverId,suppressError){var promise=apiService.delete('/api/nova/servers/'+serverId);return suppressError?promise:promise.error(function(){var msg=gettext('Unable to delete the server with id: %(id)s');toastService.add('error',interpolate(msg,{id:serverId},true));});}
function serverStateOperation(operation,serverId,suppressError,errMsg){var instruction={"operation":operation};var promise=apiService.post('/api/nova/servers/'+serverId,instruction);return suppressError?promise:promise.error(function(){toastService.add('error',interpolate(errMsg,{id:serverId},true));});}
function startServer(serverId,suppressError){return serverStateOperation('start',serverId,suppressError,gettext('Unable to start the server with id: %(id)s'));}
function pauseServer(serverId,suppressError){return serverStateOperation('pause',serverId,suppressError,gettext('Unable to pause the server with id: %(id)s'));}
function unpauseServer(serverId,suppressError){return serverStateOperation('unpause',serverId,suppressError,gettext('Unable to unpause the server with id: %(id)s'));}
function suspendServer(serverId,suppressError){return serverStateOperation('suspend',serverId,suppressError,gettext('Unable to suspend the server with id: %(id)s'));}
function resumeServer(serverId,suppressError){return serverStateOperation('resume',serverId,suppressError,gettext('Unable to resume the server with id: %(id)s'));}
function softRebootServer(serverId,suppressError){return serverStateOperation('soft_reboot',serverId,suppressError,gettext('Unable to soft-reboot the server with id: %(id)s'));}
function hardRebootServer(serverId,suppressError){return serverStateOperation('hard_reboot',serverId,suppressError,gettext('Unable to hard-reboot the server with id: %(id)s'));}
function stopServer(serverId,suppressError){return serverStateOperation('stop',serverId,suppressError,gettext('Unable to stop the server with id: %(id)s'));}
function getExtensions(config){return apiService.get('/api/nova/extensions/',config).error(function(){toastService.add('error',gettext('Unable to retrieve the extensions.'));});}
function getFlavors(params){var config=params?{'params':params}:{'params':{}};return apiService.get('/api/nova/flavors/',config).success(function(data){if(data&&data.items){data.items.map(function(item){if(item.hasOwnProperty('OS-FLV-EXT-DATA:ephemeral')){item.ephemeral=item['OS-FLV-EXT-DATA:ephemeral'];}
if(item.hasOwnProperty('OS-FLV-DISABLED:disabled')){item.disabled=item['OS-FLV-DISABLED:disabled'];}
if(item.hasOwnProperty('os-flavor-access:is_public')){item.is_public=item['os-flavor-access:is_public'];}});}}).error(function(){toastService.add('error',gettext('Unable to retrieve the flavors.'));});}
function getFlavor(id,getExtras,getAccessList){var config={'params':{}};if(getExtras){config.params.get_extras='true';}
if(getAccessList){config.params.get_access_list='true';}
return apiService.get('/api/nova/flavors/'+id+'/',config).error(function(){toastService.add('error',gettext('Unable to retrieve the flavor.'));});}
function createFlavor(flavor){return apiService.post('/api/nova/flavors/',flavor).error(function(){toastService.add('error',gettext('Unable to create the flavor.'));});}
function updateFlavor(flavor){return apiService.patch('/api/nova/flavors/'+flavor.id+'/',flavor).error(function(){toastService.add('error',gettext('Unable to update the flavor.'));});}
function deleteFlavor(flavorId,suppressError){var promise=apiService.delete('/api/nova/flavors/'+flavorId+'/');return suppressError?promise:promise.error(function(){var msg=gettext('Unable to delete the flavor with id: %(id)s');toastService.add('error',interpolate(msg,{id:flavorId},true));});}
function getFlavorExtraSpecs(id){return apiService.get('/api/nova/flavors/'+id+'/extra-specs/').error(function(){toastService.add('error',gettext('Unable to retrieve the flavor extra specs.'));});}
function editFlavorExtraSpecs(id,updated,removed){return apiService.patch('/api/nova/flavors/'+id+'/extra-specs/',{updated:updated,removed:removed}).error(function(){toastService.add('error',gettext('Unable to edit the flavor extra specs.'));});}
function getAggregateExtraSpecs(id){return apiService.get('/api/nova/aggregates/'+id+'/extra-specs/').error(function(){toastService.add('error',gettext('Unable to retrieve the aggregate extra specs.'));});}
function editAggregateExtraSpecs(id,updated,removed){return apiService.patch('/api/nova/aggregates/'+id+'/extra-specs/',{updated:updated,removed:removed}).error(function(){toastService.add('error',gettext('Unable to edit the aggregate extra specs.'));});}
function getInstanceMetadata(id){return apiService.get('/api/nova/servers/'+id+'/metadata').error(function(){toastService.add('error',gettext('Unable to retrieve instance metadata.'));});}
function editInstanceMetadata(id,updated,removed){return apiService.patch('/api/nova/servers/'+id+'/metadata',{updated:updated,removed:removed}).error(function(){toastService.add('error',gettext('Unable to edit instance metadata.'));});}
function getDefaultQuotaSets(){return apiService.get('/api/nova/quota-sets/defaults/').error(function(){toastService.add('error',gettext('Unable to retrieve the default quotas.'));});}
function setDefaultQuotaSets(quotas){return apiService.patch('/api/nova/quota-sets/defaults/',quotas).error(function(){toastService.add('error',gettext('Unable to set the default quotas.'));});}
function getEditableQuotas(){return apiService.get('/api/nova/quota-sets/editable/').error(function(){toastService.add('error',gettext('Unable to retrieve the editable quotas.'));});}
function updateProjectQuota(quota,projectId){var url='/api/nova/quota-sets/'+projectId;return apiService.patch(url,quota).error(function(){toastService.add('error',gettext('Unable to update project quota data.'));});}
function createServerSnapshot(newSnapshot){return apiService.post('/api/nova/snapshots/',newSnapshot).error(function(){toastService.add('error',gettext('Unable to create the server snapshot.'));});}
function getActionList(instanceId){return apiService.get('/api/nova/servers/'+instanceId+'/actions/').error(function(){toastService.add('error',gettext('Unable to load the server actions.'));});}
function getConsoleLog(instanceId,length){var config={};if(length){config.length=length;}
return apiService.post('/api/nova/servers/'+instanceId+'/console-output/',config).error(function(){toastService.add('error',gettext('Unable to load the server console log.'));});}
function getConsoleInfo(instanceId,type){var config={};if(type){config.console_type=type;}
return apiService.post('/api/nova/servers/'+instanceId+'/console-info/',config).error(function(){toastService.add('error',gettext('Unable to load the server console info.'));});}
function getServerVolumes(instanceId){return apiService.get('/api/nova/servers/'+instanceId+'/volumes/').error(function(){toastService.add('error',gettext('Unable to load the server volumes.'));});}
function getServerSecurityGroups(instanceId){return apiService.get('/api/nova/servers/'+instanceId+'/security-groups/').error(function(){toastService.add('error',gettext('Unable to load the server security groups.'));});}}}());(function(){'use strict';angular.module('horizon.app.core.openstack-service-api').factory('horizon.app.core.openstack-service-api.policy',PolicyService);PolicyService.$inject=['$q','horizon.framework.util.filters.$memoize','horizon.framework.util.http.service','horizon.framework.widgets.toast.service'];function PolicyService($q,memoize,apiService,toastService){var service={check:memoize(check,memoizeHasher),ifAllowed:memoize(ifAllowed,memoizeHasher)};return service;function check(policyRules){var deferred=$q.defer();apiService.post('/api/policy/',policyRules).success(function successPath(result){deferred.resolve(result);}).error(function failurePath(result){toastService.add('warning',gettext('Policy check failed.'));deferred.reject(result);});deferred.promise.success=deferred.promise.then;return deferred.promise;}
function ifAllowed(policyRules){var deferred=$q.defer();service.check(policyRules).then(success);return deferred.promise;function success(response){if(response.allowed){deferred.resolve();}else{deferred.reject();}}}
function memoizeHasher(policyRules){return angular.toJson(policyRules);}}}());(function(){'use strict';angular.module('horizon.app.core.openstack-service-api').factory('horizon.app.core.openstack-service-api.security-group',securityGroupAPI);securityGroupAPI.$inject=['horizon.framework.util.http.service','horizon.framework.widgets.toast.service'];function securityGroupAPI(apiService,toastService){var service={query:query};return service;function query(){return apiService.get('/api/network/securitygroups/').error(function(){toastService.add('error',gettext('Unable to retrieve the security groups.'));});}}}());(function(){'use strict';angular.module('horizon.app.core.openstack-service-api').factory('horizon.app.core.openstack-service-api.serviceCatalog',serviceCatalog);serviceCatalog.$inject=['$cacheFactory','$q','horizon.app.core.openstack-service-api.keystone','horizon.app.core.openstack-service-api.userSession'];function serviceCatalog($cacheFactory,$q,keystoneAPI,userSession){var service={cache:$cacheFactory('horizon.app.core.openstack-service-api.serviceCatalog',{capacity:1}),get:get,ifTypeEnabled:ifTypeEnabled};return service;function get(){return keystoneAPI.serviceCatalog({cache:service.cache}).then(onGetCatalog);}
function onGetCatalog(response){return response.data;}
function ifTypeEnabled(desiredType){var deferred=$q.defer();$q.all({session:userSession.get(),catalog:service.get()}).then(onDataLoaded,onDataFailure);function onDataLoaded(d){if(typeHasEndpointsInRegion(d.catalog,desiredType,d.session.services_region)){deferred.resolve();}else{deferred.reject(interpolate(gettext('Service type is not enabled: %(desiredType)s'),{desiredType:desiredType},true));}}
function onDataFailure(){deferred.reject(gettext('Cannot get service catalog from keystone.'));}
return deferred.promise;}
function typeHasEndpointsInRegion(catalog,desiredType,desiredRegion){var matchingSvcs=catalog.filter(function filterByType(svc){return svc.type===desiredType;});if(desiredType==='identity'&&matchingSvcs.length>0){return true;}else{return matchingSvcs.some(function matchService(svc){return svc.endpoints.some(function matchEndpoint(endpoint){return getEndpointRegion(endpoint)===desiredRegion;});});}}
function getEndpointRegion(endpoint){return endpoint.region_id||endpoint.region;}}}());(function(){'use strict';angular.module('horizon.app.core.openstack-service-api').factory('horizon.app.core.openstack-service-api.settings',settingsService);settingsService.$inject=['$q','horizon.framework.util.http.service'];function settingsService($q,apiService){var service={getSettings:getSettings,getSetting:getSetting,ifEnabled:ifEnabled};return service;function getSettings(suppressError){function onError(){var message=gettext('Unable to retrieve settings.');if(!suppressError&&horizon.toast){horizon.toast.add('error',message);}
return message;}
return apiService.get('/api/settings/',{cache:true}).error(onError).then(function(response){return response.data;});}
function getSetting(path,defaultSetting){var deferred=$q.defer();var pathElements=path.split(".");var settingAtRequestedPath;function onSettingsLoaded(settings){settingAtRequestedPath=pathElements.reduce(function(setting,nextPathElement){return setting?setting[nextPathElement]:undefined;},settings);if(angular.isUndefined(settingAtRequestedPath)&&angular.isDefined(defaultSetting)){settingAtRequestedPath=defaultSetting;}
deferred.resolve(settingAtRequestedPath);}
function onSettingsFailure(message){deferred.reject(message);}
service.getSettings().then(onSettingsLoaded,onSettingsFailure);return deferred.promise;}
function ifEnabled(setting,expected,defaultSetting){var deferred=$q.defer();expected=angular.isUndefined(expected)?true:expected;function onSettingLoaded(setting){if(angular.equals(expected,setting)){deferred.resolve();}else{deferred.reject(interpolate(gettext('Setting is not enabled: %(setting)s'),{setting:setting},true));}
deferred.resolve(setting);}
function onSettingFailure(message){deferred.reject(message);}
service.getSetting(setting,defaultSetting).then(onSettingLoaded,onSettingFailure);return deferred.promise;}}}());(function(){'use strict';angular.module('horizon.app.core.openstack-service-api').factory('horizon.app.core.openstack-service-api.swift',swiftAPI);swiftAPI.$inject=['horizon.framework.util.http.service','horizon.framework.widgets.toast.service'];function swiftAPI(apiService,toastService){var service={copyObject:copyObject,createContainer:createContainer,createFolder:createFolder,deleteContainer:deleteContainer,deleteObject:deleteObject,getContainer:getContainer,getContainers:getContainers,getInfo:getInfo,getContainerURL:getContainerURL,getObjectDetails:getObjectDetails,getObjects:getObjects,getObjectURL:getObjectURL,setContainerAccess:setContainerAccess,uploadObject:uploadObject};return service;function getContainerURL(container){return'/api/swift/containers/'+encodeURIComponent(container);}
function getObjectURL(container,object,type){var urlType=type||'object';var objectUrl=encodeURIComponent(object).replace(/%2F/g,'/');return getContainerURL(container)+'/'+urlType+'/'+objectUrl;}
function getInfo(){return apiService.get('/api/swift/info/').error(function(){toastService.add('error',gettext('Unable to get the Swift service info.'));});}
function getContainers(params){var config=params?{'params':params}:{};return apiService.get('/api/swift/containers/',config).error(function(){toastService.add('error',gettext('Unable to get the Swift container listing.'));});}
function getContainer(container,ignoreError){var promise=apiService.get(service.getContainerURL(container)+'/metadata/');if(ignoreError){return promise.error(angular.noop);}
return promise.error(function(){toastService.add('error',gettext('Unable to get the container details.'));});}
function createContainer(container,isPublic){var data={is_public:false};if(isPublic){data.is_public=true;}
return apiService.post(service.getContainerURL(container)+'/metadata/',data).error(function(response){if(response.status===409){toastService.add('error',response);}else{toastService.add('error',gettext('Unable to create the container.'));}});}
function deleteContainer(container){return apiService.delete(service.getContainerURL(container)+'/metadata/').error(function(response,status){if(status===409){toastService.add('error',response);}else{toastService.add('error',gettext('Unable to delete the container.'));}});}
function setContainerAccess(container,isPublic){var data={is_public:isPublic};return apiService.put(service.getContainerURL(container)+'/metadata/',data).error(function(){toastService.add('error',gettext('Unable to change the container access.'));});}
function getObjects(container,params){var options={};if(params){options.params=params;}
return apiService.get(service.getContainerURL(container)+'/objects/',options).error(function(){toastService.add('error',gettext('Unable to get the objects in container.'));});}
function uploadObject(container,objectName,file){return apiService.post(service.getObjectURL(container,objectName),{file:file}).error(function(){toastService.add('error',gettext('Unable to upload the object.'));});}
function deleteObject(container,objectName){return apiService.delete(service.getObjectURL(container,objectName)).error(function(response){if(response.status===409){toastService.add('error',gettext('Unable to delete the folder because it is not empty.'));}else{toastService.add('error',gettext('Unable to delete the object.'));}});}
function getObjectDetails(container,objectName,ignoreError){var promise=apiService.get(service.getObjectURL(container,objectName,'metadata'));if(ignoreError){return promise.error(angular.noop);}
return promise.error(function(){toastService.add('error',gettext('Unable to get details of the object.'));});}
function createFolder(container,folderName){return apiService.post(service.getObjectURL(container,folderName)+'/',{}).error(function(response,status){if(status===409){toastService.add('error',response);}else{toastService.add('error',gettext('Unable to create the folder.'));}});}
function copyObject(container,objectName,destContainer,destName){return apiService.post(service.getObjectURL(container,objectName,'copy'),{dest_container:destContainer,dest_name:destName}).error(function(response,status){if(status===409){toastService.add('error',response);}else{toastService.add('error',gettext('Unable to copy the object.'));}});}}}());(function(){'use strict';angular.module('horizon.app.core.openstack-service-api').factory('horizon.app.core.openstack-service-api.userSession',userSession);userSession.$inject=['$cacheFactory','$q','horizon.app.core.openstack-service-api.keystone'];function userSession($cacheFactory,$q,keystoneAPI){var service={cache:$cacheFactory('horizon.app.core.openstack-service-api.userSession',{capacity:1}),get:get,isCurrentProject:isCurrentProject};return service;function get(){return keystoneAPI.getCurrentUserSession({cache:service.cache}).then(onGetUserSession);}
function onGetUserSession(response){return response.data;}
function isCurrentProject(projectId){var deferred=$q.defer();get().then(onUserSessionGet);return deferred.promise;function onUserSessionGet(userSession){if(userSession.project_id===projectId){deferred.resolve();}else{deferred.reject();}}}}}());(function(){'use strict';angular.module('horizon.app.core.trunks').factory('horizon.app.core.trunks.actions.create.service',createService);createService.$inject=['$q','horizon.app.core.openstack-service-api.neutron','horizon.app.core.openstack-service-api.policy','horizon.app.core.openstack-service-api.userSession','horizon.app.core.trunks.actions.createWorkflow','horizon.app.core.trunks.actions.ports-extra.service','horizon.app.core.trunks.resourceType','horizon.framework.util.actions.action-result.service','horizon.framework.widgets.modal.wizard-modal.service','horizon.framework.widgets.toast.service','$location'];function createService($q,neutron,policy,userSession,createWorkflow,portsExtra,resourceType,actionResultService,wizardModalService,toast,$location){var service={perform:perform,allowed:allowed};return service;function allowed(){var fromNonAdminUrl=($location.url().indexOf('admin')===-1);var deferred=$q.defer();policy.ifAllowed({rules:[['network','create_trunk']]}).then(function(result){if(fromNonAdminUrl){deferred.resolve(result);}else{deferred.reject();}});return deferred.promise;}
function perform(){var trunk={admin_state_up:true,description:'',name:'',port_id:undefined,sub_ports:[]};return wizardModalService.modal({workflow:createWorkflow,submit:submit,data:{initTrunk:trunk,getTrunk:$q.when(trunk),getPortsWithNets:$q.all({getNetworks:neutron.getNetworks(),getPorts:userSession.get().then(function(session){return neutron.getPorts({project_id:session.project_id});})}).then(function(responses){var networks=responses.getNetworks.data.items;var ports=responses.getPorts.data.items;return portsExtra.addNetworkAndSubnetInfo(ports,networks).sort(portsExtra.cmpPortsByNameAndId);})}}).result;}
function submit(stepModels){var trunk={};var stepName,getTrunkSlice;for(stepName in stepModels.trunkSlices){if(stepModels.trunkSlices.hasOwnProperty(stepName)){getTrunkSlice=stepModels.trunkSlices[stepName];angular.extend(trunk,getTrunkSlice());}}
return neutron.createTrunk(trunk).then(onSuccess);function onSuccess(response){var trunk=response.data;toast.add('success',interpolate(gettext('Trunk %s was successfully created.'),[trunk.name]));return actionResultService.getActionResult().created(resourceType,trunk.id).result;}}}})();(function(){'use strict';angular.module('horizon.app.core.trunks').factory('horizon.app.core.trunks.actions.createWorkflow',createWorkflow);createWorkflow.$inject=['horizon.app.core.trunks.basePath','horizon.app.core.workflow.factory','horizon.framework.util.i18n.gettext'];function createWorkflow(basePath,workflowService,gettext){var workflow=workflowService({title:gettext('Create Trunk'),btnText:{finish:gettext('Create Trunk')},steps:[{title:gettext('Details'),templateUrl:basePath+'steps/trunk-details.html',helpUrl:basePath+'steps/trunk-details.help.html',formName:'detailsForm'},{title:gettext('Parent Port'),templateUrl:basePath+'steps/trunk-parent-port.html',helpUrl:basePath+'steps/trunk-parent-port.help.html',formName:'parentPortForm'},{title:gettext('Subports'),templateUrl:basePath+'steps/trunk-subports.html',helpUrl:basePath+'steps/trunk-subports.help.html',formName:'subportsForm'}]});return workflow;}})();(function(){'use strict';angular.module('horizon.app.core.trunks').factory('horizon.app.core.trunks.actions.delete.service',deleteService);deleteService.$inject=['$q','horizon.app.core.openstack-service-api.neutron','horizon.app.core.openstack-service-api.policy','horizon.app.core.trunks.resourceType','horizon.framework.util.actions.action-result.service','horizon.framework.widgets.modal.deleteModalService'];function deleteService($q,neutron,policy,resourceType,actionResultService,deleteModal){var service={allowed:allowed,perform:perform};return service;function allowed(){return policy.ifAllowed({rules:[['network','delete_trunk']]});}
function perform(items,scope){var trunks=angular.isArray(items)?items:[items];return openModal().then(onComplete);function openModal(){return deleteModal.open(scope,trunks,{labels:labelize(trunks.length),deleteEntity:neutron.deleteTrunk});}
function onComplete(result){var actionResult=actionResultService.getActionResult();result.pass.forEach(function markDeleted(item){actionResult.deleted(resourceType,item.context.id);});result.fail.forEach(function markFailed(item){actionResult.failed(resourceType,item.context.id);});return actionResult.result;}}
function labelize(count){return{title:ngettext('Confirm Delete Trunk','Confirm Delete Trunks',count),message:ngettext('You have selected "%s". Deleted Trunk is not recoverable.','You have selected "%s". Deleted Trunks are not recoverable.',count),submit:ngettext('Delete Trunk','Delete Trunks',count),success:ngettext('Deleted Trunk: %s.','Deleted Trunks: %s.',count),error:ngettext('Unable to delete Trunk: %s.','Unable to delete Trunks: %s.',count)};}}})();(function(){'use strict';angular.module('horizon.app.core.trunks').factory('horizon.app.core.trunks.actions.edit.service',editService);editService.$inject=['$q','$location','horizon.app.core.openstack-service-api.neutron','horizon.app.core.openstack-service-api.policy','horizon.app.core.openstack-service-api.userSession','horizon.app.core.trunks.actions.editWorkflow','horizon.app.core.trunks.actions.ports-extra.service','horizon.app.core.trunks.resourceType','horizon.framework.util.actions.action-result.service','horizon.framework.widgets.modal.wizard-modal.service','horizon.framework.widgets.toast.service','$rootScope'];function editService($q,$location,neutron,policy,userSession,editWorkflow,portsExtra,resourceType,actionResultService,wizardModalService,toast,$rootScope){var urlFromLocationChangeNonAdmin=true;$rootScope.$on('$locationChangeSuccess',function(event,newUrl,oldUrl){urlFromLocationChangeNonAdmin=(oldUrl.indexOf('admin')===-1);});var service={perform:perform,allowed:allowed};return service;function allowed(){var fromNonAdminUrl=($location.url().indexOf('admin')===-1);var deferred=$q.defer();policy.ifAllowed({rules:[['network','add_subports'],['network','remove_subports']]}).then(function(result){if(fromNonAdminUrl&&urlFromLocationChangeNonAdmin){deferred.resolve(result);}else{deferred.reject();}});return deferred.promise;}
function perform(selected){var params={};if(($location.url().indexOf('admin')===-1)&&urlFromLocationChangeNonAdmin){params={project_id:userSession.project_id};}
return wizardModalService.modal({workflow:editWorkflow,submit:submit,data:{initTrunk:selected,getTrunk:neutron.getTrunk(selected.id).then(function(response){return response.data;}),getPortsWithNets:$q.all({getNetworks:neutron.getNetworks(params),getPorts:neutron.getPorts(params)}).then(function(responses){var networks=responses.getNetworks.data.items;var ports=responses.getPorts.data.items;return portsExtra.addNetworkAndSubnetInfo(ports,networks).sort(portsExtra.cmpPortsByNameAndId);})}}).result;}
function submit(stepModels){var oldTrunk=stepModels.initTrunk;var trunk=angular.copy(oldTrunk);var stepName,getTrunkSlice;for(stepName in stepModels.trunkSlices){if(stepModels.trunkSlices.hasOwnProperty(stepName)){getTrunkSlice=stepModels.trunkSlices[stepName];angular.extend(trunk,getTrunkSlice());}}
return neutron.updateTrunk(oldTrunk,trunk).then(onSuccess);function onSuccess(response){var trunk=response.data;toast.add('success',interpolate(gettext('Trunk %s was successfully edited.'),[trunk.name]));return actionResultService.getActionResult().updated(resourceType,trunk.id).result;}}}})();(function(){'use strict';angular.module('horizon.app.core.trunks').factory('horizon.app.core.trunks.actions.editWorkflow',editWorkflow);editWorkflow.$inject=['horizon.app.core.trunks.basePath','horizon.app.core.workflow.factory','horizon.framework.util.i18n.gettext'];function editWorkflow(basePath,workflowService,gettext){var workflow=workflowService({title:gettext('Edit Trunk'),btnText:{finish:gettext('Edit Trunk')},steps:[{title:gettext('Details'),templateUrl:basePath+'steps/trunk-details.html',helpUrl:basePath+'steps/trunk-details.help.html',formName:'detailsForm'},{title:gettext('Subports'),templateUrl:basePath+'steps/trunk-subports.html',helpUrl:basePath+'steps/trunk-subports.help.html',formName:'subportsForm'}]});return workflow;}})();(function(){'use strict';angular.module('horizon.app.core.trunks').factory('horizon.app.core.trunks.actions.ports-extra.service',portsExtra);function portsExtra(){var service={addNetworkAndSubnetInfo:addNetworkAndSubnetInfo,cmpPortsByNameAndId:cmpPortsByNameAndId,cmpSubportsBySegmentationTypeAndId:cmpSubportsBySegmentationTypeAndId,isParentPortCandidate:isParentPortCandidate,isSubportCandidate:isSubportCandidate,isSubportOfTrunk:isSubportOfTrunk};return service;function isParentPortCandidate(port){return(port.admin_state_up&&(port.device_owner===''||port.device_owner.indexOf('compute:')===0)&&!port.trunk_details&&!port.trunk_id);}
function isSubportCandidate(port){return(port.admin_state_up&&port.device_owner===''&&!port.trunk_details&&!port.trunk_id);}
function isSubportOfTrunk(trunkId,port){return(port.trunk_id&&port.trunk_id===trunkId);}
function cmpPortsByNameAndId(a,b){return((a.name==='')-(b.name==='')||a.name.localeCompare(b.name)||a.id.localeCompare(b.id));}
function cmpSubportsBySegmentationTypeAndId(a,b){return(a.segmentation_type.localeCompare(b.segmentation_type)||(a.segmentation_id-b.segmentation_id));}
function addNetworkAndSubnetInfo(inPorts,networks){var networksDict={};networks.forEach(function(network){networksDict[network.id]=network;});var outPorts=[];inPorts.forEach(function(inPort){var network,outPort;outPort=angular.copy(inPort);if(inPort.network_id in networksDict){network=networksDict[inPort.network_id];outPort.network_name=network.name;outPort.subnet_names=getSubnetsForPort(inPort,network.subnets);}
outPorts.push(outPort);});return outPorts;}
function getSubnetsForPort(port,subnets){var subnetNames={};port.fixed_ips.forEach(function(ip){subnets.forEach(function(subnet){if(ip.subnet_id===subnet.id){subnetNames[ip.ip_address]=subnet.name;}});});return subnetNames;}}})();(function(){"use strict";angular.module('horizon.app.core.trunks').controller('TrunkOverviewController',TrunkOverviewController);TrunkOverviewController.$inject=['horizon.app.core.trunks.resourceType','horizon.framework.conf.resource-type-registry.service','horizon.app.core.openstack-service-api.userSession','$scope'];function TrunkOverviewController(trunkResourceTypeCode,registry,userSession,$scope){var ctrl=this;ctrl.resourceType=registry.getResourceType(trunkResourceTypeCode);ctrl.tableConfig={selectAll:false,expand:false,trackId:'segmentation_id',columns:[{id:'segmentation_type',title:gettext('Segmentation Type'),priority:1,sortDefault:true},{id:'segmentation_id',title:gettext('Segmentation ID'),priority:1,sortDefault:true},{id:'port_id',title:gettext('Port ID'),priority:1}]};$scope.context.loadPromise.then(onGetTrunk);function onGetTrunk(trunk){ctrl.trunk=trunk.data;userSession.get().then(setProject);function setProject(session){ctrl.projectId=session.project_id;}}}})();(function(){'use strict';angular.module('horizon.app.core.trunks.actions').controller('TrunkDetailsController',TrunkDetailsController);TrunkDetailsController.$inject=['$scope'];function TrunkDetailsController($scope){var ctrl=this;ctrl.trunkAdminStateOptions=[{label:gettext('Enabled'),value:true},{label:gettext('Disabled'),value:false}];$scope.getTrunk.then(function(trunk){ctrl.trunk={admin_state_up:trunk.admin_state_up,description:trunk.description,name:trunk.name};$scope.stepModels.trunkSlices=$scope.stepModels.trunkSlices||{};$scope.stepModels.trunkSlices.getDetails=function(){return ctrl.trunk;};$scope.stepModels.initTrunk=$scope.initTrunk;ctrl.trunkLoaded=true;});}})();(function(){'use strict';angular.module('horizon.app.core.trunks.actions').controller('TrunkParentPortController',TrunkParentPortController);TrunkParentPortController.$inject=['$scope','horizon.app.core.trunks.actions.ports-extra.service','horizon.app.core.trunks.portConstants','horizon.framework.widgets.action-list.button-tooltip.row-warning.service','horizon.framework.widgets.transfer-table.events'];function TrunkParentPortController($scope,portsExtra,portConstants,tooltipService,ttevents){var ctrl=this;var parentPortCandidates;ctrl.portStatuses=portConstants.statuses;ctrl.portAdminStates=portConstants.adminStates;ctrl.vnicTypes=portConstants.vnicTypes;ctrl.tableHelpText={allocHelpText:gettext('Select from the list of available ports below.')};ctrl.tooltipModel=tooltipService;ctrl.nameOrID=function nameOrId(data){return angular.isDefined(data.name)&&data.name!==''?data.name:data.id;};ctrl.tableLimits={maxAllocation:1};$scope.getPortsWithNets.then(function(portsWithNets){parentPortCandidates=portsWithNets.filter(portsExtra.isParentPortCandidate);ctrl.parentTables={available:parentPortCandidates,allocated:[],displayedAvailable:[],displayedAllocated:[]};$scope.stepModels.trunkSlices=$scope.stepModels.trunkSlices||{};$scope.stepModels.trunkSlices.getParentPort=function(){var trunk={port_id:$scope.initTrunk.port_id};if(ctrl.parentTables.allocated.length in[0,1]){trunk.port_id=ctrl.parentTables.allocated[0].id;}else{throw new Error('Allocating multiple parent ports is meaningless.');}
return trunk;};$scope.stepModels.allocated=$scope.stepModels.allocated||{};$scope.stepModels.allocated.parentPort=ctrl.parentTables.allocated;var deregisterAllocatedWatcher=$scope.$watchCollection('stepModels.allocated.subports',hideAllocated);$scope.$on('$destroy',function(){deregisterAllocatedWatcher();});function hideAllocated(allocatedList){if(!ctrl.portsLoaded||!allocatedList){return;}
var allocatedDict={};var availableList;allocatedList.forEach(function(port){allocatedDict[port.id]=true;});availableList=parentPortCandidates.filter(function(port){return!(port.id in allocatedDict);});ctrl.parentTables.available=availableList;$scope.$broadcast(ttevents.TABLES_CHANGED,{data:{available:availableList}});}
ctrl.portsLoaded=true;});}})();(function(){'use strict';angular.module('horizon.app.core.trunks.actions').controller('TrunkSubPortsController',TrunkSubPortsController);TrunkSubPortsController.$inject=['$scope','horizon.app.core.trunks.actions.ports-extra.service','horizon.app.core.trunks.portConstants','horizon.framework.widgets.action-list.button-tooltip.row-warning.service','horizon.framework.widgets.transfer-table.events'];function TrunkSubPortsController($scope,portsExtra,portConstants,tooltipService,ttevents){var ctrl=this;var subportCandidates;ctrl.portStatuses=portConstants.statuses;ctrl.portAdminStates=portConstants.adminStates;ctrl.vnicTypes=portConstants.vnicTypes;ctrl.tableHelpText={allocHelpText:gettext('Select from the list of available ports below.'),availHelpText:gettext('Select many')};ctrl.tooltipModel=tooltipService;ctrl.nameOrID=function nameOrId(data){return angular.isDefined(data.name)&&data.name!==''?data.name:data.id;};ctrl.tableLimits={maxAllocation:-1};ctrl.segmentationTypesDict={'vlan':[1,4094],'inherit':null};ctrl.segmentationTypes=Object.keys(ctrl.segmentationTypesDict);ctrl.subportsDetails={};$scope.getTrunk.then(function(trunk){trunk.sub_ports.forEach(function(subport){ctrl.subportsDetails[subport.port_id]={segmentation_type:subport.segmentation_type,segmentation_id:subport.segmentation_id};});ctrl.trunkLoaded=true;});$scope.getPortsWithNets.then(function(portsWithNets){var subportsOfInitTrunk=portsWithNets.filter(portsExtra.isSubportOfTrunk.bind(null,$scope.initTrunk.id));subportCandidates=portsWithNets.filter(portsExtra.isSubportCandidate);ctrl.subportsTables={available:[].concat(subportsOfInitTrunk,subportCandidates),allocated:[].concat(subportsOfInitTrunk),displayedAvailable:[],displayedAllocated:[]};$scope.stepModels.trunkSlices=$scope.stepModels.trunkSlices||{};$scope.stepModels.trunkSlices.getSubports=function(){var trunk={sub_ports:[]};ctrl.subportsTables.allocated.forEach(function(port){if(port.id in ctrl.subportsDetails){trunk.sub_ports.push({port_id:port.id,segmentation_id:ctrl.subportsDetails[port.id].segmentation_id,segmentation_type:ctrl.subportsDetails[port.id].segmentation_type});}});return trunk;};$scope.stepModels.allocated=$scope.stepModels.allocated||{};$scope.stepModels.allocated.subports=ctrl.subportsTables.allocated;var deregisterAllocatedWatcher=$scope.$watchCollection('stepModels.allocated.parentPort',hideAllocated);$scope.$on('$destroy',function(){deregisterAllocatedWatcher();});function hideAllocated(allocatedList){if(!ctrl.portsLoaded||!allocatedList){return;}
var allocatedDict={};var availableList;allocatedList.forEach(function(port){allocatedDict[port.id]=true;});availableList=subportCandidates.filter(function(port){return!(port.id in allocatedDict);});ctrl.subportsTables.available=availableList;$scope.$broadcast(ttevents.TABLES_CHANGED,{data:{available:availableList}});}
ctrl.portsLoaded=true;});}})();(function(){"use strict";angular.module('horizon.app.core.trunks').factory('horizon.app.core.trunks.service',trunksService);trunksService.$inject=['horizon.app.core.openstack-service-api.neutron','horizon.app.core.openstack-service-api.userSession','horizon.app.core.detailRoute','$location','$window'];function trunksService(neutron,userSession,detailRoute,$location,$window){return{getDetailsPath:getDetailsPath,getTrunksPromise:getTrunksPromise,getTrunkPromise:getTrunkPromise};function getDetailsPath(item){return detailRoute+'OS::Neutron::Trunk/'+item.id;}
function getTrunksPromise(params){return userSession.get().then(getTrunksForProject);function getTrunksForProject(userSession){var locationURLNotAdmin=($location.url().indexOf('admin')===-1);if(locationURLNotAdmin){params.project_id=userSession.project_id;}else{delete params.project_id;}
return neutron.getTrunks(params).then(addTrackBy);}
function addTrackBy(response){return{data:{items:response.data.items.map(function(trunk){trunk.trackBy=[trunk.id,trunk.revision_number,trunk.updated_at.toISOString()].join('/');return trunk;})}};}}
function getTrunkPromise(identifier){return neutron.getTrunk(identifier).catch(getTrunkError);function getTrunkError(trunk){$window.history.back();return trunk;}}}})();(function(){'use strict';var forEach=angular.forEach;angular.module('horizon.app.core.workflow').factory('horizon.app.core.workflow.decorator',dashboardWorkflowDecorator);dashboardWorkflowDecorator.$inject=['$q','horizon.app.core.openstack-service-api.serviceCatalog','horizon.app.core.openstack-service-api.policy','horizon.app.core.openstack-service-api.settings','horizon.app.core.openstack-service-api.novaExtensions'];function dashboardWorkflowDecorator($q,serviceCatalog,policy,settings,novaExtensions){return decorator;function decorator(spec){decorate(spec);return spec;}
function decorate(spec){forEach(spec.steps,decorateStep);}
function decorateStep(step){var promises=[];var types=step.requiredServiceTypes;if(types&&types.length>0){promises=promises.concat(types.map(function checkServiceEnabled(type){return serviceCatalog.ifTypeEnabled(type);}));}
if(step.policy){promises.push(policy.ifAllowed(step.policy));}
if(step.setting){promises.push(settings.ifEnabled(step.setting,true,true));}
if(step.novaExtension){promises.push(novaExtensions.ifNameEnabled(step.novaExtension));}
if(promises.length>0){step.checkReadiness=function(){return $q.all(promises);};}}}})();(function(){'use strict';angular.module('horizon.app.core.workflow').factory('horizon.app.core.workflow.factory',dashboardWorkflow);dashboardWorkflow.$inject=['horizon.framework.util.workflow.service','horizon.app.core.workflow.decorator'];function dashboardWorkflow(workflow,dashboardWorkflowDecorator){var decorators=[dashboardWorkflowDecorator];return function(spec){return workflow(spec,decorators);};}})();(function(){'use strict';angular.module('horizon.app').controller('RedirectController',RedirectController);RedirectController.$inject=['$window','$location','horizon.framework.util.i18n.gettext','horizon.framework.widgets.modal-wait-spinner.service'];function RedirectController($window,$location,gettext,waitSpinnerService){waitSpinnerService.showModalSpinner(gettext('Loading'));$window.location.href=$location.absUrl();}}());(function(){'use strict';angular.module('horizon.app.tech-debt').controller('hzNamespaceResourceTypeFormController',hzNamespaceResourceTypeFormController);hzNamespaceResourceTypeFormController.$inject=['$window'];function hzNamespaceResourceTypeFormController($window){var ctrl=this;ctrl.resource_types=$window.resource_types;ctrl.saveResourceTypes=function(){ctrl.resource_types=angular.toJson(ctrl.resource_types);};}})();(function(){'use strict';angular.module('horizon.app.tech-debt').controller('ImageFormController',ImageFormController);function ImageFormController(){var ctrl=this;ctrl.copyFrom=angular.element('#id_image_url').val();ctrl.diskFormat=angular.element('#id_disk_format option:selected').val();ctrl.selectImageFormat=function(path){if(!path){return;}
var format=path.substr(path.lastIndexOf(".")+1).toLowerCase().replace(/[^a-z0-9]+/gi,"");if($('#id_disk_format').find('[value='+format+']').length!==0){ctrl.diskFormat=format;}else{ctrl.diskFormat="";}};}})();(function(){'use strict';angular.module('horizon.dashboard.project.containers',['ngRoute','horizon.framework','horizon.app.core.openstack-service-api']).constant('horizon.dashboard.project.containers.account.resourceType','OS::Swift::Account').constant('horizon.dashboard.project.containers.container.resourceType','OS::Swift::Container').constant('horizon.dashboard.project.containers.object.resourceType','OS::Swift::Object').config(config).run(run);config.$inject=['$provide','$routeProvider','$windowProvider'];function config($provide,$routeProvider,$windowProvider){var path=$windowProvider.$get().STATIC_URL+'dashboard/project/containers/';$provide.constant('horizon.dashboard.project.containers.basePath',path);var baseRoute='project/containers/';$provide.constant('horizon.dashboard.project.containers.baseRoute',baseRoute);var containerRoute=baseRoute+'container/';$provide.constant('horizon.dashboard.project.containers.containerRoute',containerRoute);$routeProvider.when('/'+baseRoute,{templateUrl:path+'select-container.html'}).when('/'+containerRoute,{templateUrl:path+'select-container.html'}).when('/'+containerRoute+':container',{templateUrl:path+'objects.html'}).when('/'+containerRoute+':container/:folder*',{templateUrl:path+'objects.html'});}
run.$inject=['horizon.dashboard.project.containers.account.resourceType','horizon.dashboard.project.containers.container.resourceType','horizon.dashboard.project.containers.object.resourceType','horizon.framework.conf.resource-type-registry.service'];function run(accountResCode,containerResCode,objectResCode,registryService){registryService.getResourceType(accountResCode).setNames(gettext('Swift Account'),gettext('Swift Accounts'));registryService.getResourceType(containerResCode).setNames(gettext('Swift Container'),gettext('Swift Containers'));var objectResourceType=registryService.getResourceType(objectResCode);objectResourceType.setNames(gettext('Object'),gettext('Objects')).setProperty('name',{label:gettext('Name')}).setProperty('size',{label:gettext('Size')});objectResourceType.tableColumns.append({id:'name',priority:1,sortDefault:true,template:'<a ng-if="item.is_subdir" ng-href="{$ table.objectURL(item) $}">'+'{$ item.name $}</a><span ng-if="item.is_object">{$ item.name $}</span>'}).append({id:'bytes',priority:1,title:gettext('Size'),template:'<span ng-if="item.is_object">{$item.bytes | bytes$}</span>'+'<span ng-if="item.is_subdir" translate>Folder</span>'});objectResourceType.filterFacets.append({label:gettext('Name'),name:'name',singleton:true});}})();(function(){'use strict';angular.module('horizon.dashboard.project',['horizon.dashboard.project.containers','horizon.dashboard.project.workflow']).config(config);config.$inject=['$provide','$windowProvider'];function config($provide,$windowProvider){var path=$windowProvider.$get().STATIC_URL+'dashboard/project/';$provide.constant('horizon.dashboard.project.basePath',path);}})();(function(){'use strict';angular.module('horizon.dashboard.project.workflow.launch-instance',[]).config(config).constant('horizon.dashboard.project.workflow.launch-instance.modal-spec',{backdrop:'static',size:'lg',controller:'ModalContainerController',template:'<wizard class="wizard" ng-controller="LaunchInstanceWizardController"></wizard>'}).constant('horizon.dashboard.project.workflow.launch-instance.boot-source-types',{IMAGE:'image',INSTANCE_SNAPSHOT:'snapshot',VOLUME:'volume',VOLUME_SNAPSHOT:'volume_snapshot',NON_BOOTABLE_IMAGE_TYPES:['aki','ari']}).constant('horizon.dashboard.project.workflow.launch-instance.non_bootable_image_types',['aki','ari']).constant('horizon.dashboard.project.workflow.launch-instance.step-policy',{schedulerHints:{rules:[['compute','os_compute_api:os-scheduler-hints:discoverable']]},serverGroups:{rules:[['compute','os_compute_api:os-server-groups:discoverable']]}}).filter('diskFormat',diskFormat);config.$inject=['$provide','$windowProvider'];function config($provide,$windowProvider){var path=$windowProvider.$get().STATIC_URL+'dashboard/project/workflow/launch-instance/';$provide.constant('horizon.dashboard.project.workflow.launch-instance.basePath',path);}
function diskFormat(){return filter;function filter(input){if(input===null||!angular.isObject(input)||angular.isUndefined(input.disk_format)||input.disk_format===null){return'';}else{var diskFormat=input.disk_format;var containerFormat=input.container_format;return containerFormat==='docker'&&diskFormat==='raw'?'docker':diskFormat;}}}})();(function(){'use strict';angular.module('horizon.dashboard.project.workflow',['horizon.dashboard.project.workflow.launch-instance']);})();(function(){'use strict';var push=Array.prototype.push;angular.module('horizon.dashboard.project.containers').factory('horizon.dashboard.project.containers.containers-model',ContainersModel);ContainersModel.$inject=['horizon.app.core.openstack-service-api.swift','horizon.framework.util.http.service','$q'];function ContainersModel(swiftAPI,apiService,$q){var model={info:{},containers:[],container:null,objects:[],folder:'',pseudo_folder_hierarchy:[],DELIMETER:'/',initialize:initialize,selectContainer:selectContainer,fullPath:fullPath,fetchContainerDetail:fetchContainerDetail,deleteObject:deleteObject,updateContainer:updateContainer,recursiveCollect:recursiveCollect,recursiveDelete:recursiveDelete,getContainers:getContainers,_recursiveDeleteFiles:recursiveDeleteFiles,_recursiveDeleteFolders:recursiveDeleteFolders};model.intialiseDeferred=$q.defer();model.getContainersDeferred=$q.defer();return model;function initialize(){$q.all([swiftAPI.getContainers().then(function onContainers(data){model.containers.length=0;push.apply(model.containers,data.data.items);}),swiftAPI.getInfo().then(function onInfo(data){model.swift_info=data.info;})]).then(function resolve(){model.intialiseDeferred.resolve();});}
function selectContainer(name,folder){for(var i=0;i<model.containers.length;i++){if(model.containers[i].name===name){model.container=model.containers[i];break;}}
model.objects.length=0;model.pseudo_folder_hierarchy.length=0;model.folder=folder;var spec={delimiter:model.DELIMETER};if(folder){spec.path=encodeURIComponent(folder)+model.DELIMETER;}
return swiftAPI.getObjects(name,spec).then(function onObjects(response){push.apply(model.objects,response.data.items);angular.forEach(model.objects,function setId(object){object.url=swiftAPI.getObjectURL(name,model.fullPath(object.name));});if(folder){push.apply(model.pseudo_folder_hierarchy,folder.split(model.DELIMETER)||[folder]);}});}
function fullPath(name){if(model.folder){return model.folder+model.DELIMETER+name;}
return name;}
function updateContainer(){return model.fetchContainerDetail(model.container,true);}
function fetchContainerDetail(container,force){if(container.is_fetched&&!force){var deferred=$q.defer();deferred.resolve();return deferred.promise;}
return swiftAPI.getContainer(container.name).then(function success(response){angular.extend(container,response.data);container.bytes=parseInt(container.container_bytes_used,10);container.count=parseInt(container.container_object_count,10);container.is_fetched=true;var milliseconds=Date.parse(container.timestamp);if(!isNaN(milliseconds)){container.timestamp=new Date(milliseconds);}});}
function deleteObject(object){var path=model.fullPath(object.name);if(object.is_subdir){path+=model.DELIMETER;}
return swiftAPI.deleteObject(model.container.name,path).then(function success(){for(var i=model.objects.length-1;i>=0;i--){if(model.objects[i].name===object.name){model.objects.splice(i,1);}}});}
function recursiveCollect(state,items,result){return $q.all(items.map(function each(item){if(item.is_object){state.counted.files++;result.push(item.path);return null;}else{var folder={folder:item.path,tree:[]};if(state.cancel){return null;}
result.push(folder);state.counted.folders++;var spec={delimiter:model.DELIMETER,path:encodeURIComponent(item.path).replace(/%2F/g,'/')};return swiftAPI.getObjects(model.container.name,spec).then(function objects(response){return recursiveCollect(state,response.data.items,folder.tree);});}}));}
function recursiveDelete(state,node){return model._recursiveDeleteFiles(state,node).then(function(){return model._recursiveDeleteFolders(state,node);});}
function recursiveDeleteFiles(state,node){if(angular.isObject(node)){return $q.all(node.tree.map(function each(subnode){return recursiveDeleteFiles(state,subnode);}));}else{return swiftAPI.deleteObject(model.container.name,node).then(function done(){state.deleted.files++;});}}
function recursiveDeleteFolders(state,node){if(!angular.isObject(node)){return null;}
if(!node.tree.length){return deleteFolder(node.folder);}
function deleteFolder(folderName){if(angular.isUndefined(folderName)){return null;}
var path=folderName+model.DELIMETER;var url=swiftAPI.getObjectURL(model.container.name,path);return apiService.delete(url).then(done,fail);function done(){state.deleted.folders++;}
function fail(response){if(response.status===404){done();}else{state.deleted.failures++;}}}
return $q.all(node.tree.map(function each(subnode){return recursiveDeleteFolders(state,subnode);})).then(function then(){return deleteFolder(node.folder);});}
function getContainers(params){swiftAPI.getContainers(params).then(function onContainers(data){model.containers.length=0;push.apply(model.containers,data.data.items);}).then(function resolve(){model.getContainersDeferred.resolve();});}}})();(function(){'use strict';angular.module('horizon.dashboard.project.containers').controller('horizon.dashboard.project.containers.ContainersController',ContainersController);ContainersController.$inject=['horizon.app.core.openstack-service-api.swift','horizon.dashboard.project.containers.containers-model','horizon.dashboard.project.containers.basePath','horizon.dashboard.project.containers.baseRoute','horizon.dashboard.project.containers.containerRoute','horizon.framework.widgets.form.ModalFormService','horizon.framework.widgets.modal.simple-modal.service','horizon.framework.widgets.toast.service','horizon.framework.widgets.magic-search.events','horizon.framework.widgets.magic-search.service','$scope','$location','$q'];function ContainersController(swiftAPI,containersModel,basePath,baseRoute,containerRoute,modalFormService,simpleModalService,toastService,magicSearchEvents,magicSearchService,$scope,$location,$q){var ctrl=this;ctrl.model=containersModel;ctrl.model.initialize();ctrl.baseRoute=baseRoute;ctrl.containerRoute=containerRoute;ctrl.filterFacets=[{name:'prefix',label:gettext('Prefix'),singleton:true,isServer:true}];ctrl.filterEventTrigeredBySearchBar=true;ctrl.checkContainerNameConflict=checkContainerNameConflict;ctrl.toggleAccess=toggleAccess;ctrl.deleteContainer=deleteContainer;ctrl.deleteContainerAction=deleteContainerAction;ctrl.createContainer=createContainer;ctrl.createContainerAction=createContainerAction;ctrl.selectContainer=selectContainer;function checkContainerNameConflict(containerName){if(!containerName){return $q.when();}
var def=$q.defer();swiftAPI.getContainer(containerName,true).then(def.reject,def.resolve);return def.promise;}
function selectContainer(container){if(!ctrl.model.container||container.name!==ctrl.model.container.name){ctrl.filterEventTrigeredBySearchBar=false;}
ctrl.model.container=container;$location.path(ctrl.containerRoute+container.name);return ctrl.model.fetchContainerDetail(container);}
function toggleAccess(container){swiftAPI.setContainerAccess(container.name,container.is_public).then(function updated(){var access='private';if(container.is_public){access='public';}
toastService.add('success',interpolate(gettext('Container %(name)s is now %(access)s.'),{name:container.name,access:access},true));ctrl.model.fetchContainerDetail(container,true);},function failure(){container.is_public=!container.is_public;});}
function deleteContainer(container){var options={title:gettext('Confirm Delete'),body:interpolate(gettext('Are you sure you want to delete container %(name)s?'),container,true),submit:gettext('Delete'),cancel:gettext('Cancel'),confirmCssClass:"btn-danger"};simpleModalService.modal(options).result.then(function confirmed(){return ctrl.deleteContainerAction(container);});}
function deleteContainerAction(container){swiftAPI.deleteContainer(container.name).then(function deleted(){toastService.add('success',interpolate(gettext('Container %(name)s deleted.'),container,true));for(var i=ctrl.model.containers.length-1;i>=0;i--){if(ctrl.model.containers[i].name===container.name){ctrl.model.containers.splice(i,1);break;}}
if(ctrl.model.container.name===container.name){$location.path(ctrl.baseRoute);}});}
var createContainerSchema={type:'object',properties:{name:{title:gettext('Container Name'),type:'string',pattern:'^[^/]+$',description:gettext('Container name must not contain "/".')},public:{title:gettext('Container Access'),type:'boolean',default:false,description:gettext('A Public Container will allow anyone with the Public URL to '+'gain access to your objects in the container.')}},required:['name']};var createContainerForm=[{type:'section',htmlClass:'row',items:[{type:'section',htmlClass:'col-sm-6',items:[{key:'name',validationMessage:{exists:gettext('A container with that name exists.')},$asyncValidators:{exists:checkContainerNameConflict}},{key:'public',type:'radiobuttons',disableSuccessState:true,titleMap:[{value:true,name:gettext('Public')},{value:false,name:gettext('Not public')}]}]},{type:'template',templateUrl:basePath+'create-container.help.html'}]}];function createContainer(){var model={name:'',public:false};var config={title:gettext('Create Container'),schema:createContainerSchema,form:createContainerForm,model:model};return modalFormService.open(config).then(function then(){return ctrl.createContainerAction(model);});}
function createContainerAction(model){return swiftAPI.createContainer(model.name,model.public).then(function success(){toastService.add('success',interpolate(gettext('Container %(name)s created.'),model,true));ctrl.model.containers.push({name:model.name,count:0,bytes:0});});}
$scope.$on(magicSearchEvents.SEARCH_UPDATED,function(event,data){if(ctrl.filterEventTrigeredBySearchBar){ctrl.model.getContainers(magicSearchService.getQueryObject(data));}
else{ctrl.filterEventTrigeredBySearchBar=true;}});}})();(function(){'use strict';angular.module('horizon.dashboard.project.containers').controller('DeleteObjectsModalController',DeleteObjectsModalController);DeleteObjectsModalController.$inject=['horizon.dashboard.project.containers.containers-model','selected','$uibModalInstance'];function DeleteObjectsModalController(model,selected,$uibModalInstance){var ctrl=this;ctrl.model={container:model.container,collection:[],counted:{files:0,folders:0},deleted:{files:0,folders:0,failures:0},mode:'discovery',running:true,cancel:false};model.recursiveCollect(ctrl.model,selected,ctrl.model.collection).then(function complete(){ctrl.model.running=false;});ctrl.dismiss=function dismiss(){ctrl.model.cancel=true;$uibModalInstance.dismiss();};ctrl.action=function action(){if(ctrl.model.mode==='discovery'){ctrl.model.mode='deletion';ctrl.model.running=true;return model.recursiveDelete(ctrl.model,{tree:ctrl.model.collection}).then(function done(){ctrl.model.running=false;});}else{$uibModalInstance.close();}};}}());(function(){'use strict';angular.module('horizon.dashboard.project.containers').controller('horizon.dashboard.project.containers.EditObjectModalController',EditObjectModalController);EditObjectModalController.$inject=['fileDetails'];function EditObjectModalController(fileDetails){var ctrl=this;ctrl.model={container:fileDetails.container,path:fileDetails.path,view_file:null,edit_file:null};ctrl.changeFile=changeFile;function changeFile(files){if(files.length){ctrl.model.edit_file=files[0];}}}})();(function(){'use strict';angular.module('horizon.dashboard.project.containers').directive('onFileChange',OnFileChange);OnFileChange.$inject=[];function OnFileChange(){return{restrict:'A',require:'ngModel',link:function link(scope,element,attrs,ngModel){var onFileChangeHandler=scope.$eval(attrs.onFileChange);element.on('change',function change(event){onFileChangeHandler(event.target.files);scope.$apply(function expression(){var files=event.target.files;var filename=files&&files.length>0?files[0].name:null;ngModel.$setViewValue(filename);ngModel.$render();});});}};}})();(function(){'use strict';angular.module('horizon.dashboard.project.containers').directive('objectNameExists',ObjectNameExists);ObjectNameExists.$inject=['horizon.app.core.openstack-service-api.swift','horizon.dashboard.project.containers.containers-model','$q'];function ObjectNameExists(swiftAPI,model,$q){return{restrict:'A',require:'ngModel',link:function(scope,element,attrs,ngModel){ngModel.$asyncValidators.exists=function exists(modelValue){if(ngModel.$isEmpty(modelValue)){return $q.when();}
var def=$q.defer();swiftAPI.getObjectDetails(model.container.name,model.fullPath(modelValue),true).then(def.reject,def.resolve);return def.promise;};}};}})();(function(){'use strict';angular.module('horizon.dashboard.project.containers').factory('horizon.dashboard.project.containers.objects-batch-actions.create-folder',createFolderService).factory('horizon.dashboard.project.containers.objects-batch-actions.delete',deleteService).factory('horizon.dashboard.project.containers.objects-batch-actions.upload',uploadService).run(registerActions);registerActions.$inject=['horizon.framework.conf.resource-type-registry.service','horizon.dashboard.project.containers.object.resourceType','horizon.dashboard.project.containers.objects-batch-actions.create-folder','horizon.dashboard.project.containers.objects-batch-actions.delete','horizon.dashboard.project.containers.objects-batch-actions.upload'];function registerActions(registryService,objectResCode,createFolderService,deleteService,uploadService){registryService.getResourceType(objectResCode).batchActions.append({service:uploadService,template:{text:'<span class="fa fa-upload"></span>'}}).append({service:createFolderService,template:{text:'<span class="fa fa-plus"></span>&nbsp;'+gettext('Folder')}}).append({service:deleteService,template:{text:'',type:'delete-selected'}});}
function uploadModal(html,$uibModal){var localSpec={backdrop:'static',controller:'horizon.dashboard.project.containers.UploadObjectModalController as ctrl',templateUrl:html};return $uibModal.open(localSpec).result;}
uploadService.$inject=['horizon.app.core.openstack-service-api.swift','horizon.dashboard.project.containers.basePath','horizon.dashboard.project.containers.containers-model','horizon.framework.util.q.extensions','horizon.framework.widgets.modal-wait-spinner.service','horizon.framework.widgets.toast.service','$uibModal'];function uploadService(swiftAPI,basePath,model,$qExtensions,modalWaitSpinnerService,toastService,$uibModal){var service={allowed:function allowed(){return $qExtensions.booleanAsPromise(true);},perform:function perform(){uploadModal(basePath+'upload-object-modal.html',$uibModal).then(service.uploadObjectCallback);},uploadObjectCallback:uploadObjectCallback};return service;function uploadObjectCallback(uploadInfo){modalWaitSpinnerService.showModalSpinner(gettext("Uploading"));swiftAPI.uploadObject(model.container.name,model.fullPath(uploadInfo.name),uploadInfo.upload_file).then(function success(){modalWaitSpinnerService.hideModalSpinner();toastService.add('success',interpolate(gettext('File %(name)s uploaded.'),uploadInfo,true));model.updateContainer();model.selectContainer(model.container.name,model.folder);},function error(){modalWaitSpinnerService.hideModalSpinner();});}}
createFolderService.$inject=['horizon.app.core.openstack-service-api.swift','horizon.dashboard.project.containers.basePath','horizon.dashboard.project.containers.containers-model','horizon.framework.util.q.extensions','horizon.framework.widgets.toast.service','$uibModal'];function createFolderService(swiftAPI,basePath,model,$qExtensions,toastService,$uibModal){var service={allowed:function allowed(){return $qExtensions.booleanAsPromise(true);},perform:function perform(){uploadModal(basePath+'create-folder-modal.html',$uibModal).then(service.createFolderCallback);},createFolderCallback:createFolderCallback};return service;function createFolderCallback(name){swiftAPI.createFolder(model.container.name,model.fullPath(name)).then(function success(){toastService.add('success',interpolate(gettext('Folder %(name)s created.'),{name:name},true));model.updateContainer();model.selectContainer(model.container.name,model.folder);});}}
deleteService.$inject=['horizon.dashboard.project.containers.basePath','horizon.framework.util.actions.action-result.service','horizon.framework.util.q.extensions','$uibModal'];function deleteService(basePath,actionResultService,$qExtensions,$uibModal){return{allowed:function allowed(){return $qExtensions.booleanAsPromise(true);},perform:function perform(files){var localSpec={backdrop:'static',controller:'DeleteObjectsModalController as ctrl',templateUrl:basePath+'delete-objects-modal.html',resolve:{selected:function(){return files;}}};return $uibModal.open(localSpec).result.then(function finished(){return actionResultService.getActionResult().deleted('OS::Swift::Object','DELETED').result;});}};}})();(function(){'use strict';angular.module('horizon.dashboard.project.containers').factory('horizon.dashboard.project.containers.objects-actions.delete',deleteService).factory('horizon.dashboard.project.containers.objects-actions.download',downloadService).factory('horizon.dashboard.project.containers.objects-actions.edit',editService).factory('horizon.dashboard.project.containers.objects-actions.view',viewService).run(registerActions);registerActions.$inject=['horizon.framework.conf.resource-type-registry.service','horizon.dashboard.project.containers.object.resourceType','horizon.dashboard.project.containers.objects-actions.delete','horizon.dashboard.project.containers.objects-actions.download','horizon.dashboard.project.containers.objects-actions.edit','horizon.dashboard.project.containers.objects-actions.view','horizon.framework.util.i18n.gettext'];function registerActions(registryService,objectResCode,deleteService,downloadService,editService,viewService,gettext){registryService.getResourceType(objectResCode).itemActions.append({service:downloadService,template:{text:gettext('Download')}}).append({service:viewService,template:{text:gettext('View Details')}}).append({service:editService,template:{text:gettext('Edit')}}).append({service:deleteService,template:{text:gettext('Delete'),type:'delete'}});}
downloadService.$inject=['horizon.framework.util.q.extensions','$window'];function downloadService($qExtensions,$window){return{allowed:allowed,perform:perform};function allowed(file){return $qExtensions.booleanAsPromise(file.is_object);}
function perform(file){$window.location.href=file.url.replace(/^\//,'');}}
viewService.$inject=['horizon.app.core.openstack-service-api.swift','horizon.dashboard.project.containers.basePath','horizon.dashboard.project.containers.containers-model','horizon.framework.util.q.extensions','$uibModal'];function viewService(swiftAPI,basePath,model,$qExtensions,$uibModal){return{allowed:allowed,perform:perform};function allowed(file){return $qExtensions.booleanAsPromise(file.is_object);}
function perform(file){var objectPromise=swiftAPI.getObjectDetails(model.container.name,model.fullPath(file.name)).then(function received(response){return response.data;});var localSpec={backdrop:'static',controller:'SimpleModalController as ctrl',templateUrl:basePath+'object-details-modal.html',resolve:{context:function context(){return objectPromise;}}};$uibModal.open(localSpec);}}
editService.$inject=['horizon.app.core.openstack-service-api.swift','horizon.dashboard.project.containers.basePath','horizon.dashboard.project.containers.containers-model','horizon.framework.util.q.extensions','horizon.framework.widgets.modal-wait-spinner.service','horizon.framework.widgets.toast.service','$uibModal'];function editService(swiftAPI,basePath,model,$qExtensions,modalWaitSpinnerService,toastService,$uibModal){return{allowed:allowed,perform:perform};function allowed(file){return $qExtensions.booleanAsPromise(file.is_object);}
function perform(file){var localSpec={backdrop:'static',controller:'horizon.dashboard.project.containers.EditObjectModalController as ctrl',templateUrl:basePath+'edit-object-modal.html',resolve:{fileDetails:function fileDetails(){return{path:file.path,container:model.container.name};}}};return $uibModal.open(localSpec).result.then(editObjectCallback);}
function editObjectCallback(uploadInfo){modalWaitSpinnerService.showModalSpinner(gettext("Uploading"));swiftAPI.uploadObject(model.container.name,uploadInfo.path,uploadInfo.edit_file).then(success,error);function success(){modalWaitSpinnerService.hideModalSpinner();toastService.add('success',interpolate(gettext('File %(path)s uploaded.'),uploadInfo,true));model.updateContainer();model.selectContainer(model.container.name,model.folder);}
function error(){modalWaitSpinnerService.hideModalSpinner();}}}
deleteService.$inject=['horizon.dashboard.project.containers.basePath','horizon.framework.util.actions.action-result.service','horizon.framework.util.q.extensions','$uibModal'];function deleteService(basePath,actionResultService,$qExtensions,$uibModal){return{allowed:allowed,perform:perform};function allowed(){return $qExtensions.booleanAsPromise(true);}
function perform(file){var localSpec={backdrop:'static',controller:'DeleteObjectsModalController as ctrl',templateUrl:basePath+'delete-objects-modal.html',resolve:{selected:function(){return[file];}}};return $uibModal.open(localSpec).result.then(function finished(){return actionResultService.getActionResult().deleted('OS::Swift::Object',file.name).result;});}}})();(function(){'use strict';angular.module('horizon.dashboard.project.containers').controller('horizon.dashboard.project.containers.ObjectsController',ObjectsController);ObjectsController.$inject=['horizon.framework.conf.resource-type-registry.service','horizon.dashboard.project.containers.containers-model','horizon.dashboard.project.containers.containerRoute','horizon.dashboard.project.containers.object.resourceType','horizon.framework.widgets.table.events','$q','$routeParams','$scope'];function ObjectsController(registryService,containersModel,containerRoute,objectResCode,hzTableEvents,$q,$routeParams,$scope){var ctrl=this;var objectResourceType=registryService.getResourceType(objectResCode);ctrl.rowActions=objectResourceType.itemActions;ctrl.batchActions=objectResourceType.batchActions;ctrl.model=containersModel;ctrl.numSelected=0;ctrl.containerURL=containerRoute+encodeURIComponent($routeParams.container)+
ctrl.model.DELIMETER;if(angular.isDefined($routeParams.folder)){ctrl.currentURL=ctrl.containerURL+encodeURIComponent($routeParams.folder)+
ctrl.model.DELIMETER;}else{ctrl.currentURL=ctrl.containerURL;}
ctrl.breadcrumbs=[];ctrl.model.intialiseDeferred.promise.then(function afterInitialise(){ctrl.model.selectContainer($routeParams.container,$routeParams.folder).then(function then(){ctrl.breadcrumbs=ctrl.getBreadcrumbs();});});ctrl.filterFacets=objectResourceType.filterFacets;ctrl.tableConfig={selectAll:true,expand:false,trackId:'path',columns:objectResourceType.getTableColumns()};ctrl.getBreadcrumbs=getBreadcrumbs;ctrl.objectURL=objectURL;ctrl.actionResultHandler=function actionResultHandler(returnValue){return $q.when(returnValue,actionSuccessHandler);};function getBreadcrumbs(){var crumbs=[];var encoded=ctrl.model.pseudo_folder_hierarchy.map(encodeURIComponent);for(var i=0;i<encoded.length;i++){crumbs.push({label:ctrl.model.pseudo_folder_hierarchy[i],url:ctrl.containerURL+encoded.slice(0,i+1).join(ctrl.model.DELIMETER)});}
return crumbs;}
function objectURL(file){return ctrl.currentURL+encodeURIComponent(file.name);}
function actionSuccessHandler(result){if(angular.isUndefined(result)){return;}
if(result.deleted.length>0){$scope.$broadcast(hzTableEvents.CLEAR_SELECTIONS);ctrl.model.updateContainer();ctrl.model.selectContainer(ctrl.model.container.name,ctrl.model.folder);}}}})();(function(){'use strict';angular.module('horizon.dashboard.project.containers').controller('horizon.dashboard.project.containers.UploadObjectModalController',UploadObjectModalController);UploadObjectModalController.$inject=['horizon.dashboard.project.containers.containers-model'];function UploadObjectModalController(model){var ctrl=this;ctrl.model={name:'',container:model.container,folder:model.folder,view_file:null,upload_file:null,DELIMETER:model.DELIMETER};ctrl.form=null;ctrl.changeFile=changeFile;function changeFile(files){if(files.length){ctrl.model.upload_file=files[0];ctrl.model.name=files[0].name;ctrl.form.name.$setDirty();}}}})();(function(){'use strict';var MAX_SCRIPT_SIZE=16*1024;angular.module('horizon.dashboard.project.workflow.launch-instance').controller('LaunchInstanceConfigurationController',LaunchInstanceConfigurationController);function LaunchInstanceConfigurationController(){var ctrl=this;ctrl.title=gettext("Customization Script");ctrl.MAX_SCRIPT_SIZE=MAX_SCRIPT_SIZE;ctrl.diskConfigOptions=[{value:'AUTO',text:gettext('Automatic')},{value:'MANUAL',text:gettext('Manual')}];}})();(function(){'use strict';angular.module('horizon.dashboard.project.workflow.launch-instance').controller('LaunchInstanceDetailsController',LaunchInstanceDetailsController);LaunchInstanceDetailsController.$inject=['$scope','horizon.framework.widgets.charts.donutChartSettings','horizon.framework.widgets.charts.quotaChartDefaults','horizon.app.core.openstack-service-api.nova'];function LaunchInstanceDetailsController($scope,donutChartSettings,quotaChartDefaults,novaAPI){var ctrl=this;novaAPI.isFeatureSupported('instance_description').then(isDescriptionSupported);ctrl.instanceNameError=gettext('A name is required for your instance.');ctrl.instanceCountError=gettext('Instance count is required and must be an integer of at least 1');ctrl.maxInstanceCount=1;ctrl.chartSettings=donutChartSettings;ctrl.maxInstances=1;ctrl.totalInstancesUsed=0;if($scope.model.novaLimits&&$scope.model.novaLimits.maxTotalInstances){ctrl.maxInstances=$scope.model.novaLimits.maxTotalInstances;}
if($scope.model.novaLimits&&$scope.model.novaLimits.totalInstancesUsed){ctrl.totalInstancesUsed=$scope.model.novaLimits.totalInstancesUsed;}
ctrl.instanceStats={title:gettext('Total Instances'),maxLimit:ctrl.maxInstances,label:'100%',data:[{label:quotaChartDefaults.usageLabel,value:1,colorClass:quotaChartDefaults.usageColorClass},{label:quotaChartDefaults.addedLabel,value:1,colorClass:quotaChartDefaults.addedColorClass},{label:quotaChartDefaults.remainingLabel,value:1,colorClass:quotaChartDefaults.remainingColorClass}]};syncInstanceChartAndLimits();var specifiedInstancesWatcher=createWatcher(getInstanceCount,updateChart);var maxInstancesWatcher=createWatcher(getMaxInstances,resetMaxInstances);var instancesUsedWatcher=createWatcher(getTotalInstancesUsed,resetTotalInstancesUsed);$scope.$on('$destroy',function(){specifiedInstancesWatcher();maxInstancesWatcher();instancesUsedWatcher();});function isDescriptionSupported(data){ctrl.isDescriptionSupported=data.data;}
function getMaxInstances(){return $scope.model.novaLimits.maxTotalInstances;}
function resetMaxInstances(newMaxInstances){ctrl.maxInstances=Math.max(1,newMaxInstances);syncInstanceChartAndLimits();}
function getTotalInstancesUsed(){return $scope.model.novaLimits.totalInstancesUsed;}
function resetTotalInstancesUsed(){ctrl.totalInstancesUsed=$scope.model.novaLimits.totalInstancesUsed;syncInstanceChartAndLimits();}
function getInstanceCount(){return $scope.model.newInstanceSpec.instance_count;}
function createWatcher(watchExpression,listener){return $scope.$watch(watchExpression,function(newValue,oldValue){if(newValue!==oldValue){listener(newValue);}});}
function syncInstanceChartAndLimits(){updateChart();updateMaxInstanceCount();}
function updateChart(){if($scope.model.newInstanceSpec.instance_count<=0){$scope.model.newInstanceSpec.instance_count=1;}
var data=ctrl.instanceStats.data;var added=$scope.model.newInstanceSpec.instance_count||1;var remaining=Math.max(0,ctrl.maxInstances-ctrl.totalInstancesUsed-added);ctrl.instanceStats.maxLimit=ctrl.maxInstances;data[0].value=ctrl.totalInstancesUsed;data[1].value=added;data[2].value=remaining;var quotaCalc=Math.round((ctrl.totalInstancesUsed+added)/ctrl.maxInstances*100);ctrl.instanceStats.overMax=quotaCalc>100;ctrl.instanceStats.label=quotaCalc+'%';ctrl.instanceStats=angular.extend({},ctrl.instanceStats);}
function updateMaxInstanceCount(){ctrl.maxInstanceCount=ctrl.maxInstances-ctrl.totalInstancesUsed;var instanceCountText=gettext('The instance count must not exceed your quota available of %(maxInstanceCount)s instances');var instanceCountObj={maxInstanceCount:ctrl.maxInstanceCount};ctrl.instanceCountMaxError=interpolate(instanceCountText,instanceCountObj,true);}}})();(function(){'use strict';angular.module('horizon.dashboard.project.workflow.launch-instance').controller('LaunchInstanceFlavorController',LaunchInstanceFlavorController);LaunchInstanceFlavorController.$inject=['$scope','horizon.framework.widgets.charts.quotaChartDefaults','launchInstanceModel'];function LaunchInstanceFlavorController($scope,quotaChartDefaults,launchInstanceModel){var ctrl=this;ctrl.defaultIfUndefined=defaultIfUndefined;ctrl.validateFlavor=validateFlavor;ctrl.buildFlavorFacades=buildFlavorFacades;ctrl.updateFlavorFacades=updateFlavorFacades;ctrl.getChartData=getChartData;ctrl.getErrors=getErrors;ctrl.chartTotalInstancesLabel=gettext('Total Instances');ctrl.chartTotalVcpusLabel=gettext('Total VCPUs');ctrl.chartTotalRamLabel=gettext('Total RAM');ctrl.chartTotalVolumeLabel=gettext('Total Volumes');ctrl.chartTotalVolumeStorageLabel=gettext('Total Volume Storage');ctrl.filterFacets=[{label:gettext('Name'),name:'name',singleton:true},{label:gettext('VCPUs'),name:'vcpus',singleton:true},{label:gettext('RAM'),name:'ram',singleton:true},{label:gettext('Public'),name:'isPublic',singleton:true,options:[{label:gettext('No'),key:false},{label:gettext('Yes'),key:true}]}];ctrl.sourcesLabel={image:gettext('image'),snapshot:gettext('snapshot'),volume:gettext('volume')};ctrl.availableFlavorFacades=[];ctrl.displayedAvailableFlavorFacades=[];ctrl.allocatedFlavorFacades=[];ctrl.displayedAllocatedFlavorFacades=[];ctrl.flavors=[];ctrl.metadataDefs=launchInstanceModel.metadataDefs;ctrl.novaLimits={};ctrl.instanceCount=1;ctrl.transferTableModel={allocated:ctrl.allocatedFlavorFacades,displayedAllocated:ctrl.displayedAllocatedFlavorFacades,available:ctrl.availableFlavorFacades,displayedAvailable:ctrl.displayedAvailableFlavorFacades};ctrl.instancesChartData={};ctrl.allocationLimits={maxAllocation:1};var novaLimitsWatcher=$scope.$watch(function(){return launchInstanceModel.novaLimits;},function(newValue,oldValue,scope){var ctrl=scope.selectFlavorCtrl;ctrl.novaLimits=newValue;ctrl.updateFlavorFacades();},true);var flavorsWatcher=$scope.$watchCollection(function(){return launchInstanceModel.flavors;},function(newValue,oldValue,scope){var ctrl=scope.selectFlavorCtrl;ctrl.flavors=newValue;ctrl.updateFlavorFacades();});var instanceCountWatcher=$scope.$watch(function(){return launchInstanceModel.newInstanceSpec.instance_count;},function(newValue,oldValue,scope){if(angular.isDefined(newValue)){var ctrl=scope.selectFlavorCtrl;ctrl.instanceCount=Math.max(1,newValue);ctrl.updateFlavorFacades();ctrl.validateFlavor();}});var facadesWatcher=$scope.$watchCollection("selectFlavorCtrl.allocatedFlavorFacades",function(newValue,oldValue,scope){if(newValue&&newValue.length>0){launchInstanceModel.newInstanceSpec.flavor=newValue[0].flavor;scope.selectFlavorCtrl.validateFlavor();}else{delete launchInstanceModel.newInstanceSpec.flavor;}});var sourceWatcher=$scope.$watchCollection(function(){return launchInstanceModel.newInstanceSpec.source;},function(newValue,oldValue,scope){var ctrl=scope.selectFlavorCtrl;ctrl.source=newValue&&newValue.length?newValue[0]:null;ctrl.updateFlavorFacades();ctrl.validateFlavor();});var cinderLimitsWatcher=$scope.$watch(function(){return launchInstanceModel.cinderLimits;},function(newValue,oldValue,scope){var ctrl=scope.selectFlavorCtrl;ctrl.cinderLimits=newValue;ctrl.updateFlavorFacades();},true);var volumeSizeWatcher=$scope.$watchCollection(function(){return[launchInstanceModel.newInstanceSpec.source_type,launchInstanceModel.newInstanceSpec.vol_size,launchInstanceModel.newInstanceSpec.vol_create];},function(newValue,oldValue){if(!angular.equals(newValue,oldValue)){ctrl.updateFlavorFacades();ctrl.validateFlavor();}});$scope.$on('$destroy',function(){novaLimitsWatcher();flavorsWatcher();instanceCountWatcher();facadesWatcher();sourceWatcher();cinderLimitsWatcher();volumeSizeWatcher();});function defaultIfUndefined(value,defaultValue){return angular.isUndefined(value)?defaultValue:value;}
function validateFlavor(){var allocatedFlavors=ctrl.allocatedFlavorFacades;if(allocatedFlavors&&allocatedFlavors.length>0){var allocatedFlavorFacade=allocatedFlavors[0];var isValid=allocatedFlavorFacade.enabled;$scope.launchInstanceFlavorForm['allocated-flavor'].$setValidity('flavor',isValid);}}
function buildFlavorFacades(){var facade,flavor;for(var i=0;i<ctrl.flavors.length;i++){flavor=ctrl.flavors[i];facade={flavor:flavor,id:flavor.id,name:flavor.name,vcpus:flavor.vcpus,ram:flavor.ram,totalDisk:flavor.disk+flavor['OS-FLV-EXT-DATA:ephemeral'],rootDisk:flavor.disk,ephemeralDisk:flavor['OS-FLV-EXT-DATA:ephemeral'],isPublic:flavor['os-flavor-access:is_public'],extras:flavor.extras};ctrl.availableFlavorFacades.push(facade);}}
function updateFlavorFacades(){if(ctrl.availableFlavorFacades.length!==ctrl.flavors.length){ctrl.buildFlavorFacades();}
var instancesChartData=ctrl.getChartData(ctrl.chartTotalInstancesLabel,ctrl.instanceCount,launchInstanceModel.novaLimits.totalInstancesUsed,launchInstanceModel.novaLimits.maxTotalInstances);for(var i=0;i<ctrl.availableFlavorFacades.length;i++){var facade=ctrl.availableFlavorFacades[i];var createVolume=launchInstanceModel.newInstanceSpec.vol_create;facade.instancesChartData=instancesChartData;facade.vcpusChartData=ctrl.getChartData(ctrl.chartTotalVcpusLabel,ctrl.instanceCount*facade.vcpus,launchInstanceModel.novaLimits.totalCoresUsed,launchInstanceModel.novaLimits.maxTotalCores);facade.ramChartData=ctrl.getChartData(ctrl.chartTotalRamLabel,ctrl.instanceCount*facade.ram,launchInstanceModel.novaLimits.totalRAMUsed,launchInstanceModel.novaLimits.maxTotalRAMSize,"MB");if(launchInstanceModel.cinderLimits){facade.volumeChartData=ctrl.getChartData(ctrl.chartTotalVolumeLabel,createVolume?ctrl.instanceCount:0,launchInstanceModel.cinderLimits.totalVolumesUsed,launchInstanceModel.cinderLimits.maxTotalVolumes);facade.volumeStorageChartData=ctrl.getChartData(ctrl.chartTotalVolumeStorageLabel,createVolume?(ctrl.instanceCount*Math.max(facade.totalDisk,launchInstanceModel.newInstanceSpec.vol_size)):0,launchInstanceModel.cinderLimits.totalGigabytesUsed,launchInstanceModel.cinderLimits.maxTotalVolumeGigabytes,"GiB");}
var errors=ctrl.getErrors(facade.flavor);facade.errors=errors;facade.enabled=Object.keys(errors).length===0;}}
function getChartData(title,added,totalUsed,maxAllowed,unit){var used=ctrl.defaultIfUndefined(totalUsed,0);var allowed=ctrl.defaultIfUndefined(maxAllowed,1);var quotaCalc=Math.round((used+added)/allowed*100);var overMax=quotaCalc>100;var usageData={label:quotaChartDefaults.usageLabel,value:used,colorClass:quotaChartDefaults.usageColorClass};var addedData={label:quotaChartDefaults.addedLabel,value:added,colorClass:quotaChartDefaults.addedColorClass};var remainingData={label:quotaChartDefaults.remainingLabel,value:Math.max(0,allowed-used-added),colorClass:quotaChartDefaults.remainingColorClass};var chartData={title:title,maxLimit:allowed,label:quotaCalc+'%',overMax:overMax,data:[usageData,addedData,remainingData],unit:unit};return chartData;}
function getErrors(flavor){var messages={};var source=ctrl.source;var instanceCount=ctrl.instanceCount;var totalRamUsed=ctrl.defaultIfUndefined(ctrl.novaLimits.totalRAMUsed,0);var maxTotalRam=ctrl.defaultIfUndefined(ctrl.novaLimits.maxTotalRAMSize,0);var availableRam=maxTotalRam-totalRamUsed;var ramRequired=instanceCount*flavor.ram;if(ramRequired>availableRam){messages.ram=gettext('This flavor requires more RAM than your quota allows. Please select a smaller flavor or decrease the instance count.');}
var totalCoresUsed=ctrl.defaultIfUndefined(ctrl.novaLimits.totalCoresUsed,0);var maxTotalCores=ctrl.defaultIfUndefined(ctrl.novaLimits.maxTotalCores,0);var availableCores=maxTotalCores-totalCoresUsed;var coresRequired=instanceCount*flavor.vcpus;if(coresRequired>availableCores){messages.vcpus=gettext('This flavor requires more VCPUs than your quota allows. Please select a smaller flavor or decrease the instance count.');}
var sourceType=launchInstanceModel.newInstanceSpec.source_type;if(source&&sourceType&&(sourceType.type==='image'||sourceType.type==='snapshot'||sourceType.type==='volume')){if(sourceType.type==='volume'&&source.volume_image_metadata){source.min_disk=source.volume_image_metadata.min_disk;source.min_ram=source.volume_image_metadata.min_ram;}
if(source.min_disk>0&&flavor.disk>0&&source.min_disk>flavor.disk){var srcMinDiskMsg=gettext('The selected %(sourceType)s source requires a flavor with at least %(minDisk)s GB of root disk. Select a flavor with a larger root disk or use a different %(sourceType)s source.');messages.disk=interpolate(srcMinDiskMsg,{minDisk:source.min_disk,sourceType:ctrl.sourcesLabel[sourceType.type]},true);}
if(source.min_ram>0&&source.min_ram>flavor.ram){var srcMinRamMsg=gettext('The selected %(sourceType)s source requires a flavor with at least %(minRam)s MB of RAM. Select a flavor with more RAM or use a different %(sourceType)s source.');messages.ram=interpolate(srcMinRamMsg,{minRam:source.min_ram,sourceType:ctrl.sourcesLabel[sourceType.type]},true);}}
return messages;}}})();(function(){'use strict';angular.module('horizon.dashboard.project.workflow.launch-instance').controller('LaunchInstanceCreateKeyPairController',LaunchInstanceCreateKeyPairController);LaunchInstanceCreateKeyPairController.$inject=['$uibModalInstance','existingKeypairs','horizon.app.core.openstack-service-api.nova'];function LaunchInstanceCreateKeyPairController($uibModalInstance,existingKeypairs,nova){var ctrl=this;ctrl.submit=submit;ctrl.cancel=cancel;ctrl.doesKeypairExist=doesKeypairExist;ctrl.generate=generate;ctrl.keypair='';ctrl.keypairExistsError=gettext('Keypair already exists or name contains bad characters.');ctrl.copyPrivateKey=copyPrivateKey;function doesKeypairExist(){return exists(ctrl.keypair);}
function generate(){nova.createKeypair({name:ctrl.keypair}).then(onKeypairCreated);function onKeypairCreated(data){ctrl.createdKeypair=data.data;ctrl.privateKey=ctrl.createdKeypair.private_key;ctrl.publicKey=ctrl.createdKeypair.public_key;}}
function copyPrivateKey(){angular.element('textarea').select();document.execCommand('copy');}
function exists(keypair){return existingKeypairs.indexOf(keypair)!==-1;}
function submit(){$uibModalInstance.close(ctrl.createdKeypair);}
function cancel(){$uibModalInstance.dismiss();}}})();(function(){'use strict';angular.module('horizon.dashboard.project.workflow.launch-instance').controller('LaunchInstanceImportKeyPairController',LaunchInstanceImportKeyPairController);LaunchInstanceImportKeyPairController.$inject=['$uibModalInstance','horizon.app.core.openstack-service-api.nova','horizon.framework.widgets.toast.service','horizon.dashboard.project.workflow.launch-instance.basePath'];function LaunchInstanceImportKeyPairController($uibModalInstance,novaAPI,toastService,basePath){var ctrl=this;ctrl.submit=submit;ctrl.cancel=cancel;ctrl.model={name:'',public_key:''};ctrl.path=basePath+'keypair/';function submit(){novaAPI.createKeypair(ctrl.model).then(successCallback);}
function successCallback(data){$uibModalInstance.close(data.data);var successMsg=gettext('Successfully imported key pair %(name)s.');toastService.add('success',interpolate(successMsg,{name:data.data.name},true));}
function cancel(){$uibModalInstance.dismiss();}}})();(function(){'use strict';angular.module('horizon.dashboard.project.workflow.launch-instance').controller('LaunchInstanceKeypairController',LaunchInstanceKeypairController);LaunchInstanceKeypairController.$inject=['horizon.dashboard.project.workflow.launch-instance.basePath','launchInstanceModel','$uibModal','horizon.framework.widgets.toast.service','horizon.app.core.openstack-service-api.settings'];function LaunchInstanceKeypairController(basePath,launchInstanceModel,$uibModal,toastService,settingsService){var ctrl=this;ctrl.isKeypairCreated=false;ctrl.createdKeypair={name:"",regenerateUrl:""};ctrl.allocateNewKeyPair=allocateNewKeyPair;ctrl.createKeyPair=createKeyPair;ctrl.importKeyPair=importKeyPair;ctrl.setKeypairRequired=setKeypairRequired;ctrl.tableData={available:launchInstanceModel.keypairs,allocated:launchInstanceModel.newInstanceSpec.key_pair};ctrl.availableTableConfig={selectAll:false,trackId:'id',detailsTemplateUrl:basePath+'keypair/keypair-details.html',columns:[{id:'name',title:gettext('Name'),priority:1},{id:'fingerprint',title:gettext('Fingerprint'),priority:2}]};ctrl.allocatedTableConfig=angular.copy(ctrl.availableTableConfig);ctrl.allocatedTableConfig.noItemsMessage=gettext('Select a key pair from the available key pairs below.');ctrl.filterFacets=[{label:gettext('Name'),name:'name',singleton:true},{label:gettext('Fingerprint'),name:'fingerprint',singleton:true}];ctrl.tableLimits={maxAllocation:1};ctrl.isKeypairRequired=0;settingsService.getSetting('OPENSTACK_HYPERVISOR_FEATURES.requires_keypair').then(setKeypairRequired);function allocateNewKeyPair(newKeyPair){if(ctrl.tableData.allocated.length===0){ctrl.tableData.allocated.push(newKeyPair);}}
function createKeyPair(){$uibModal.open({templateUrl:basePath+'keypair/create-keypair.html',controller:'LaunchInstanceCreateKeyPairController as ctrl',windowClass:'modal-dialog-wizard',resolve:{existingKeypairs:getKeypairs}}).result.then(notifyUserAndAssign);}
function notifyUserAndAssign(newKeypair){toastService.add('success',interpolate(gettext('Created keypair: %s'),[newKeypair.name]));assignKeypair(newKeypair);ctrl.createdKeypair=newKeypair;ctrl.isKeypairCreated=true;}
function importKeyPair(){$uibModal.open({templateUrl:basePath+'keypair/import-keypair.html',controller:'LaunchInstanceImportKeyPairController as ctrl',windowClass:'modal-dialog-wizard'}).result.then(assignKeypair);}
function assignKeypair(keypair){keypair.id=keypair.name;launchInstanceModel.keypairs.push(keypair);ctrl.allocateNewKeyPair(keypair);}
function getKeypairs(){return launchInstanceModel.keypairs.map(getName);}
function getName(item){return item.name;}
function setKeypairRequired(setting){ctrl.isKeypairRequired=setting?1:0;}}})();(function(){'use strict';angular.module('horizon.dashboard.project.workflow.launch-instance').controller('LaunchInstanceModalController',LaunchInstanceModalController);LaunchInstanceModalController.$inject=['horizon.dashboard.project.workflow.launch-instance.modal.service'];function LaunchInstanceModalController(modalService){var ctrl=this;ctrl.openLaunchInstanceWizard=openLaunchInstanceWizard;function openLaunchInstanceWizard(launchContext){modalService.open(launchContext);}}})();(function(){'use strict';angular.module('horizon.dashboard.project.workflow.launch-instance').factory('horizon.dashboard.project.workflow.launch-instance.modal.service',LaunchInstanceModalService);LaunchInstanceModalService.$inject=['$uibModal','$window','horizon.dashboard.project.workflow.launch-instance.modal-spec'];function LaunchInstanceModalService($uibModal,$window,modalSpec){var service={open:open};return service;function open(launchContext){var localSpec={resolve:{launchContext:function(){return launchContext;}}};angular.extend(localSpec,modalSpec);var launchInstanceModal=$uibModal.open(localSpec);var handleModalClose=function(redirectPropertyName){return function(){if(launchContext&&launchContext[redirectPropertyName]){$window.location.href=launchContext[redirectPropertyName];}};};return launchInstanceModal.result.then(handleModalClose('successUrl'),handleModalClose('dismissUrl'));}}})();(function(){'use strict';var push=Array.prototype.push;var noop=angular.noop;angular.module('horizon.dashboard.project.workflow.launch-instance').factory('launchInstanceModel',launchInstanceModel);launchInstanceModel.$inject=['$q','$log','horizon.app.core.openstack-service-api.cinder','horizon.app.core.openstack-service-api.glance','horizon.app.core.openstack-service-api.neutron','horizon.app.core.openstack-service-api.nova','horizon.app.core.openstack-service-api.novaExtensions','horizon.app.core.openstack-service-api.security-group','horizon.app.core.openstack-service-api.serviceCatalog','horizon.app.core.openstack-service-api.settings','horizon.dashboard.project.workflow.launch-instance.boot-source-types','horizon.framework.widgets.toast.service','horizon.app.core.openstack-service-api.policy','horizon.dashboard.project.workflow.launch-instance.step-policy'];function launchInstanceModel($q,$log,cinderAPI,glanceAPI,neutronAPI,novaAPI,novaExtensions,securityGroup,serviceCatalog,settings,bootSourceTypes,toast,policy,stepPolicy){var initPromise;var model={initializing:false,initialized:false,newInstanceSpec:{},availabilityZones:[],flavors:[],allowedBootSources:[],images:[],allowCreateVolumeFromImage:false,imageSnapshots:[],keypairs:[],metadataDefs:{flavor:null,image:null,volume:null,instance:null,hints:null},networks:[],ports:[],neutronEnabled:false,novaLimits:{},securityGroups:[],serverGroups:[],volumeBootable:false,volumes:[],volumeSnapshots:[],metadataTree:null,hintsTree:null,loaded:{availabilityZones:false},initialize:initialize,createInstance:createInstance};function initializeNewInstanceSpec(){model.newInstanceSpec={availability_zone:null,admin_pass:null,config_drive:false,description:null,user_data:'',disk_config:'AUTO',flavor:null,instance_count:1,key_pair:[],name:null,networks:[],ports:[],scheduler_hints:{},security_groups:[],server_groups:[],source_type:null,source:[],create_volume_default:true,vol_create:false,vol_device_name:'vda',vol_delete_on_instance_delete:false,vol_size:1};}
function initializeLoadStatus(){angular.forEach(model.loaded,function(val,key){model.loaded[key]=false;});}
function initialize(deep){var deferred,promise;initializeNewInstanceSpec();initializeLoadStatus();if(model.initializing){promise=initPromise;}else if(model.initialized&&!deep){deferred=$q.defer();promise=deferred.promise;deferred.resolve();}else{model.initializing=true;model.allowedBootSources.length=0;var launchInstanceDefaults=settings.getSetting('LAUNCH_INSTANCE_DEFAULTS');promise=$q.all([novaAPI.getAvailabilityZones().then(onGetAvailabilityZones).finally(onGetAvailabilityZonesComplete),novaAPI.getFlavors({is_public:true,get_extras:true}).then(onGetFlavors,noop),novaAPI.getKeypairs().then(onGetKeypairs,noop),novaAPI.getLimits(true).then(onGetNovaLimits,noop),securityGroup.query().then(onGetSecurityGroups,noop),serviceCatalog.ifTypeEnabled('network').then(getNetworks,noop),launchInstanceDefaults.then(addImageSourcesIfEnabled,noop),launchInstanceDefaults.then(setDefaultValues,noop),launchInstanceDefaults.then(addVolumeSourcesIfEnabled,noop)]);promise.then(onInitSuccess,onInitFail);}
return promise;}
function onInitSuccess(){model.initializing=false;model.initialized=true;getServerGroups();getMetadataDefinitions();}
function onInitFail(){model.initializing=false;model.initialized=false;}
function setDefaultValues(defaults){if(!defaults){return;}
if('config_drive'in defaults){model.newInstanceSpec.config_drive=defaults.config_drive;}
if('create_volume'in defaults){model.newInstanceSpec.create_volume_default=defaults.create_volume;}}
function createInstance(){var finalSpec=angular.copy(model.newInstanceSpec);cleanNullProperties(finalSpec);setFinalSpecBootsource(finalSpec);setFinalSpecFlavor(finalSpec);setFinalSpecNetworks(finalSpec);setFinalSpecPorts(finalSpec);setFinalSpecKeyPairs(finalSpec);setFinalSpecSecurityGroups(finalSpec);setFinalSpecServerGroup(finalSpec);setFinalSpecSchedulerHints(finalSpec);setFinalSpecMetadata(finalSpec);return novaAPI.createServer(finalSpec).then(successMessage);}
function successMessage(){var numberInstances=model.newInstanceSpec.instance_count;var message=ngettext('%s instance launched.','%s instances launched.',numberInstances);toast.add('success',interpolate(message,[numberInstances]));}
function cleanNullProperties(finalSpec){for(var key in finalSpec){if(finalSpec.hasOwnProperty(key)&&finalSpec[key]===null){delete finalSpec[key];}}}
function onGetAvailabilityZones(data){model.availabilityZones.length=0;push.apply(model.availabilityZones,data.data.items.filter(function(zone){return zone.zoneState&&zone.zoneState.available;}).map(function(zone){return{label:zone.zoneName,value:zone.zoneName};}));if(model.availabilityZones.length===1){model.newInstanceSpec.availability_zone=model.availabilityZones[0].value;}else if(model.availabilityZones.length>1){model.availabilityZones.unshift({label:gettext("Any Availability Zone"),value:""});model.newInstanceSpec.availability_zone=model.availabilityZones[0].value;}}
function onGetAvailabilityZonesComplete(){model.loaded.availabilityZones=true;}
function onGetFlavors(data){model.flavors.length=0;push.apply(model.flavors,data.data.items);}
function setFinalSpecFlavor(finalSpec){if(finalSpec.flavor){finalSpec.flavor_id=finalSpec.flavor.id;}else{delete finalSpec.flavor_id;}
delete finalSpec.flavor;}
function onGetKeypairs(data){angular.extend(model.keypairs,data.data.items.map(function(e){e.keypair.id='li_keypair:'+e.keypair.name;return e.keypair;}));if(data.data.items.length===1){model.newInstanceSpec.key_pair.push(data.data.items[0].keypair);}}
function setFinalSpecKeyPairs(finalSpec){if(!finalSpec.key_name&&finalSpec.key_pair.length===1){finalSpec.key_name=finalSpec.key_pair[0].name;}else if(!finalSpec.key_name){finalSpec.key_name=null;}
delete finalSpec.key_pair;}
function onGetSecurityGroups(data){model.securityGroups.length=0;angular.forEach(data.data.items,function addDefault(item){if(item.name==='default'){model.newInstanceSpec.security_groups.push(item);}});push.apply(model.securityGroups,data.data.items);}
function setFinalSpecSecurityGroups(finalSpec){var securityGroupIds=[];finalSpec.security_groups.forEach(function(securityGroup){if(model.neutronEnabled){securityGroupIds.push(securityGroup.id);}else{securityGroupIds.push(securityGroup.name);}});finalSpec.security_groups=securityGroupIds;}
function getServerGroups(){policy.ifAllowed(stepPolicy.serverGroups).then(function(){novaAPI.getServerGroups().then(onGetServerGroups,noop);},noop);}
function onGetServerGroups(data){model.serverGroups.length=0;push.apply(model.serverGroups,data.data.items);}
function setFinalSpecServerGroup(finalSpec){if(finalSpec.server_groups.length>0){finalSpec.scheduler_hints.group=finalSpec.server_groups[0].id;}
delete finalSpec.server_groups;}
function getNetworks(){return neutronAPI.getNetworks().then(onGetNetworks,noop).then(getPorts,noop);}
function onGetNetworks(data){model.neutronEnabled=true;model.networks.length=0;push.apply(model.networks,data.data.items.filter(function(net){return net.subnets.length>0;}));if(model.networks.length===1){model.newInstanceSpec.networks.push(model.networks[0]);}
return data;}
function setFinalSpecNetworks(finalSpec){finalSpec.nics=[];finalSpec.networks.forEach(function(network){finalSpec.nics.push({"net-id":network.id,"v4-fixed-ip":""});});delete finalSpec.networks;}
function getPorts(networks){model.ports.length=0;networks.data.items.forEach(function(network){return neutronAPI.getPorts({network_id:network.id}).then(function(ports){onGetPorts(ports,network);},noop);});}
function onGetPorts(networkPorts,network){var ports=[];networkPorts.data.items.forEach(function(port){if(port.device_owner===""&&port.admin_state==="UP"){port.subnet_names=getPortSubnets(port,network.subnets);port.network_name=network.name;if(!port.hasOwnProperty("trunk_id")){ports.push(port);}}});push.apply(model.ports,ports);}
function getPortSubnets(port,subnets){var subnetNames={};port.fixed_ips.forEach(function(ip){subnets.forEach(function(subnet){if(ip.subnet_id===subnet.id){subnetNames[ip.ip_address]=subnet.name;}});});return subnetNames;}
function setFinalSpecPorts(finalSpec){finalSpec.ports.forEach(function(port){finalSpec.nics.push({"port-id":port.id});});delete finalSpec.ports;}
function addImageSourcesIfEnabled(config){var allEnabled=!config;var enabledImage=allEnabled||!config.disable_image;var enabledSnapshot=allEnabled||!config.disable_instance_snapshot;if(enabledImage||enabledSnapshot){var filter={status:'active',sort_key:'name',sort_dir:'asc'};return glanceAPI.getImages(filter).then(function getEnabledImages(data){if(enabledImage){onGetImages(data);}
if(enabledSnapshot){onGetSnapshots(data);}});}}
function addVolumeSourcesIfEnabled(config){var volumeDeferred=$q.defer();var volumeSnapshotDeferred=$q.defer();var absoluteLimitsDeferred=$q.defer();serviceCatalog.ifTypeEnabled('volumev2').then(onVolumeServiceEnabled,onCheckVolumeV3);function onCheckVolumeV3(){serviceCatalog.ifTypeEnabled('volumev3').then(onVolumeServiceEnabled,resolvePromises);}
function onVolumeServiceEnabled(){model.volumeBootable=true;novaExtensions.ifNameEnabled('BlockDeviceMappingV2Boot').then(onBootToVolumeSupported);if(!config||!config.disable_volume){getVolumes().then(resolveVolumes,failVolumes);getAbsoluteLimits().then(resolveAbsoluteLimitsDeferred,resolveAbsoluteLimitsDeferred);}else{resolveVolumes();resolveAbsoluteLimitsDeferred();}
if(!config||!config.disable_volume_snapshot){getVolumeSnapshots().then(resolveVolumeSnapshots,failVolumeSnapshots);}else{resolveVolumeSnapshots();}}
function onBootToVolumeSupported(){model.allowCreateVolumeFromImage=true;}
function getVolumes(){return cinderAPI.getVolumes({status:'available',bootable:1}).then(onGetVolumes);}
function getAbsoluteLimits(){return cinderAPI.getAbsoluteLimits().then(onGetCinderLimits);}
function getVolumeSnapshots(){return cinderAPI.getVolumeSnapshots({status:'available'}).then(onGetVolumeSnapshots);}
function resolvePromises(){volumeDeferred.resolve();volumeSnapshotDeferred.resolve();absoluteLimitsDeferred.resolve();}
function resolveVolumes(){volumeDeferred.resolve();}
function failVolumes(){volumeDeferred.resolve();}
function resolveVolumeSnapshots(){volumeSnapshotDeferred.resolve();}
function failVolumeSnapshots(){volumeSnapshotDeferred.resolve();}
function resolveAbsoluteLimitsDeferred(){absoluteLimitsDeferred.resolve();}
return $q.all([volumeDeferred.promise,volumeSnapshotDeferred.promise,absoluteLimitsDeferred.promise]);}
function isBootableImageType(image){return bootSourceTypes.NON_BOOTABLE_IMAGE_TYPES.indexOf(image.container_format)<0;}
function onGetImages(data){model.images.length=0;push.apply(model.images,data.data.items.filter(function(image){return isBootableImageType(image)&&(!image.properties||image.properties.image_type!=='snapshot');}));addAllowedBootSource(model.images,bootSourceTypes.IMAGE,gettext('Image'));}
function onGetSnapshots(data){model.imageSnapshots.length=0;push.apply(model.imageSnapshots,data.data.items.filter(function(image){return isBootableImageType(image)&&(image.properties&&image.properties.image_type==='snapshot');}));addAllowedBootSource(model.imageSnapshots,bootSourceTypes.INSTANCE_SNAPSHOT,gettext('Instance Snapshot'));}
function onGetVolumes(data){model.volumes.length=0;push.apply(model.volumes,data.data.items);addAllowedBootSource(model.volumes,bootSourceTypes.VOLUME,gettext('Volume'));}
function onGetVolumeSnapshots(data){model.volumeSnapshots.length=0;push.apply(model.volumeSnapshots,data.data.items);addAllowedBootSource(model.volumeSnapshots,bootSourceTypes.VOLUME_SNAPSHOT,gettext('Volume Snapshot'));}
function addAllowedBootSource(rawTypes,type,label){if(rawTypes){model.allowedBootSources.push({type:type,label:label});model.allowedBootSources.sort(function(a,b){return a.type>b.type;});}}
function setFinalSpecBootsource(finalSpec){finalSpec.source_id=finalSpec.source&&finalSpec.source[0]&&finalSpec.source[0].id;delete finalSpec.source;switch(finalSpec.source_type.type){case bootSourceTypes.IMAGE:setFinalSpecBootImageToVolume(finalSpec);break;case bootSourceTypes.INSTANCE_SNAPSHOT:setFinalSpecBootImageToVolume(finalSpec);break;case bootSourceTypes.VOLUME:setFinalSpecBootFromVolumeDevice(finalSpec,'vol');break;case bootSourceTypes.VOLUME_SNAPSHOT:setFinalSpecBootFromVolumeDevice(finalSpec,'snap');break;default:$log.error("Unknown source type: "+finalSpec.source_type);}
delete finalSpec.source_type;delete finalSpec.vol_create;delete finalSpec.vol_device_name;delete finalSpec.vol_delete_on_instance_delete;delete finalSpec.vol_size;}
function setFinalSpecBootImageToVolume(finalSpec){if(finalSpec.vol_create){finalSpec.block_device_mapping_v2=[];finalSpec.block_device_mapping_v2.push({'source_type':bootSourceTypes.IMAGE,'destination_type':bootSourceTypes.VOLUME,'delete_on_termination':finalSpec.vol_delete_on_instance_delete,'uuid':finalSpec.source_id,'boot_index':'0','volume_size':finalSpec.vol_size});finalSpec.source_id=null;}}
function setFinalSpecBootFromVolumeDevice(finalSpec,sourceType){finalSpec.block_device_mapping={};finalSpec.block_device_mapping[finalSpec.vol_device_name]=[finalSpec.source_id,':',sourceType,'::',finalSpec.vol_delete_on_instance_delete].join('');finalSpec.source_id='';}
function onGetCinderLimits(response){model.cinderLimits=response.data;}
function onGetNovaLimits(data){angular.extend(model.novaLimits,data.data);}
function setFinalSpecSchedulerHints(finalSpec){if(model.hintsTree){var hints=model.hintsTree.getExisting();if(!angular.equals({},hints)){angular.forEach(hints,function(value,key){finalSpec.scheduler_hints[key]=value+'';});}}}
function setFinalSpecMetadata(finalSpec){if(model.metadataTree){var meta=model.metadataTree.getExisting();if(!angular.equals({},meta)){angular.forEach(meta,function(value,key){meta[key]=value+'';});finalSpec.meta=meta;}}}
function getMetadataDefinitions(){var resourceTypes={flavor:['OS::Nova::Flavor',''],image:['OS::Glance::Image',''],volume:['OS::Cinder::Volumes',''],instance:['OS::Nova::Server','metadata']};angular.forEach(resourceTypes,applyForResourceType);$q.all([settings.ifEnabled('LAUNCH_INSTANCE_DEFAULTS.enable_scheduler_hints',true,true),policy.ifAllowed(stepPolicy.schedulerHints)]).then(function getSchedulerHints(){applyForResourceType(['OS::Nova::Server','scheduler_hints'],'hints');});}
function applyForResourceType(resourceType,key){glanceAPI.getNamespaces({resource_type:resourceType[0],properties_target:resourceType[1]},true).then(function(data){var namespaces=data.data.items;model.metadataDefs[key]=namespaces;});}
return model;}})();(function(){'use strict';angular.module('horizon.dashboard.project.workflow.launch-instance').controller('LaunchInstanceWizardController',LaunchInstanceWizardController);LaunchInstanceWizardController.$inject=['$scope','launchInstanceModel','horizon.dashboard.project.workflow.launch-instance.workflow'];function LaunchInstanceWizardController($scope,launchInstanceModel,launchInstanceWorkflow){$scope.workflow=launchInstanceWorkflow;$scope.model=launchInstanceModel;$scope.model.initialize(true);$scope.submit=$scope.model.createInstance;}})();(function(){'use strict';angular.module('horizon.dashboard.project.workflow.launch-instance').factory('horizon.dashboard.project.workflow.launch-instance.workflow',launchInstanceWorkflow);launchInstanceWorkflow.$inject=['horizon.dashboard.project.workflow.launch-instance.basePath','horizon.dashboard.project.workflow.launch-instance.step-policy','horizon.app.core.workflow.factory'];function launchInstanceWorkflow(basePath,stepPolicy,dashboardWorkflow){return dashboardWorkflow({title:gettext('Launch Instance'),steps:[{id:'details',title:gettext('Details'),templateUrl:basePath+'details/details.html',helpUrl:basePath+'details/details.help.html',formName:'launchInstanceDetailsForm'},{id:'source',title:gettext('Source'),templateUrl:basePath+'source/source.html',helpUrl:basePath+'source/source.help.html',formName:'launchInstanceSourceForm'},{id:'flavor',title:gettext('Flavor'),templateUrl:basePath+'flavor/flavor.html',helpUrl:basePath+'flavor/flavor.help.html',formName:'launchInstanceFlavorForm'},{id:'networks',title:gettext('Networks'),templateUrl:basePath+'network/network.html',helpUrl:basePath+'network/network.help.html',formName:'launchInstanceNetworkForm',requiredServiceTypes:['network']},{id:'ports',title:gettext('Network Ports'),templateUrl:basePath+'networkports/ports.html',helpUrl:basePath+'networkports/ports.help.html',formName:'launchInstanceNetworkPortForm',requiredServiceTypes:['network']},{id:'secgroups',title:gettext('Security Groups'),templateUrl:basePath+'security-groups/security-groups.html',helpUrl:basePath+'security-groups/security-groups.help.html',formName:'launchInstanceAccessAndSecurityForm',requiredServiceTypes:['network']},{id:'keypair',title:gettext('Key Pair'),templateUrl:basePath+'keypair/keypair.html',helpUrl:basePath+'keypair/keypair.help.html',formName:'launchInstanceKeypairForm',novaExtension:'Keypairs'},{id:'configuration',title:gettext('Configuration'),templateUrl:basePath+'configuration/configuration.html',helpUrl:basePath+'configuration/configuration.help.html',formName:'launchInstanceConfigurationForm'},{id:'servergroups',title:gettext('Server Groups'),templateUrl:basePath+'server-groups/server-groups.html',helpUrl:basePath+'server-groups/server-groups.help.html',formName:'launchInstanceServerGroupsForm',policy:stepPolicy.serverGroups,novaExtension:'ServerGroups'},{id:'hints',title:gettext('Scheduler Hints'),templateUrl:basePath+'scheduler-hints/scheduler-hints.html',helpUrl:basePath+'scheduler-hints/scheduler-hints.help.html',formName:'launchInstanceSchedulerHintsForm',policy:stepPolicy.schedulerHints,setting:'LAUNCH_INSTANCE_DEFAULTS.enable_scheduler_hints',novaExtension:'SchedulerHints'},{id:'metadata',title:gettext('Metadata'),templateUrl:basePath+'metadata/metadata.html',helpUrl:basePath+'metadata/metadata.help.html',formName:'launchInstanceMetadataForm'}],btnText:{finish:gettext('Launch Instance')},btnIcon:{finish:'fa-cloud-upload'}});}})();(function(){'use strict';angular.module('horizon.dashboard.project.workflow.launch-instance').controller('LaunchInstanceNetworkController',LaunchInstanceNetworkController);LaunchInstanceNetworkController.$inject=['$scope','horizon.framework.widgets.action-list.button-tooltip.row-warning.service','launchInstanceModel'];function LaunchInstanceNetworkController($scope,tooltipService,launchInstanceModel){var ctrl=this;ctrl.networkStatuses={'ACTIVE':gettext('Active'),'DOWN':gettext('Down')};ctrl.networkAdminStates={'UP':gettext('Up'),'DOWN':gettext('Down')};ctrl.tableDataMulti={available:$scope.model.networks,allocated:$scope.model.newInstanceSpec.networks,displayedAvailable:[],displayedAllocated:[],minItems:1};ctrl.tableLimits={maxAllocation:-1};ctrl.tableHelpText={allocHelpText:gettext('Select networks from those listed below.'),availHelpText:gettext('Select at least one network')};ctrl.tooltipModel=tooltipService;ctrl.networkFacets=[{label:gettext('Name'),name:'name',singleton:true},{label:gettext('Shared'),name:'shared',singleton:true,options:[{label:gettext('No'),key:false},{label:gettext('Yes'),key:true}]},{label:gettext('Admin State'),name:'admin_state',singleton:true,options:[{label:gettext('Up'),key:"UP"},{label:gettext('Down'),key:"DOWN"}]},{label:gettext('Status'),name:'status',singleton:true,options:[{label:gettext('Active'),key:"ACTIVE"},{label:gettext('Down'),key:"DOWN"}]}];function getPorts(){return launchInstanceModel.newInstanceSpec.ports;}
function toggleNetworksRequirement(newValue){if(newValue.length>0){ctrl.tableDataMulti.minItems=0;}
if(newValue.length===0){ctrl.tableDataMulti.minItems=1;}}
var portWatcher=$scope.$watch(getPorts,toggleNetworksRequirement,true);$scope.$on('$destroy',function(){portWatcher();});}})();(function(){'use strict';angular.module('horizon.dashboard.project.workflow.launch-instance').controller('LaunchInstanceNetworkPortController',LaunchInstanceNetworkPortController);LaunchInstanceNetworkPortController.$inject=['$scope','horizon.framework.widgets.action-list.button-tooltip.row-warning.service'];function LaunchInstanceNetworkPortController($scope,tooltipService){var ctrl=this;ctrl.portStatuses={'ACTIVE':gettext('Active'),'DOWN':gettext('Down')};ctrl.portAdminStates={'UP':gettext('Up'),'DOWN':gettext('Down')};ctrl.vnicTypes={'normal':gettext('Normal'),'direct':gettext('Direct'),'direct-physical':gettext('Direct Physical'),'macvtap':gettext('MacVTap'),'baremetal':gettext('Bare Metal'),'virtio-forwarder':gettext('Virtio Forwarder')};ctrl.tableDataMulti={available:$scope.model.ports,allocated:$scope.model.newInstanceSpec.ports,displayedAvailable:[],displayedAllocated:[]};ctrl.tableLimits={maxAllocation:-1};ctrl.tableHelpText={allocHelpText:gettext('Select ports from those listed below.')};ctrl.tooltipModel=tooltipService;ctrl.nameOrID=function nameOrId(data){return angular.isDefined(data.name)&&data.name!==''?data.name:data.id;};}})();(function(){'use strict';angular.module('horizon.dashboard.project.workflow.launch-instance').controller('LaunchInstanceSchedulerHintsController',LaunchInstanceSchedulerHintsController);LaunchInstanceSchedulerHintsController.$inject=['horizon.framework.util.i18n.gettext'];function LaunchInstanceSchedulerHintsController(gettext){var ctrl=this;ctrl.text={help:gettext('You can specify scheduler hints by moving items from the left column to the right column. In the left column there are scheduler hint definitions from the Glance Metadata Catalog. Use the "Custom" option to add scheduler hints with the key of your choice.'),available:gettext('Available Scheduler Hints'),existing:gettext('Existing Scheduler Hints'),noAvailable:gettext('No available scheduler hints'),noExisting:gettext('No existing scheduler hints')};}})();(function(){'use strict';angular.module('horizon.dashboard.project.workflow.launch-instance').controller('LaunchInstanceSecurityGroupsController',LaunchInstanceSecurityGroupsController);LaunchInstanceSecurityGroupsController.$inject=['launchInstanceModel','horizon.dashboard.project.workflow.launch-instance.basePath'];function LaunchInstanceSecurityGroupsController(launchInstanceModel,basePath){var ctrl=this;ctrl.tableData={available:launchInstanceModel.securityGroups,allocated:launchInstanceModel.newInstanceSpec.security_groups,displayedAvailable:[],displayedAllocated:[]};ctrl.tableDetails=basePath+'security-groups/security-group-details.html';ctrl.tableHelp={noneAllocText:gettext('Select one or more security groups from the available groups below.'),availHelpText:gettext('Select one or more')};ctrl.tableLimits={maxAllocation:-1};ctrl.filterFacets=[{label:gettext('Name'),name:'name',singleton:true},{label:gettext('Description'),name:'description',singleton:true}];}})();(function(){'use strict';angular.module('horizon.dashboard.project.workflow.launch-instance').controller('LaunchInstanceServerGroupsController',LaunchInstanceServerGroupsController);LaunchInstanceServerGroupsController.$inject=['launchInstanceModel','horizon.dashboard.project.workflow.launch-instance.basePath'];function LaunchInstanceServerGroupsController(launchInstanceModel,basePath){var ctrl=this;ctrl.tableData={available:launchInstanceModel.serverGroups,allocated:launchInstanceModel.newInstanceSpec.server_groups,displayedAvailable:[],displayedAllocated:[]};ctrl.tableDetails=basePath+'server-groups/server-group-details.html';ctrl.tableHelp={noneAllocText:gettext('Select a server group from the available groups below.'),availHelpText:gettext('Select one')};ctrl.tableLimits={maxAllocation:1};ctrl.filterFacets=[{label:gettext('Name'),name:'name',singleton:true}];}})();(function(){'use strict';var push=[].push;angular.module('horizon.dashboard.project.workflow.launch-instance').controller('LaunchInstanceSourceController',LaunchInstanceSourceController);LaunchInstanceSourceController.$inject=['$scope','horizon.dashboard.project.workflow.launch-instance.boot-source-types','bytesFilter','dateFilter','decodeFilter','diskFormatFilter','gbFilter','horizon.dashboard.project.workflow.launch-instance.basePath','horizon.framework.widgets.transfer-table.events','horizon.framework.widgets.magic-search.events'];function LaunchInstanceSourceController($scope,bootSourceTypes,bytesFilter,dateFilter,decodeFilter,diskFormatFilter,gbFilter,basePath,events,magicSearchEvents){var ctrl=this;ctrl.bootSourceTypeError=gettext('Volumes can only be attached to 1 active instance at a time. Please either set your instance count to 1 or select a different source type.');ctrl.toggleButtonOptions=[{label:gettext('Yes'),value:true},{label:gettext('No'),value:false}];ctrl.updateBootSourceSelection=updateBootSourceSelection;var selection=ctrl.selection=$scope.model.newInstanceSpec.source;ctrl.tableHeadCells=[];ctrl.tableBodyCells=[];ctrl.tableData={available:[],allocated:selection,displayedAvailable:[],displayedAllocated:[]};ctrl.helpText={};ctrl.sourceDetails=basePath+'source/source-details.html';var bootSources={image:{available:$scope.model.images,allocated:selection,displayedAvailable:$scope.model.images,displayedAllocated:selection},snapshot:{available:$scope.model.imageSnapshots,allocated:selection,displayedAvailable:[],displayedAllocated:selection},volume:{available:$scope.model.volumes,allocated:selection,displayedAvailable:[],displayedAllocated:selection},volume_snapshot:{available:$scope.model.volumeSnapshots,allocated:selection,displayedAvailable:[],displayedAllocated:selection}};var diskFormats=[{label:gettext('AKI'),key:'aki'},{label:gettext('AMI'),key:'ami'},{label:gettext('ARI'),key:'ari'},{label:gettext('Docker'),key:'docker'},{label:gettext('ISO'),key:'iso'},{label:gettext('OVA'),key:'ova'},{label:gettext('QCOW2'),key:'qcow2'},{label:gettext('RAW'),key:'raw'},{label:gettext('VDI'),key:'vdi'},{label:gettext('VHD'),key:'vhd'},{label:gettext('VMDK'),key:'vmdk'}];var tableHeadCellsMap={image:[{text:gettext('Name')},{text:gettext('Updated')},{text:gettext('Size')},{text:gettext('Type')},{text:gettext('Visibility')}],snapshot:[{text:gettext('Name')},{text:gettext('Updated')},{text:gettext('Size')},{text:gettext('Type')},{text:gettext('Visibility')}],volume:[{text:gettext('Name')},{text:gettext('Description')},{text:gettext('Size')},{text:gettext('Type')},{text:gettext('Availability Zone')}],volume_snapshot:[{text:gettext('Name')},{text:gettext('Description')},{text:gettext('Size')},{text:gettext('Created')},{text:gettext('Status')}]};var _visibilitymap={true:gettext('Public'),false:gettext('Private')};var tableBodyCellsMap={image:[{key:'name',classList:['hi-light','word-break']},{key:'updated_at',filter:dateFilter,filterArg:'short'},{key:'size',filter:bytesFilter,classList:['number']},{key:'disk_format',filter:diskFormatFilter,filterRawData:true},{key:'is_public',filter:decodeFilter,filterArg:_visibilitymap}],snapshot:[{key:'name',classList:['hi-light','word-break']},{key:'updated_at',filter:dateFilter,filterArg:'short'},{key:'size',filter:bytesFilter,classList:['number']},{key:'disk_format',filter:diskFormatFilter,filterRawData:true},{key:'is_public',filter:decodeFilter,filterArg:_visibilitymap}],volume:[{key:'name',classList:['hi-light','word-break']},{key:'description'},{key:'size',filter:gbFilter,classList:['number']},{key:'volume_image_metadata',filter:diskFormatFilter},{key:'availability_zone'}],volume_snapshot:[{key:'name',classList:['hi-light','word-break']},{key:'description'},{key:'size',filter:gbFilter,classList:['number']},{key:'created_at',filter:dateFilter,filterArg:'short'},{key:'status'}]};ctrl.sortByField=[];var sortFunction=function(columnIndex,comparedObject){var cell=tableBodyCellsMap[ctrl.currentBootSource];var key=cell[columnIndex].key;return comparedObject[key];};for(var i=0;i<5;++i){ctrl.sortByField.push(sortFunction.bind(null,i));}
ctrl.sourceFacets=[];var facets={created:{label:gettext('Created'),name:'created_at',singleton:true},description:{label:gettext('Description'),name:'description',singleton:true},encrypted:{label:gettext('Encrypted'),name:'encrypted',singleton:true,options:[{label:gettext('Yes'),key:'true'},{label:gettext('No'),key:'false'}]},name:{label:gettext('Name'),name:'name',singleton:true},size:{label:gettext('Size'),name:'size',singleton:true},status:{label:gettext('Status'),name:'status',singleton:true,options:[{label:gettext('Available'),key:'available'},{label:gettext('Creating'),key:'creating'},{label:gettext('Deleting'),key:'deleting'},{label:gettext('Error'),key:'error'},{label:gettext('Error Deleting'),key:'error_deleting'}]},type:{label:gettext('Type'),name:'disk_format',singleton:true,options:diskFormats},updated:{label:gettext('Updated'),name:'updated_at',singleton:true},visibility:{label:gettext('Visibility'),name:'is_public',singleton:true,options:[{label:gettext('Public'),key:'true'},{label:gettext('Private'),key:'false'}]},volumeType:{label:gettext('Type'),name:'volume_image_metadata.disk_format',singleton:true,options:diskFormats}};var sourceTypeFacets={image:[facets.name,facets.updated,facets.size,facets.type,facets.visibility],snapshot:[facets.name,facets.updated,facets.size,facets.type,facets.visibility],volume:[facets.name,facets.description,facets.size,facets.volumeType,facets.encrypted],volume_snapshot:[facets.name,facets.description,facets.size,facets.created,facets.status]};var newSpecWatcher=$scope.$watch(function(){return $scope.model.newInstanceSpec.instance_count;},function(newValue,oldValue){if(newValue!==oldValue){validateBootSourceType();}});var allocatedWatcher=$scope.$watch(function(){return ctrl.tableData.allocated.length;},function(newValue){checkVolumeForImage(newValue);});var bootSourceWatcher=$scope.$watch(function getBootSource(){return ctrl.currentBootSource;},function onBootSourceChange(newValue,oldValue){if(newValue!==oldValue){$scope.$broadcast(events.TABLES_CHANGED,{'data':bootSources[newValue]});}});var imagesWatcher=$scope.$watchCollection(function getImages(){return $scope.model.images;},function onImagesChange(){$scope.initPromise.then(function(){$scope.$applyAsync(function(){if($scope.launchContext.imageId){setSourceImageWithId($scope.launchContext.imageId);}});});});var imageSnapshotsWatcher=$scope.$watchCollection(function getImageSnapshots(){return $scope.model.imageSnapshots;},function onImageSnapshotsChange(){$scope.initPromise.then(function(){$scope.$applyAsync(function(){if($scope.launchContext.imageId){setSourceImageSnapshotWithId($scope.launchContext.imageId);}});});});var volumeWatcher=$scope.$watchCollection(function getVolumes(){return $scope.model.volumes;},function onVolumesChange(){$scope.initPromise.then(function onInit(){$scope.$applyAsync(function setDefaultVolume(){if($scope.launchContext.volumeId){setSourceVolumeWithId($scope.launchContext.volumeId);}});});});var snapshotWatcher=$scope.$watchCollection(function getSnapshots(){return $scope.model.volumeSnapshots;},function onSnapshotsChange(){$scope.initPromise.then(function onInit(){$scope.$applyAsync(function setDefaultSnapshot(){if($scope.launchContext.snapshotId){setSourceSnapshotWithId($scope.launchContext.snapshotId);}});});});var allowedBootSourcesWatcher=$scope.$watchCollection(function getAllowedBootSources(){return $scope.model.allowedBootSources;},function changeBootSource(newValue){if(angular.isArray(newValue)&&newValue.length>0){updateBootSourceSelection(newValue[0].type);$scope.model.newInstanceSpec.source_type=newValue[0];}});var flavorWatcher=$scope.$watchCollection(function(){return $scope.model.newInstanceSpec.flavor;},function setVolumeSize(){var newInstanceSpec=$scope.model.newInstanceSpec;var flavor=newInstanceSpec.flavor;if(flavor&&(newInstanceSpec.vol_size<flavor.disk)){newInstanceSpec.vol_size=flavor.disk;}});$scope.$on('$destroy',function(){allowedBootSourcesWatcher();newSpecWatcher();allocatedWatcher();bootSourceWatcher();imagesWatcher();imageSnapshotsWatcher();volumeWatcher();snapshotWatcher();flavorWatcher();});function updateBootSourceSelection(selectedSource){if(ctrl.currentBootSource!==selectedSource){ctrl.selection.length=0;ctrl.currentBootSource=selectedSource;}
if((selectedSource===bootSourceTypes.IMAGE||selectedSource===bootSourceTypes.INSTANCE_SNAPSHOT)&&$scope.model.volumeBootable){$scope.model.newInstanceSpec.vol_create=$scope.model.newInstanceSpec.create_volume_default;}else{$scope.model.newInstanceSpec.vol_create=false;}
$scope.model.newInstanceSpec.vol_delete_on_instance_delete=false;changeBootSource(selectedSource);validateBootSourceType();}
function changeBootSource(key,preSelection){updateDataSource(key,preSelection);updateHelpText(key);updateTableHeadCells(key);updateTableBodyCells(key);updateFacets(key);}
function updateDataSource(key,preSelection){if(preSelection){ctrl.selection.length=0;push.apply(selection,preSelection);}
angular.extend(ctrl.tableData,bootSources[key]);}
function updateHelpText(){angular.extend(ctrl.helpText,{noneAllocText:gettext('Select a source from those listed below.'),availHelpText:gettext('Select one'),volumeAZHelpText:gettext('When selecting volume as boot source, please ensure the instance\'s availability zone is compatible with your volume\'s availability zone.')});}
function updateTableHeadCells(key){refillArray(ctrl.tableHeadCells,tableHeadCellsMap[key]);}
function updateTableBodyCells(key){refillArray(ctrl.tableBodyCells,tableBodyCellsMap[key]);}
function updateFacets(key){refillArray(ctrl.sourceFacets,sourceTypeFacets[key]);$scope.$broadcast(magicSearchEvents.FACETS_CHANGED);}
function refillArray(arrayToRefill,contentArray){arrayToRefill.length=0;Array.prototype.push.apply(arrayToRefill,contentArray);}
function checkVolumeForImage(){var source=selection[0];if(source&&ctrl.currentBootSource===bootSourceTypes.IMAGE||source&&ctrl.currentBootSource===bootSourceTypes.INSTANCE_SNAPSHOT){var imageGb=source.size*1e-9;var imageDisk=source.min_disk;ctrl.minVolumeSize=Math.ceil(Math.max(imageGb,imageDisk));if($scope.model.newInstanceSpec.vol_size<ctrl.minVolumeSize){$scope.model.newInstanceSpec.vol_size=ctrl.minVolumeSize;}
var volumeSizeText=gettext('The volume size must be at least %(minVolumeSize)s GB');var volumeSizeObj={minVolumeSize:ctrl.minVolumeSize};ctrl.volumeSizeError=interpolate(volumeSizeText,volumeSizeObj,true);}else{ctrl.minVolumeSize=0;ctrl.volumeSizeError=gettext('Volume size is required and must be an integer');}}
function validateBootSourceType(){var bootSourceType=ctrl.currentBootSource;var instanceCount=$scope.model.newInstanceSpec.instance_count;var isValid=bootSourceType!==bootSourceTypes.VOLUME||!instanceCount||instanceCount===1;$scope.launchInstanceSourceForm['boot-source-type'].$setValidity('bootSourceType',isValid);}
function findSourceById(sources,id){var len=sources.length;var source;for(var i=0;i<len;i++){source=sources[i];if(source.id===id){return source;}}}
function setSourceImageWithId(id){var pre=findSourceById($scope.model.images,id);if(pre){changeBootSource(bootSourceTypes.IMAGE,[pre]);$scope.model.newInstanceSpec.source_type={type:bootSourceTypes.IMAGE,label:gettext('Image')};ctrl.currentBootSource=bootSourceTypes.IMAGE;}}
function setSourceImageSnapshotWithId(id){var pre=findSourceById($scope.model.imageSnapshots,id);if(pre){changeBootSource(bootSourceTypes.INSTANCE_SNAPSHOT,[pre]);$scope.model.newInstanceSpec.source_type={type:bootSourceTypes.INSTANCE_SNAPSHOT,label:gettext('Snapshot')};ctrl.currentBootSource=bootSourceTypes.INSTANCE_SNAPSHOT;}}
function setSourceVolumeWithId(id){var pre=findSourceById($scope.model.volumes,id);if(pre){changeBootSource(bootSourceTypes.VOLUME,[pre]);$scope.model.newInstanceSpec.source_type={type:bootSourceTypes.VOLUME,label:gettext('Volume')};ctrl.currentBootSource=bootSourceTypes.VOLUME;}}
function setSourceSnapshotWithId(id){var pre=findSourceById($scope.model.volumeSnapshots,id);if(pre){changeBootSource(bootSourceTypes.VOLUME_SNAPSHOT,[pre]);$scope.model.newInstanceSpec.source_type={type:bootSourceTypes.VOLUME_SNAPSHOT,label:gettext('Snapshot')};ctrl.currentBootSource=bootSourceTypes.VOLUME_SNAPSHOT;}}}})();(function(){'use strict';angular.module('horizon.dashboard.identity.domains.details',['horizon.framework.conf','horizon.app.core']).run(registerDomainDetails);registerDomainDetails.$inject=['horizon.dashboard.identity.domains.basePath','horizon.dashboard.identity.domains.resourceType','horizon.app.core.openstack-service-api.keystone','horizon.framework.conf.resource-type-registry.service'];function registerDomainDetails(basePath,domainResourceType,keystone,registry){registry.getResourceType(domainResourceType).setLoadFunction(loadFunction).detailsViews.append({id:'domainDetailsOverview',name:gettext('Overview'),template:basePath+'details/overview.html'});function loadFunction(identifier){return keystone.getDomain(identifier);}}})();(function(){'use strict';angular.module('horizon.dashboard.identity.domains',['ngRoute','horizon.dashboard.identity.domains.details']).constant('horizon.dashboard.identity.domains.resourceType','OS::Keystone::Domain').run(run).config(config);run.$inject=['horizon.framework.conf.resource-type-registry.service','horizon.dashboard.identity.domains.service','horizon.dashboard.identity.domains.basePath','horizon.dashboard.identity.domains.resourceType'];function run(registry,domainService,basePath,domainResourceType){registry.getResourceType(domainResourceType).setNames(gettext('Domain'),gettext('Domains')).setSummaryTemplateUrl(basePath+'details/drawer.html').setProperties(domainProperties()).setListFunction(domainService.listDomains).tableColumns.append({id:'name',priority:1,sortDefault:true,urlFunction:domainService.getDetailsPath}).append({id:'description',priority:1}).append({id:'id',priority:1}).append({id:'enabled',priority:1});}
function domainProperties(){return{name:{label:gettext('Name'),filters:['noName']},description:{label:gettext('Description'),filters:['noValue']},id:{label:gettext('ID'),filters:['noValue']},enabled:{label:gettext('Enabled'),filters:['yesno']}};}
config.$inject=['$provide','$windowProvider','$routeProvider'];function config($provide,$windowProvider,$routeProvider){var path=$windowProvider.$get().STATIC_URL+'dashboard/identity/domains/';$provide.constant('horizon.dashboard.identity.domains.basePath',path);$routeProvider.when('/identity/domains',{templateUrl:path+'panel.html'});}})();(function(){'use strict';angular.module('horizon.dashboard.identity.groups',['ngRoute']).constant('horizon.dashboard.identity.groups.resourceType','OS::Keystone::Group').run(run).config(config);run.$inject=['horizon.framework.conf.resource-type-registry.service','horizon.app.core.openstack-service-api.keystone','horizon.dashboard.identity.groups.basePath','horizon.dashboard.identity.groups.resourceType'];function run(registry,keystone,basePath,groupResourceType){registry.getResourceType(groupResourceType).setNames(gettext('Group'),gettext('Groups')).setProperties(groupProperties()).setListFunction(listFunction).tableColumns.append({id:'name',priority:1,sortDefault:true}).append({id:'description',priority:1}).append({id:'id',priority:1});registry.getResourceType(groupResourceType).filterFacets.append({label:gettext('Name'),name:'name',singleton:true}).append({label:gettext('ID'),name:'id',singleton:true});function listFunction(){return keystone.getGroups();}
function groupProperties(){return{name:{label:gettext('Name'),filters:['noName']},description:{label:gettext('Description'),filters:['noValue']},id:{label:gettext('ID'),filters:['noValue']}};}}
config.$inject=['$provide','$windowProvider','$routeProvider'];function config($provide,$windowProvider,$routeProvider){var path=$windowProvider.$get().STATIC_URL+'dashboard/identity/groups/';$provide.constant('horizon.dashboard.identity.groups.basePath',path);$routeProvider.when('/identity/groups',{templateUrl:path+'panel.html'});}})();(function(){'use strict';angular.module('horizon.dashboard.identity',['horizon.dashboard.identity.domains','horizon.dashboard.identity.projects','horizon.dashboard.identity.users','horizon.dashboard.identity.groups','horizon.dashboard.identity.roles']).config(config);config.$inject=['$provide','$windowProvider'];function config($provide,$windowProvider){var path=$windowProvider.$get().STATIC_URL+'dashboard/identity/';$provide.constant('horizon.dashboard.identity.basePath',path);}})();(function(){'use strict';angular.module('horizon.dashboard.identity.projects',[]).config(config);config.$inject=['$provide','$windowProvider'];function config($provide,$windowProvider){var path=$windowProvider.$get().STATIC_URL+'dashboard/identity/projects/';$provide.constant('horizon.dashboard.identity.projects.basePath',path);}})();(function(){'use strict';angular.module('horizon.dashboard.identity.roles.actions',['horizon.framework.conf']).run(registerRoleActions);registerRoleActions.$inject=['horizon.framework.conf.resource-type-registry.service','horizon.dashboard.identity.roles.actions.create.service','horizon.dashboard.identity.roles.actions.delete.service','horizon.dashboard.identity.roles.actions.edit.service','horizon.dashboard.identity.roles.resourceType'];function registerRoleActions(registry,createService,deleteService,editService,roleResourceTypeCode){var roleResourceType=registry.getResourceType(roleResourceTypeCode);roleResourceType.itemActions.append({id:'editRoleAction',service:editService,template:{text:gettext('Edit Role')}}).append({id:'deleteAction',service:deleteService,template:{text:gettext('Delete Role'),type:'delete'}});roleResourceType.batchActions.append({id:'batchDeleteAction',service:deleteService,template:{type:'delete-selected',text:gettext('Delete Roles')}});roleResourceType.globalActions.append({id:'createRoleAction',service:createService,template:{type:'create',text:gettext('Create Role')}});}})();(function(){'use strict';angular.module('horizon.dashboard.identity.roles',['ngRoute','horizon.dashboard.identity.roles.actions']).constant('horizon.dashboard.identity.roles.resourceType','OS::Keystone::Role').run(run).config(config);run.$inject=['horizon.framework.conf.resource-type-registry.service','horizon.app.core.openstack-service-api.keystone','horizon.dashboard.identity.roles.resourceType'];function run(registry,keystone,roleResourceType){registry.getResourceType(roleResourceType).setNames(gettext('Role'),gettext('Roles')).setProperties(roleProperties()).setListFunction(listFunction).tableColumns.append({id:'name',priority:1,sortDefault:true}).append({id:'id',priority:1});function listFunction(){return keystone.getRoles().then(addTrackBy);}
function addTrackBy(response){return{data:{items:response.data.items.map(function(role){role.trackBy=[role.id,role.domain_id,role.name].join('/');return role;})}};}
function roleProperties(){return{name:{label:gettext('Name'),filters:['noName']},id:{label:gettext('ID'),filters:['noValue']}};}}
config.$inject=['$provide','$windowProvider','$routeProvider'];function config($provide,$windowProvider,$routeProvider){var path=$windowProvider.$get().STATIC_URL+'dashboard/identity/roles/';$provide.constant('horizon.dashboard.identity.roles.basePath',path);$routeProvider.when('/identity/roles',{templateUrl:path+'panel.html'});}})();(function(){'use strict';angular.module('horizon.dashboard.identity.users.actions',['horizon.framework.conf']).run(registerUserActions).config(config);registerUserActions.$inject=['horizon.framework.conf.resource-type-registry.service','horizon.dashboard.identity.users.actions.create.service','horizon.dashboard.identity.users.actions.update.service','horizon.dashboard.identity.users.actions.password.service','horizon.dashboard.identity.users.actions.enable.service','horizon.dashboard.identity.users.actions.disable.service','horizon.dashboard.identity.users.actions.delete.service','horizon.dashboard.identity.users.resourceType'];function registerUserActions(registry,createService,updateService,passwordService,enableService,disableService,deleteService,userResourceTypeCode){var userResourceType=registry.getResourceType(userResourceTypeCode);userResourceType.itemActions.append({id:'updateAction',service:updateService,template:{text:gettext('Edit User'),type:'row'}}).append({id:'passwordAction',service:passwordService,template:{text:gettext('Change Password'),type:'row'}}).append({id:'enableAction',service:enableService,template:{text:gettext('Enable User'),type:'row'}}).append({id:'disableAction',service:disableService,template:{text:gettext('Disable User'),type:'row'}}).append({id:'deleteAction',service:deleteService,template:{text:gettext('Delete User'),type:'delete'}});userResourceType.batchActions.append({id:'batchDeleteAction',service:deleteService,template:{type:'delete-selected',text:gettext('Delete Users')}});userResourceType.globalActions.append({id:'createUserAction',service:createService,template:{type:'create',text:gettext('Create User')}});}
config.$inject=['$provide','$windowProvider'];function config($provide,$windowProvider){var path=$windowProvider.$get().STATIC_URL+'dashboard/identity/users/actions/';$provide.constant('horizon.dashboard.identity.users.actions.basePath',path);}})();(function(){'use strict';angular.module('horizon.dashboard.identity.users.details',['horizon.framework.conf','horizon.app.core']).run(registerUserDetails);registerUserDetails.$inject=['horizon.dashboard.identity.users.basePath','horizon.dashboard.identity.users.resourceType','horizon.framework.conf.resource-type-registry.service','horizon.dashboard.identity.users.service'];function registerUserDetails(basePath,userResourceType,registry,usersService){registry.getResourceType(userResourceType).setLoadFunction(usersService.getUserPromise).detailsViews.append({id:'userDetailsOverview',name:gettext('Overview'),template:basePath+'details/overview.html'});}})();(function(){'use strict';angular.module('horizon.dashboard.identity.users',['ngRoute','horizon.dashboard.identity.users.details','horizon.dashboard.identity.users.actions']).constant('horizon.dashboard.identity.users.resourceType','OS::Keystone::User').constant('horizon.dashboard.identity.users.validationRules',validationRules()).run(run).config(config);run.$inject=['horizon.framework.conf.resource-type-registry.service','horizon.dashboard.identity.users.basePath','horizon.dashboard.identity.users.resourceType','horizon.dashboard.identity.users.service'];function run(registry,basePath,userResourceType,usersService){registry.getResourceType(userResourceType).setNames(gettext('User'),gettext('Users')).setSummaryTemplateUrl(basePath+'details/drawer.html').setProperties(userProperties()).setListFunction(usersService.getUsersPromise).setNeedsFilterFirstFunction(usersService.getFilterFirstSettingPromise).tableColumns.append({id:'name',priority:1,sortDefault:true,urlFunction:usersService.getDetailsPath}).append({id:'email',priority:2,filters:['noValue'],template:'<a ng-href="mailto:{$ item.email $}">{$ item.email $}</a>'}).append({id:'id',priority:1}).append({id:'enabled',priority:2,filters:['yesno']});registry.getResourceType(userResourceType).filterFacets.append({label:gettext('Name'),name:'name',singleton:true,isServer:true}).append({label:gettext('Email'),name:'email',singleton:true}).append({label:gettext('ID'),name:'id',singleton:true,isServer:true}).append({label:gettext('Enabled'),name:'enabled',singleton:true,isServer:true,options:[{label:gettext('Yes'),key:'true'},{label:gettext('No'),key:'false'}]});function userProperties(){return{name:gettext('Name'),email:{label:gettext('Email'),filters:['noValue']},id:gettext('ID'),enabled:{label:gettext('Enabled'),filters:['yesno']},domain_id:{label:gettext('Domain ID'),filters:['noValue']},domain_name:{label:gettext('Domain Name'),filters:['noValue']},description:{label:gettext('Description'),filters:['noValue']},default_project_id:{label:gettext('Primary Project ID'),filters:['noValue']},project_name:{label:gettext('Primary Project Name'),filters:['noValue']}};}}
function validationRules(){return{integer:/^[0-9]+$/,validatePassword:/.*/,fieldMaxLength:255};}
config.$inject=['$provide','$windowProvider','$routeProvider'];function config($provide,$windowProvider,$routeProvider){var path=$windowProvider.$get().STATIC_URL+'dashboard/identity/users/';$provide.constant('horizon.dashboard.identity.users.basePath',path);$routeProvider.when('/identity/users',{templateUrl:path+'panel.html'});}})();(function(){"use strict";angular.module('horizon.dashboard.identity.domains').controller('DomainOverviewController',DomainOverviewController);DomainOverviewController.$inject=['horizon.dashboard.identity.domains.resourceType','horizon.framework.conf.resource-type-registry.service','$scope'];function DomainOverviewController(domainResourceType,registry,$scope){var ctrl=this;ctrl.domain={};ctrl.resourceType=registry.getResourceType(domainResourceType);$scope.context.loadPromise.then(onGetDomain);function onGetDomain(domain){ctrl.domain=domain.data;}}})();(function(){"use strict";angular.module('horizon.dashboard.identity.domains').factory('horizon.dashboard.identity.domains.service',domainService);domainService.$inject=['$q','horizon.app.core.openstack-service-api.keystone','horizon.app.core.openstack-service-api.policy','horizon.app.core.openstack-service-api.settings','horizon.app.core.detailRoute'];function domainService($q,keystone,policy,settingsService,detailRoute){return{getDetailsPath:getDetailsPath,getDomainPromise:getDomainPromise,listDomains:listDomains};function getDetailsPath(item){return detailRoute+'OS::Keystone::Domain/'+item.id;}
function listDomains(){var defaultDomain=null;var KEYSTONE_DEFAULT_DOMAIN=null;return $q.all([keystone.getDomain('default'),settingsService.getSetting('OPENSTACK_KEYSTONE_DEFAULT_DOMAIN')]).then(allowed);function allowed(results){defaultDomain=results[0].data;KEYSTONE_DEFAULT_DOMAIN=results[1];var rules=[['identity','identity:list_domains']];return policy.ifAllowed({rules:rules}).then(policySuccess,policyFailed);}
function policySuccess(){if(isDefaultDomain()){return keystone.getDomains().then(getDomainSuccess);}else{return keystone.getDomain(defaultDomain.id).then(getDomainSuccess);}}
function policyFailed(){return keystone.getDomain(defaultDomain.id).then(getDomainSuccess);}
function getDomainSuccess(response){if(!angular.isArray(response.data.items)){response.data.items=[response.data];}
return{data:{items:response.data.items.map(modifyDomain)}};function modifyDomain(domain){domain.trackBy=domain.id;return domain;}}
function isDefaultDomain(){return defaultDomain.name===KEYSTONE_DEFAULT_DOMAIN;}}
function getDomainPromise(identifier){return keystone.getDomain(identifier);}}})();(function(){'use strict';angular.module('horizon.dashboard.identity.roles').factory('horizon.dashboard.identity.roles.actions.create.service',createService);createService.$inject=['horizon.dashboard.identity.roles.resourceType','horizon.dashboard.identity.roles.role-schema','horizon.app.core.openstack-service-api.keystone','horizon.app.core.openstack-service-api.policy','horizon.framework.widgets.form.ModalFormService','horizon.framework.util.actions.action-result.service','horizon.framework.util.i18n.gettext','horizon.framework.widgets.toast.service'];function createService(resourceType,schema,keystoneAPI,policy,modalFormService,actionResultService,gettext,toast){var service={allowed:allowed,perform:perform,submit:submit};return service;function allowed(){return policy.ifAllowed({rules:[['identity','identity:create_role']]});}
function perform(){var model={name:''};var config={title:gettext('Create Role'),schema:schema,form:['*'],model:model};return modalFormService.open(config).then(submit);}
function submit(context){return keystoneAPI.createRole({name:context.model.name}).then(onSuccess);}
function onSuccess(response){var role=response.data;toast.add('success',interpolate(gettext('Role %s was successfully created.'),[role.name]));return actionResultService.getActionResult().created(resourceType,role.id).result;}}})();(function(){'use strict';angular.module('horizon.dashboard.identity.roles').factory('horizon.dashboard.identity.roles.actions.delete.service',deleteRoleService);deleteRoleService.$inject=['horizon.app.core.openstack-service-api.keystone','horizon.app.core.openstack-service-api.policy','horizon.framework.util.actions.action-result.service','horizon.framework.util.i18n.ngettext','horizon.framework.widgets.modal.deleteModalService','horizon.dashboard.identity.roles.resourceType'];function deleteRoleService(keystone,policy,actionResultService,ngettext,deleteModal,roleResourceType){return{allowed:allowed,perform:perform,deleteResult:deleteResult};function allowed(){return policy.ifAllowed({rules:[['identity','identity:delete_role']]});}
function perform(items,scope){var roles=angular.isArray(items)?items:[items];var context={labels:labelize(roles.length),deleteEntity:function deleteRole(role){return keystone.deleteRole(role);}};return deleteModal.open(scope,roles,context).then(deleteResult);}
function deleteResult(deleteModalResult){var actionResult=actionResultService.getActionResult();deleteModalResult.pass.forEach(function markDeleted(item){actionResult.deleted(roleResourceType,item.context.id);});deleteModalResult.fail.forEach(function markFailed(item){actionResult.failed(roleResourceType,item.context.id);});return actionResult.result;}
function labelize(count){return{title:ngettext('Confirm Delete Role','Confirm Delete Roles',count),message:ngettext('You have selected "%s". Deleted role is not recoverable.','You have selected "%s". Deleted roles are not recoverable.',count),submit:ngettext('Delete Role','Delete Roles',count),success:ngettext('Deleted Role: %s.','Deleted Roles: %s.',count),error:ngettext('Unable to delete Role: %s.','Unable to delete Roles: %s.',count)};}}})();(function(){'use strict';angular.module('horizon.dashboard.identity.roles').factory('horizon.dashboard.identity.roles.actions.edit.service',editService);editService.$inject=['horizon.dashboard.identity.roles.resourceType','horizon.dashboard.identity.roles.role-schema','horizon.app.core.openstack-service-api.keystone','horizon.app.core.openstack-service-api.policy','horizon.framework.widgets.form.ModalFormService','horizon.framework.util.actions.action-result.service','horizon.framework.widgets.toast.service'];function editService(resourceType,schema,keystoneAPI,policy,modalFormService,actionResultService,toast){var service={allowed:allowed,perform:perform,onLoad:onLoad,submit:submit,onSuccess:onSuccess};return service;function allowed(){return policy.ifAllowed({rules:[['identity','identity:update_role']]});}
function perform(role){return keystoneAPI.getRole(role.id).then(service.onLoad);}
function onLoad(response){var config={title:gettext('Edit Role'),schema:schema,form:['*'],model:response.data};return modalFormService.open(config).then(service.submit);}
function submit(context){return keystoneAPI.editRole(context.model).then(service.onSuccess);}
function onSuccess(response){toast.add('success',gettext('Role updated successfully.'));return actionResultService.getActionResult().updated(resourceType,response.config.data.id).result;}}})();(function(){'use strict';angular.module('horizon.dashboard.identity.roles').factory('horizon.dashboard.identity.roles.role-schema',schema);schema.$inject=['horizon.framework.util.i18n.gettext'];function schema(gettext){return{type:'object',properties:{name:{title:gettext('Name'),type:'string'}},required:['name']};}})();(function(){'use strict';angular.module('horizon.dashboard.identity.users').factory('horizon.dashboard.identity.users.actions.create.service',createService);createService.$inject=['$q','horizon.dashboard.identity.users.resourceType','horizon.dashboard.identity.users.actions.basePath','horizon.dashboard.identity.users.actions.workflow.service','horizon.app.core.openstack-service-api.keystone','horizon.app.core.openstack-service-api.policy','horizon.framework.util.actions.action-result.service','horizon.framework.widgets.form.ModalFormService','horizon.framework.widgets.toast.service'];function createService($q,resourceType,basePath,workflow,keystone,policy,actionResultService,modal,toast){var message={success:gettext('User %s was successfully created.')};return{allowed:allowed,perform:perform,submit:submit};function allowed(){return policy.ifAllowed({rules:[['identity','identity:create_user']]});}
function perform(){var config=workflow.init("create");config.title=gettext("Create User");return modal.open(config).then(submit);}
function submit(context){return keystone.createUser(context.model).then(success);}
function success(response){var user=response.data;toast.add('success',interpolate(message.success,[user.name]));return actionResultService.getActionResult().created(resourceType,user.id).result;}}})();(function(){'use strict';angular.module('horizon.dashboard.identity.users').factory('horizon.dashboard.identity.users.actions.delete.service',deleteUserService);deleteUserService.$inject=['$q','horizon.app.core.openstack-service-api.keystone','horizon.app.core.openstack-service-api.policy','horizon.framework.util.actions.action-result.service','horizon.framework.util.i18n.gettext','horizon.framework.widgets.modal.deleteModalService','horizon.framework.widgets.toast.service','horizon.dashboard.identity.users.resourceType'];function deleteUserService($q,keystone,policy,actionResultService,gettext,deleteModal,toast,userResourceType){var service={allowed:allowed,perform:perform,deleteResult:deleteResult};return service;function allowed(){return policy.ifAllowed({rules:[['identity','identity:delete_user']]});}
function perform(items,scope){var users=angular.isArray(items)?items:[items];var context={labels:labelize(users.length),deleteEntity:deleteUser};return deleteModal.open(scope,users,context).then(deleteResult);}
function deleteResult(deleteModalResult){var actionResult=actionResultService.getActionResult();deleteModalResult.pass.forEach(function markDeleted(item){actionResult.deleted(userResourceType,item.context.id);});deleteModalResult.fail.forEach(function markFailed(item){actionResult.failed(userResourceType,item.context.id);});return actionResult.result;}
function labelize(count){return{title:ngettext('Confirm Delete User','Confirm Delete Users',count),message:ngettext('You have selected "%s". Deleted user is not recoverable.','You have selected "%s". Deleted users are not recoverable.',count),submit:ngettext('Delete User','Delete Users',count),success:ngettext('Deleted User: %s.','Deleted Users: %s.',count),error:ngettext('Unable to delete User: %s.','Unable to delete Users: %s.',count)};}
function deleteUser(user){return keystone.deleteUser(user);}}})();(function(){'use strict';angular.module('horizon.dashboard.identity.users').factory('horizon.dashboard.identity.users.actions.disable.service',disableService);disableService.$inject=['$q','horizon.dashboard.identity.users.resourceType','horizon.app.core.openstack-service-api.keystone','horizon.app.core.openstack-service-api.policy','horizon.framework.util.actions.action-result.service','horizon.framework.util.q.extensions','horizon.framework.widgets.toast.service'];function disableService($q,resourceType,keystone,policy,actionResultService,$qExtensions,toast){var message={success:gettext('User %s was successfully disabled.')};var service={allowed:allowed,perform:perform};return service;function allowed(selected){return $q.all([$qExtensions.booleanAsPromise(selected.enabled),policy.ifAllowed({rules:[['identity','identity:update_user']]})]);}
function perform(selected){return keystone.editUser({id:selected.id,enabled:false}).then(success);function success(){toast.add('success',interpolate(message.success,[selected.name]));return actionResultService.getActionResult().updated(resourceType,selected.id).result;}}}})();(function(){'use strict';angular.module('horizon.dashboard.identity.users').factory('horizon.dashboard.identity.users.actions.enable.service',enableService);enableService.$inject=['$q','horizon.dashboard.identity.users.resourceType','horizon.app.core.openstack-service-api.keystone','horizon.app.core.openstack-service-api.policy','horizon.framework.util.actions.action-result.service','horizon.framework.util.q.extensions','horizon.framework.widgets.toast.service'];function enableService($q,resourceType,keystone,policy,actionResultService,$qExtensions,toast){var message={success:gettext('User %s was successfully enabled.')};var service={allowed:allowed,perform:perform};return service;function allowed(selected){return $q.all([$qExtensions.booleanAsPromise(!selected.enabled),policy.ifAllowed({rules:[['identity','identity:update_user']]})]);}
function perform(selected){return keystone.editUser({id:selected.id,enabled:true}).then(success);function success(){toast.add('success',interpolate(message.success,[selected.name]));return actionResultService.getActionResult().updated(resourceType,selected.id).result;}}}})();(function(){'use strict';angular.module('horizon.dashboard.identity.users').factory('horizon.dashboard.identity.users.actions.password.service',passwordService);passwordService.$inject=['$q','horizon.dashboard.identity.users.resourceType','horizon.dashboard.identity.users.actions.basePath','horizon.dashboard.identity.users.actions.workflow.service','horizon.app.core.openstack-service-api.keystone','horizon.app.core.openstack-service-api.policy','horizon.app.core.openstack-service-api.settings','horizon.framework.util.actions.action-result.service','horizon.framework.widgets.form.ModalFormService','horizon.framework.widgets.toast.service'];function passwordService($q,resourceType,basePath,workflow,keystone,policy,settings,actionResultService,modal,toast){var message={success:gettext('User password has been updated successfully.')};return{allowed:allowed,perform:perform,submit:submit};function allowed(){return policy.ifAllowed({rules:[['identity','identity:update_user']]});}
function perform(selected,scope,errorCode){return settings.getSetting('ENFORCE_PASSWORD_CHECK',false).then(function(response){var adminPassword=response;return keystone.getUser(selected.id).then(function(response){var config=workflow.init("password",adminPassword,errorCode);config.title=gettext("Change Password");config.model={};config.model.id=response.data.id;config.model.domain_name=response.data.domain_name;config.model.domain_id=response.data.domain_id;config.model.name=response.data.name;return modal.open(config).then(submit);});});}
function submit(context){delete context.model.domain_name;delete context.model.domain_id;delete context.model.enabled;return keystone.editUser(context.model).then(success,error);function success(){toast.add('success',message.success);return actionResultService.getActionResult().updated(resourceType,context.model.id).result;}
function error(response){if(response.status===400){perform(context.model,null,response.data);}else{return actionResultService.getActionResult().updated(resourceType,context.model.id).result;}}}}})();(function(){'use strict';angular.module('horizon.dashboard.identity.users').factory('horizon.dashboard.identity.users.actions.update.service',updateService);updateService.$inject=['$q','horizon.dashboard.identity.users.resourceType','horizon.dashboard.identity.users.actions.basePath','horizon.dashboard.identity.users.actions.workflow.service','horizon.app.core.openstack-service-api.keystone','horizon.app.core.openstack-service-api.policy','horizon.framework.util.actions.action-result.service','horizon.framework.widgets.form.ModalFormService','horizon.framework.widgets.toast.service'];function updateService($q,resourceType,basePath,workflow,keystone,policy,actionResultService,modal,toast){var message={success:gettext('User %s was successfully updated.')};return{allowed:allowed,perform:perform,submit:submit};function allowed(){return policy.ifAllowed({rules:[['identity','identity:update_user']]});}
function perform(selected){return keystone.getUser(selected.id).then(function(response){var config=workflow.init("update");config.title=gettext("Edit User");config.model={};config.model.id=response.data.id;config.model.domain_name=response.data.domain_name;config.model.domain_id=response.data.domain_id;config.model.name=response.data.name;config.model.email=response.data.email;config.model.description=response.data.description;config.model.project=response.data.default_project_id;return modal.open(config).then(submit);});}
function submit(context){delete context.model.domain_name;delete context.model.domain_id;delete context.model.enabled;return keystone.editUser(context.model).then(success);function success(){toast.add('success',interpolate(message.success,[context.model.name]));return actionResultService.getActionResult().updated(resourceType,context.model.id).result;}}}})();(function(){'use strict';angular.module('horizon.dashboard.identity.users.actions').factory('horizon.dashboard.identity.users.actions.workflow.service',UserWorkflow);UserWorkflow.$inject=['horizon.app.core.openstack-service-api.keystone','horizon.dashboard.identity.users.basePath'];function UserWorkflow(keystone,basePath){var workflow={init:init};function init(action,adminPassword,errorCode){var errorTemplate=typeof errorCode==="string"?errorCode.toLowerCase().replace(/_/g,"-"):"default";var schema={type:'object',properties:{domain_name:{title:gettext('Domain Name'),type:'string',readOnly:true},domain_id:{title:gettext('Domain Id'),type:'string',readOnly:true},name:{title:gettext('User Name'),type:'string'},email:{title:gettext('Email'),type:'string'},password:{title:gettext('Password'),type:'string'},admin_password:{title:gettext('Admin Password'),type:'string'},project:{title:gettext('Primary Project'),type:'string'},role:{title:gettext('Role'),type:'string'},description:{title:gettext('Description'),type:'string'},enabled:{title:gettext('Enabled'),type:'boolean',default:true}},required:['name','password','project','role','enabled']};if(adminPassword){schema.required.push('admin_password');}
var form=[{type:'section',htmlClass:'row',items:[{type:'section',htmlClass:'col-sm-12',items:[{type:'template',templateUrl:basePath+"actions/workflow/error."+errorTemplate+".html",condition:errorTemplate==="default"},{type:'template',templateUrl:basePath+"actions/workflow/info."+action+".help.html"},{key:'domain_name'},{key:'domain_id'},{key:'name',readonly:action==='password'},{key:'email',condition:action==='password'},{key:'password',type:'password',condition:action==='update'},{key:'confirm',type:'password-confirm',title:'Confirm Password',match:'model.password',condition:action==='update'},{key:'admin_password',type:'password',condition:!(action==='password'&&adminPassword)},{key:'project',type:'select',titleMap:[],condition:action==='password'},{key:'role',type:'select',titleMap:[],condition:action==='update'||action==='password'},{key:'description',condition:action==='password'},{key:'enabled',condition:action==='update'||action==='password'}]}]}];var model={};var config={schema:schema,form:form,model:model};keystone.getVersion().then(function(response){var apiVersion=response.data.version;var domainName=config.form[0].items[0].items[1];var domainId=config.form[0].items[0].items[2];if(apiVersion!=="3"){domainName.condition=true;domainId.condition=true;}
return apiVersion;});keystone.getDefaultDomain().then(function(response){config.model.domain_name=response.data.name;config.model.domain_id=response.data.id;return response.data;});keystone.getProjects().then(function(response){var projectField=config.form[0].items[0].items[8];projectField.titleMap=response.data.items.map(function each(item){return{value:item.id,name:item.name};});});keystone.getRoles().then(function(response){var roleField=config.form[0].items[0].items[9];roleField.titleMap=response.data.items.map(function each(item){return{value:item.id,name:item.name};});});return config;}
return workflow;}})();(function(){"use strict";angular.module('horizon.dashboard.identity.users').controller('UserOverviewController',UserOverviewController);UserOverviewController.$inject=['horizon.dashboard.identity.users.resourceType','horizon.framework.conf.resource-type-registry.service','$scope'];function UserOverviewController(userResourceType,registry,$scope){var ctrl=this;ctrl.user={};ctrl.resourceType=registry.getResourceType(userResourceType);$scope.context.loadPromise.then(onGetUser);function onGetUser(user){ctrl.user=user.data;}}})();(function(){"use strict";angular.module('horizon.dashboard.identity.users').factory('horizon.dashboard.identity.users.service',userService);userService.$inject=['$q','horizon.app.core.openstack-service-api.keystone','horizon.app.core.detailRoute','horizon.app.core.openstack-service-api.settings'];function userService($q,keystone,detailRoute,settings){return{getDetailsPath:getDetailsPath,getUserPromise:getUserPromise,getUsersPromise:getUsersPromise,getFilterFirstSettingPromise:getFilterFirstSettingPromise};function getDetailsPath(item){return detailRoute+'OS::Keystone::User/'+item.id;}
function getUsersPromise(params){return keystone.getUsers(params).then(modifyResponse);function modifyResponse(response){return{data:{items:response.data.items.map(modifyItem)}};function modifyItem(item){item.trackBy=item.id+item.name+item.email+item.project+
item.description+item.enabled;return item;}}}
function getUserPromise(identifier){return $q.all([keystone.getVersion(),keystone.getUser(identifier)]).then(getUserDetails);}
function getUserDetails(response){var version=response[0].data.version;var user=response[1];if(user.data.default_project_id){keystone.getProject(user.data.default_project_id).then(addProjectName);}
if(version&&version>=3){return keystone.getDomain(user.data.domain_id).then(modifyResponse);}else{return user;}
function addProjectName(project){user.data.project_name=project.data.name;return user;}
function modifyResponse(domain){user.data.domain_name=domain.data.name;return user;}}
function getFilterFirstSettingPromise(){return settings.getSetting('FILTER_DATA_FIRST',{'identity.users':false}).then(resolve);function resolve(result){return result['identity.users'];}}}})();